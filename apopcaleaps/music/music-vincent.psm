
:- set_prolog_flag(warning,off).

use_module(_).
module(_,_).

%   File   : ASSOC.PL
%   Author : R.A.O'Keefe
%   Updated: 9 November 1983
%   Purpose: Binary tree implementation of "association lists".

%   Note   : the keys should be ground, the associated values need not be.

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Adapted for SWI-Prolog by Jan Wielemaker, January 2004.

To the best of my knowledge, this file   is in the public domain and can
therefore safely be distributed with SWI-Prolog and used in applications
without restrictions.

Various versions of this file exists. This   one  is copied from the YAP
library. The SICStus library contains  one   using  ALV  trees to ensure
proper balancing. Although based  on  this   library  they  changed  the
argument order of some of the predicates.

Richard O'Keefe has told me he  is  working   on  a  new version of this
library. This new version, as it becomes available, is likely to replace
this one.

If you wish to use this library  in   an  application, be aware that its
interface may change. If the new version   becomes  available it will be
documented in the SWI-Prolog Reference Manual.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

:- module(assoc,
	  [ assoc_to_list/2,		% +Assoc, -List
	    empty_assoc/1,		% -Assoc
	    gen_assoc/3,		% +Assoc, ?Key, ?Value
	    get_assoc/3,		% +Key, +Assoc, -Value
	    get_assoc/5,		% +Key, +Assoc, +Old, -NewAssoc, +New
	    list_to_assoc/2,		% +List, -Assoc
	    map_assoc/3,		% :Goal, +AssocIn, -AssocOut
	    ord_list_to_assoc/2,	% +List, -Assoc
	    put_assoc/4			% +Key, +Assoc, +Value, -NewAssoc
	  ]).

%:- meta_predicate map_assoc(:, ?, ?).

empty_assoc(t).

assoc_to_list(Assoc, List) :-
	assoc_to_list(Assoc, List, []).


assoc_to_list(t(Key,Val,L,R), List, Rest) :-
	assoc_to_list(L, List, [Key-Val|More]),
	assoc_to_list(R, More, Rest).
assoc_to_list(t, List, List).


gen_assoc(t(_,_,L,_), Key, Val) :-
	gen_assoc(L, Key, Val).
gen_assoc(t(Key,Val,_,_), Key, Val).
gen_assoc(t(_,_,_,R), Key, Val) :-
	gen_assoc(R, Key, Val).


get_assoc(Key, t(K,V,L,R), Val) :-
	compare(Rel, Key, K),
	get_assoc(Rel, Key, V, L, R, Val).


get_assoc(=, _, Val, _, _, Val).
get_assoc(<, Key, _, Tree, _, Val) :-
	get_assoc(Key, Tree, Val).
get_assoc(>, Key, _, _, Tree, Val) :-
	get_assoc(Key, Tree, Val).


get_assoc(Key, t(K,V,L,R), Val, t(K,NV,NL,NR), NVal) :-
	compare(Rel, Key, K),
	get_assoc(Rel, Key, V, L, R, Val, NV, NL, NR, NVal).


get_assoc(=, _, Val, L, R, Val, NVal, L, R, NVal).
get_assoc(<, Key, V, L, R, Val, V, NL, R, NVal) :-
	get_assoc(Key, L, Val, NL, NVal).
get_assoc(>, Key, V, L, R, Val, V, L, NR, NVal) :-
	get_assoc(Key, R, Val, NR, NVal).


list_to_assoc(List, Assoc) :-
	list_to_assoc(List, t, Assoc).

list_to_assoc([], Assoc, Assoc).
list_to_assoc([Key-Val|List], Assoc0, Assoc) :-
	put_assoc(Key, Assoc0, Val, AssocI),
	list_to_assoc(List, AssocI, Assoc).

ord_list_to_assoc(Keys, Assoc) :-
	length(Keys, L),
	ord_list_to_assoc(L, Keys, Assoc, []).

ord_list_to_assoc(0, List, t, List) :- !.
ord_list_to_assoc(N, List, t(Key,Val,L,R), Rest) :-
	A is (N-1)//2,
	Z is (N-1)-A,
	ord_list_to_assoc(A, List, L, [Key-Val|More]),
	ord_list_to_assoc(Z, More, R, Rest).


map_assoc(Pred, t(Key,Val,L0,R0), t(Key,Ans,L1,R1)) :- !,
	map_assoc(Pred, L0, L1),
	call(Pred, Val, Ans),
	map_assoc(Pred, R0, R1).
map_assoc(_, t, t).


put_assoc(Key, t(K,V,L,R), Val, New) :- !,
	compare(Rel, Key, K),
	put_assoc(Rel, Key, K, V, L, R, Val, New).
put_assoc(Key, t, Val, t(Key,Val,t,t)).


put_assoc(=, Key, _, _, L, R, Val, t(Key,Val,L,R)).
put_assoc(<, Key, K, V, L, R, Val, t(K,V,Tree,R)) :-
	put_assoc(Key, L, Val, Tree).
put_assoc(>, Key, K, V, L, R, Val, t(K,V,L,Tree)) :-
	put_assoc(Key, R, Val, Tree).



/*  $Id: chr_hashtable_store.pl,v 1.9 2006/03/10 14:13:15 toms Exp $

    Part of CHR (Constraint Handling Rules)

    Author:        Tom Schrijvers
    E-mail:        Tom.Schrijvers@cs.kuleuven.be
    WWW:           http://www.swi-prolog.org
    Copyright (C): 2003-2004, K.U. Leuven

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    As a special exception, if you link this library with other files,
    compiled with a Free Software compiler, to produce an executable, this
    library does not by itself cause the resulting executable to be covered
    by the GNU General Public License. This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.
*/
% author: Tom Schrijvers
% email:  Tom.Schrijvers@cs.kuleuven.be
% copyright: K.U.Leuven, 2004

:- module(chr_hashtable_store,
	[ new_ht/1,
	  lookup_ht/3,
	  insert_ht/3,
	  delete_ht/3,
	  value_ht/2
	]).

:- use_module(assoc).
:- use_module(lists).


new_ht(ht(Assoc)) :- empty_assoc(Assoc).

lookup_ht(ht(Assoc),Key,List) :-
	get_assoc(Key,Assoc,List).
		
insert_ht(HT,Key,Value) :-
	HT = ht(Assoc),
	( get_assoc(Key,Assoc,List) ->
		put_assoc(Key,Assoc,[Value|List],NAssoc)
	;
		put_assoc(Key,Assoc,[Value],NAssoc)
	),
	setarg(1,HT,NAssoc).

delete_ht(HT,Key,Value) :-
	HT = ht(Assoc),
	( get_assoc(Key,Assoc,List) ->
		delete(List,Value,NList),
		put_assoc(Key,Assoc,NList,NAssoc),
		setarg(1,HT,NAssoc)
	;
		true
	)        
        , !.


value_ht(HT,Value) :-
        HT = ht(Assoc),
	gen_assoc(Assoc,_,List),
	member(Value,List).


/*  $Id: lists.pl,v 1.5 2004/09/21 14:22:23 jan Exp $

    Part of SWI-Prolog

    Author:        Jan Wielemaker and Richard O'Keefe
    E-mail:        jan@swi.psy.uva.nl
    WWW:           http://www.swi-prolog.org
    Copyright (C): 1985-2002, University of Amsterdam

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    As a special exception, if you link this library with other files,
    compiled with a Free Software compiler, to produce an executable, this
    library does not by itself cause the resulting executable to be covered
    by the GNU General Public License. This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.
*/

:- module(lists,
	[ member/2,
	  append/3,
	  select/3,
	  nextto/3,			% ?X, ?Y, ?List
	  delete/3,
%	  nth0/3,
%	  nth1/3,
	  last/2,			% +List, -Element
	  reverse/2,			% +List, -Reversed
	  permutation/2,		% ?List, ?Permutation
	  flatten/2,			% +Nested, -Flat
	  sumlist/2,			% +List, -Sum
	  numlist/3,			% +Low, +High, -List

	  is_set/1,			% set manipulation
	  list_to_set/2,		% +List, -Set
	  intersection/3,
	  union/3,
	  subset/2,
	  subtract/3,
	  memberchk/2
	]).
%:- set_prolog_flag(generate_debug_info, false).

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Some of these predicates are copied from   "The  Craft of Prolog" and/or
the DEC-10 Prolog library (LISTRO.PL). Contributed by Richard O'Keefe.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

%	member(?Elem, ?List)
%	
%	True if Elem is a member of List

%member(X, [X|_]).
%member(X, [_|T]) :-
%	member(X, T).

%	append(?List1, ?List2, ?List1AndList2)
%	
%	List1AndList2 is the concatination of List1 and List2

%append([], L, L).
%append([H|T], L, [H|R]) :-
%	append(T, L, R).

%	select(?Elem, ?List1, ?List2)
%
%	Is true when List1, with Elem removed results in List2.

select(X, [X|Tail], Tail).
select(Elem, [Head|Tail], [Head|Rest]) :-
	select(Elem, Tail, Rest).


%	nextto(?X, ?Y, ?List)
%	
%	True of Y follows X in List.

nextto(X, Y, [X,Y|_]).
nextto(X, Y, [_|Zs]) :-
	nextto(X, Y, Zs).

%	delete(?List1, ?Elem, ?List2)
%
%	Is true when Lis1, with all occurences of Elem deleted results in
%	List2.

delete([], _, []) :- !.
delete([Elem|Tail], Elem, Result) :- !, 
	delete(Tail, Elem, Result).
delete([Head|Tail], Elem, [Head|Rest]) :-
	delete(Tail, Elem, Rest).

/*  nth0/3, nth1/3 are improved versions from
    Martin Jansche <martin@pc03.idf.uni-heidelberg.de>
*/

%%  nth0(?Index, ?List, ?Elem)
%%  is true when Elem is the Index'th element of List.  Counting starts
%%  at 0.  [This is a faster version of the original SWI-Prolog predicate.]
/*
nth0(Index, List, Elem) :-
        integer(Index), !,
        Index >= 0,
        nth0_det(Index, List, Elem).    %% take nth deterministically
nth0(Index, List, Elem) :-
        var(Index), !,
        nth_gen(List, Elem, 0, Index).  %% match

nth0_det(0, [Elem|_], Elem) :- !.
nth0_det(1, [_,Elem|_], Elem) :- !.
nth0_det(2, [_,_,Elem|_], Elem) :- !.
nth0_det(3, [_,_,_,Elem|_], Elem) :- !.
nth0_det(4, [_,_,_,_,Elem|_], Elem) :- !.
nth0_det(5, [_,_,_,_,_,Elem|_], Elem) :- !.
nth0_det(N, [_,_,_,_,_,_   |Tail], Elem) :-
        M is N - 6,
        nth0_det(M, Tail, Elem).

nth_gen([Elem|_], Elem, Base, Base).
nth_gen([_|Tail], Elem, N, Base) :-
        %succ(N, M),
        M is N+1,
        nth_gen(Tail, Elem, M, Base).


%%  nth1(?Index, ?List, ?Elem)
%%  Is true when Elem is the Index'th element of List.  Counting starts
%%  at 1.  [This is a faster version of the original SWI-Prolog predicate.]

nth1(Index1, List, Elem) :-
        integer(Index1), !,
        Index0 is Index1 - 1,
        nth0_det(Index0, List, Elem).   %% take nth deterministically
nth1(Index, List, Elem) :-
        var(Index), !,
        nth_gen(List, Elem, 1, Index).  %% match
*/

%	last(?List, ?Elem)
%
%	Succeeds if `Last' unifies with the last element of `List'.  For
%	discussion on the argument order, see:
%	
%	http://www.prolog-standard.fmg.uva.nl/twiki/bin/view/Library/PredLast2

last([X|Xs], Last) :-
    last_(Xs, X, Last).

last_([], Last, Last).
last_([X|Xs], _, Last) :-
    last_(Xs, X, Last).


%	reverse(?List1, ?List2)
%
%	Is true when the elements of List2 are in reverse order compared to
%	List1.

%reverse(Xs, Ys) :-
%    reverse(Xs, [], Ys, Ys).

%reverse([], Ys, Ys, []).
%reverse([X|Xs], Rs, Ys, [_|Bound]) :-
%    reverse(Xs, [X|Rs], Ys, Bound).


%	premutation(?Xs, ?Ys)
%	
%	permutation(Xs, Ys) is true when Xs is a permutation of Ys. This
%	can solve for Ys given Xs or Xs given Ys, or even enumerate Xs
%	and Ys together.

permutation(Xs, Ys) :-
	permutation(Xs, Ys, Ys).

permutation([], [], []).
permutation([X|Xs], Ys1, [_|Bound]) :-
	permutation(Xs, Ys, Bound),
	select(X, Ys1, Ys).

%	flatten(+List1, ?List2)
%
%	Is true when Lis2 is a non nested version of List1.

flatten(List, FlatList) :-
	flatten(List, [], FlatList0), !,
	FlatList = FlatList0.

flatten(Var, Tl, [Var|Tl]) :-
	var(Var), !.
flatten([], Tl, Tl) :- !.
flatten([Hd|Tl], Tail, List) :-
	flatten(Hd, FlatHeadTail, List), 
	flatten(Tl, Tail, FlatHeadTail).
flatten(Atom, Tl, [Atom|Tl]).

%	sumlist(+List, -Sum)
%	
%	Sum is the result of adding all numbers in List.

sumlist(Xs, Sum) :-
	sumlist(Xs, 0, Sum).

sumlist([], Sum, Sum).
sumlist([X|Xs], Sum0, Sum) :-
	Sum1 is Sum0 + X,
	sumlist(Xs, Sum1, Sum).


%	numlist(+Low, +High, -List)
%	
%	List is a list [Low, Low+1, ... High]

numlist(L, U, Ns) :-
    integer(L), integer(U), L =< U,
    numlist_(L, U, Ns).

numlist_(L, U, [L|Ns]) :-
    (   L =:= U
    ->  Ns = []
    ;   M is L + 1,
	numlist_(M, U, Ns)
    ).


		/********************************
		*       SET MANIPULATION        *
		*********************************/

%	is_set(+Set)
%	is True if Set is a proper list without duplicates.

is_set(0) :- !, fail.		% catch variables
is_set([]) :- !.
is_set([H|T]) :-
	memberchk(H, T), !, 
	fail.
is_set([_|T]) :-
	is_set(T).

%	list_to_set(+List, ?Set)
%
%	Is true when Set has the same element as List in the same order.
%	The left-most copy of the duplicate is retained.

list_to_set(List, Set) :-
	list_to_set_(List, Set0),
	Set = Set0.

list_to_set_([], R) :-
	close_list(R).
list_to_set_([H|T], R) :-
	memberchk(H, R), !, 
	list_to_set_(T, R).

close_list([]) :- !.
close_list([_|T]) :-
	close_list(T).


%	intersection(+Set1, +Set2, -Set3)
%
%	Succeeds if Set3 unifies with the intersection of Set1 and Set2

intersection([], _, []) :- !.
intersection([X|T], L, Intersect) :-
	memberchk(X, L), !, 
	Intersect = [X|R], 
	intersection(T, L, R).
intersection([_|T], L, R) :-
	intersection(T, L, R).


%	union(+Set1, +Set2, -Set3)
%	Succeeds if Set3 unifies with the union of Set1 and Set2

union([], L, L) :- !.
union([H|T], L, R) :-
	memberchk(H, L), !, 
	union(T, L, R).
union([H|T], L, [H|R]) :-
	union(T, L, R).


%	subset(+SubSet, +Set)
%	Succeeds if all elements of SubSet belong to Set as well.
%

subset([], _) :- !.
subset([E|R], Set) :-
	memberchk(E, Set), 
	subset(R, Set).


%	subtract(+Set, +Delete, -Result)
%
%	Delete all elements from `Set' that occur in `Delete' (a set) and
%	unify the result with `Result'.

subtract([], _, []) :- !.
subtract([E|T], D, R) :-
	memberchk(E, D), !,
	subtract(T, D, R).
subtract([H|T], D, [H|R]) :-
	subtract(T, D, R).


memberchk(X,[Y|Z]) :- X==Y.
memberchk(X,[_|Z]) :- memberchk(X,Z).


/*  $Id: chr_runtime.pl,v 1.18 2006/04/11 14:21:17 toms Exp $

    Part of CHR (Constraint Handling Rules)

    Author:        Christian Holzbaur and Tom Schrijvers
    E-mail:        christian@ai.univie.ac.at
		   Tom.Schrijvers@cs.kuleuven.be
    WWW:           http://www.swi-prolog.org
    Copyright (C): 2003-2004, K.U. Leuven

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    As a special exception, if you link this library with other files,
    compiled with a Free Software compiler, to produce an executable, this
    library does not by itself cause the resulting executable to be covered
    by the GNU General Public License. This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.

    Distributed with SWI-Prolog under the above conditions with
    permission from the authors.
*/


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%       _                             _   _                
%%   ___| |__  _ __   _ __ _   _ _ __ | |_(_)_ __ ___   ___ 
%%  / __| '_ \| '__| | '__| | | | '_ \| __| | '_ ` _ \ / _ \`
%% | (__| | | | |    | |  | |_| | | | | |_| | | | | | |  __/
%%  \___|_| |_|_|    |_|   \__,_|_| |_|\__|_|_| |_| |_|\___|
%%
%% hProlog CHR runtime:
%%
%% 	* based on the SICStus CHR runtime by Christian Holzbaur
%% 
%%          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%          %  Constraint Handling Rules		      version 2.2 %
%%          %								  %
%%          %  (c) Copyright 1996-98					  %
%%          %  LMU, Muenchen						  %
%% 	    %								  %
%%          %  File:   chr.pl						  %
%%          %  Author: Christian Holzbaur	christian@ai.univie.ac.at %
%%          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
%%	
%%	* modified by Tom Schrijvers, K.U.Leuven, Tom.Schrijvers@cs.kuleuven.be
%%		- ported to hProlog
%%		- modified for eager suspension removal
%%
%%      * First working version: 6 June 2003
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% SWI-Prolog changes
%% 
%% 	* Added initialization directives for saved-states
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:- module(chr_runtime,
	  [ 'chr sbag_del_element'/3,
	    'chr sbag_member'/2,
	    'chr merge_attributes'/3,

	    'chr run_suspensions'/1,
	    'chr run_suspensions_loop'/1,
	    
	    'chr run_suspensions_d'/1,
	    'chr run_suspensions_loop_d'/1,

	    'chr insert_constraint_internal'/5,
	    'chr remove_constraint_internal'/2,
	    'chr allocate_constraint'/4,
	    'chr activate_constraint'/3,

	    'chr default_store'/1,

	    'chr via_1'/2,
	    'chr via_2'/3,
	    'chr via'/2,
	    'chr newvia_1'/2,
	    'chr newvia_2'/3,
	    'chr newvia'/2,

	    'chr lock'/1,
	    'chr unlock'/1,
	    'chr not_locked'/1,
	    'chr none_locked'/1,

	    'chr update_mutable'/2,
	    'chr get_mutable'/2,
	    'chr create_mutable'/2,

	    'chr novel_production'/2,
	    'chr extend_history'/2,
	    'chr empty_history'/1,

	    'chr gen_id'/1,

	    'chr debug_event'/1,
	    'chr debug command'/2,	% Char, Command

	    'chr chr_indexed_variables'/2,

	    chr_show_store/1,	% +Module
	    find_chr_constraint/1,

	    chr_trace/0,
	    chr_notrace/0,
	    chr_leash/1
	  ]).

%% SWI begin
%% :- set_prolog_flag(generate_debug_info, false).
%% SWI end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                                       
:- use_module(hprolog).
%:- include(chr_op).

%% SICStus begin
%% :- use_module(library(lists),[memberchk/2]).
%% :- use_module(library(terms),[term_variables/2]).
%% :- use_module(hpattvars).
%% :- use_module(b_globval).
%% SICStus end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%   I N I T I A L I S A T I O N

%% SWI begin
%:- dynamic user:exception/3.
%:- multifile user:exception/3.

%user:exception(undefined_global_variable, Name, retry) :-
%	chr_runtime_global_variable(Name),
%	chr_init.

chr_runtime_global_variable(chr_id).
chr_runtime_global_variable(chr_global).
%chr_runtime_global_variable(chr_debug).
%chr_runtime_global_variable(chr_debug_history).

chr_init :-
	nb_setval(chr_id,0),
	nb_setval(chr_global,_).
%	nb_setval(chr_debug,mutable(off)),          % XXX
%	nb_setval(chr_debug_history,mutable([],0)). % XXX
%% SWI end

%% SICStus begin
%% chr_init :-
%% 	        nb_setval(chr_id,0).
%% SICStus end

:- initialization chr_init.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Contents of former chr_debug.pl
%   
%	chr_show_store(+Module)
%	
%	Prints all suspended constraints of module   Mod to the standard
%	output.

css :- chr_show_store(blah).

css2 :- chr_show_store2, writeln('.'). %'

chr_show_store2 :-
	(
		'$enumerate_constraints'(Constraint),
                writeln(','),
		writeq(Constraint), 
		fail
	;
		true
	).


chr_show_store(_Mod) :-
	(
		%Mod:
		'$enumerate_constraints'(Constraint),
		print(Constraint),nl, % allows use of portray to control printing

		fail
	;
		true
	).

find_chr_constraint(Constraint) :-
	%chr:
	%'$chr_module'(Mod),
	%Mod:
	'$enumerate_constraints'(Constraint).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inlining of some goals is good for performance
% That's the reason for the next section
% There must be correspondence with the predicates as implemented in chr_mutable.pl
% so that       user:goal_expansion(G,G). also works (but do not add such a rule)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% SWI begin
%:- multifile user:goal_expansion/2.
%:- dynamic   user:goal_expansion/2.

%user:goal_expansion('chr get_mutable'(Val,Var),    Var=mutable(Val)).
%user:goal_expansion('chr update_mutable'(Val,Var), setarg(1,Var,Val)).
%user:goal_expansion('chr create_mutable'(Val,Var), Var=mutable(Val)).
%user:goal_expansion('chr default_store'(X),        nb_getval(chr_global,X)).
%% SWI end

% goal_expansion seems too different in SICStus 4 for me to cater for in a
% decent way at this moment - so I stick with the old way to do this
% so that it doesn't get lost, the code from Mats for SICStus 4 is included in comments


%% Mats begin
%% goal_expansion('chr get_mutable'(Val,Var),    Lay, _M, get_mutable(Val,Var), Lay).
%% goal_expansion('chr update_mutable'(Val,Var), Lay, _M, update_mutable(Val,Var), Lay).
%% goal_expansion('chr create_mutable'(Val,Var), Lay, _M, create_mutable(Val,Var), Lay).
%% goal_expansion('chr default_store'(A),        Lay, _M, global_term_ref_1(A), Lay).
%% Mats begin


%% SICStus begin
%% :- multifile user:goal_expansion/2.
%% :- dynamic   user:goal_expansion/2.
%% 
%% user:goal_expansion('chr get_mutable'(Val,Var),    get_mutable(Val,Var)).
%% user:goal_expansion('chr update_mutable'(Val,Var), update_mutable(Val,Var)).
%% user:goal_expansion('chr create_mutable'(Val,Var), create_mutable(Val,Var)).
%% user:goal_expansion('chr default_store'(A),        global_term_ref_1(A)).
%% SICStus end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr run_suspensions'( Slots) :-
	    run_suspensions( Slots).

'chr run_suspensions_loop'([]).
'chr run_suspensions_loop'([L|Ls]) :-
	run_suspensions(L),
	'chr run_suspensions_loop'(Ls).

run_suspensions([]).
run_suspensions([S|Next] ) :-
	arg( 2, S, Mref), % ARGXXX
	'chr get_mutable'( Status, Mref),
	( Status==active ->
	    'chr update_mutable'( triggered, Mref),
	    arg( 4, S, Gref), % ARGXXX
	    'chr get_mutable'( Gen, Gref),
	    Generation is Gen+1,
	    'chr update_mutable'( Generation, Gref),
	    arg( 3, S, Goal), % ARGXXX
	    call( Goal),
	    'chr get_mutable'( Post, Mref),
	    ( Post==triggered ->
		'chr update_mutable'( active, Mref)	% catching constraints that did not do anything
	    ;
		true
	    )
	;
	    true
	),
	run_suspensions( Next).

'chr run_suspensions_d'( Slots) :-
	    run_suspensions_d( Slots).

'chr run_suspensions_loop_d'([]).
'chr run_suspensions_loop_d'([L|Ls]) :-
	run_suspensions_d(L),
	'chr run_suspensions_loop_d'(Ls).

run_suspensions_d([]).
run_suspensions_d([S|Next] ) :-
	arg( 2, S, Mref), % ARGXXX
	'chr get_mutable'( Status, Mref),
	( Status==active ->
	    'chr update_mutable'( triggered, Mref),
	    arg( 4, S, Gref), % ARGXXX
	    'chr get_mutable'( Gen, Gref),
	    Generation is Gen+1,
	    'chr update_mutable'( Generation, Gref),
	    arg( 3, S, Goal), % ARGXXX
	    ( 
		'chr debug_event'(wake(S)),
	        call( Goal)
	    ;
		'chr debug_event'(fail(S)), !,
		fail
	    ),
	    (
		'chr debug_event'(exit(S))
	    ;
		'chr debug_event'(redo(S)),
		fail
	    ),	
	    'chr get_mutable'( Post, Mref),
	    ( Post==triggered ->
		'chr update_mutable'( active, Mref)   % catching constraints that did not do anything
	    ;
		true
	    )
	;
	    true
	),
	run_suspensions_d( Next).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%locked:attr_unify_hook(_,_) :- fail.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr lock'(T) :-
	( var(T)
	-> put_attr(T, locked, x)
        ;  term_variables(T,L),
           lockv(L)
	).

lockv([]).
lockv([T|R]) :- put_attr( T, locked, x), lockv(R).

'chr unlock'(T) :-
	( var(T)
	-> del_attr(T, locked)
	;  term_variables(T,L),
           unlockv(L)
	).

unlockv([]).
unlockv([T|R]) :- del_attr( T, locked), unlockv(R).

'chr none_locked'( []).
'chr none_locked'( [V|Vs]) :-
	( get_attr(V, locked, _) ->
		fail
	;
		'chr none_locked'(Vs)
	).

'chr not_locked'(V) :-
	( var( V) ->
  		( get_attr( V, locked, _) ->
			fail
		;
			true
		)
	;
		true
	).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Eager removal from all chains.
%
'chr remove_constraint_internal'( Susp, Agenda) :-
	arg( 2, Susp, Mref), % ARGXXX
	'chr get_mutable'( State, Mref), 
	'chr update_mutable'( removed, Mref),		% mark in any case
	( compound(State) ->			% passive/1
	    Agenda = []
	; State==removed ->
	    Agenda = []
	%; State==triggered ->
	%     Agenda = []
	;
            Susp =.. [_,_,_,_,_,_,_|Args],
	    term_variables( Args, Vars),
	    'chr default_store'( Global),
	    Agenda = [Global|Vars]
	).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr newvia_1'(X,V) :-
	( var(X) ->
		X = V
	; 
		nonground(X,V)
	).

'chr newvia_2'(X,Y,V) :- 
	( var(X) -> 
		X = V
	; var(Y) ->
		Y = V
	; compound(X), nonground(X,V) ->
		true
	; 
		compound(Y), nonground(Y,V)
	).

%
% The second arg is a witness.
% The formulation with term_variables/2 is
% cycle safe, but it finds a list of all vars.
% We need only one, and no list in particular.
%
'chr newvia'(L,V) :- nonground(L,V).
%~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-

'chr via_1'(X,V) :-
	( var(X) ->
		X = V
	; atomic(X) ->
		'chr default_store'(V)
	; nonground(X,V) ->
		true
	;
		'chr default_store'(V)
	).

'chr via_2'(X,Y,V) :- 
	( var(X) -> 
		X = V
	; var(Y) ->
		Y = V
	; compound(X), nonground(X,V) ->
		true
	; compound(Y), nonground(Y,V) ->
		true
	;
		'chr default_store'(V)
	).

%
% The second arg is a witness.
% The formulation with term_variables/2 is
% cycle safe, but it finds a list of all vars.
% We need only one, and no list in particular.
%
'chr via'(L,V) :-
	( nonground(L,V) ->
		true
	;
		'chr default_store'(V)
	).

nonground( Term, V) :-
	term_variables( Term, Vs),
	Vs = [V|_].

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr novel_production'( Self, Tuple) :-
	arg( 5, Self, Ref), % ARGXXX
	'chr get_mutable'( History, Ref),
	( get_ds( Tuple, History, _) ->
	    fail
	;
	    true
	).

%
% Not folded with novel_production/2 because guard checking
% goes in between the two calls.
%
'chr extend_history'( Self, Tuple) :-
	arg( 5, Self, Ref), % ARGXXX
	'chr get_mutable'( History, Ref),
	put_ds( Tuple, History, x, NewHistory),
	'chr update_mutable'( NewHistory, Ref).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
constraint_generation( Susp, State, Generation) :-
	arg( 2, Susp, Mref), % ARGXXX
	'chr get_mutable'( State, Mref),
	arg( 4, Susp, Gref), % ARGXXX
	'chr get_mutable'( Generation, Gref). 	% not incremented meanwhile 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr allocate_constraint'( Closure, Self, F, Args) :-
	Self =.. [suspension,Id,Mref,Closure,Gref,Href,F|Args], % SUSPXXX
	'chr create_mutable'(0, Gref),
	'chr empty_history'(History),
	'chr create_mutable'(History, Href),
	'chr create_mutable'(passive(Args), Mref),
	'chr gen_id'( Id).

%
% 'chr activate_constraint'( -, +, -).
%
% The transition gc->active should be rare
%
'chr activate_constraint'( Vars, Susp, Generation) :-
	arg( 2, Susp, Mref), % ARGXXX
	'chr get_mutable'( State, Mref),
	'chr update_mutable'( active, Mref),
	( nonvar(Generation) ->			% aih
	    true
	;
	    arg( 4, Susp, Gref), % ARGXXX
	    'chr get_mutable'( Gen, Gref),
	    Generation is Gen+1,
	    'chr update_mutable'( Generation, Gref)
	),
	( compound(State) ->			% passive/1
	    term_variables( State, Vs),
	    'chr none_locked'( Vs),
	    Vars = [Global|Vs],
	    'chr default_store'(Global)
	; State == removed ->			% the price for eager removal ...
	    Susp =.. [_,_,_,_,_,_,_|Args],
	    term_variables( Args, Vs),
	    Vars = [Global|Vs],
	    'chr default_store'(Global)
	;
	    Vars = []
	).

'chr insert_constraint_internal'([Global|Vars], Self, Closure, F, Args) :-
	'chr default_store'(Global),
	term_variables(Args,Vars),
	'chr none_locked'(Vars),
	Self =.. [suspension,Id,Mref,Closure,Gref,Href,F|Args], % SUSPXXX
	'chr create_mutable'(active, Mref),
	'chr create_mutable'(0, Gref),
	'chr empty_history'(History),
	'chr create_mutable'(History, Href),
	'chr gen_id'(Id).

insert_constraint_internal([Global|Vars], Self, Term, Closure, F, Args) :-
	'chr default_store'(Global),
	term_variables( Term, Vars),
	'chr none_locked'( Vars),
	'chr empty_history'( History),
	'chr create_mutable'( active, Mref),
	'chr create_mutable'( 0, Gref),
	'chr create_mutable'( History, Href),
	'chr gen_id'( Id),
	Self =.. [suspension,Id,Mref,Closure,Gref,Href,F|Args]. % SUSPXXX

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr empty_history'( E) :- empty_ds( E).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr gen_id'( Id) :-
	nb_getval(chr_id,Id),
	NextId is Id + 1,
	nb_setval(chr_id,NextId).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% SWI begin
'chr create_mutable'(V,mutable(V)).
'chr get_mutable'(V,mutable(V)).  
'chr update_mutable'(V,M) :- setarg(1,M,V).
%% SWI end

%% SICStus begin
%% 'chr create_mutable'(Val, Mut) :- create_mutable(Val, Mut).
%% 'chr get_mutable'(Val, Mut) :- get_mutable(Val, Mut).
%% 'chr update_mutable'(Val, Mut) :- update_mutable(Val, Mut).
%% SICStus end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% SWI begin
'chr default_store'(X) :- nb_getval(chr_global,X).
%% SWI end

%% SICStus begin
%% 'chr default_store'(A) :- global_term_ref_1(A).
%% SICStus end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%'chr sbag_member'( Head, [Head]) :- !.
%'chr sbag_member'( Head, [Head|Tail]).
%'chr sbag_member'( Elem, [_|Tail]) :- 
%    'chr sbag_member'( Elem, Tail).
        
'chr sbag_member'( Element, [Head|Tail]) :-
      sbag_member( Element, Tail, Head).

% auxiliary to avoid choicepoint for last element
        % does it really avoid the choicepoint? -jon
 sbag_member( E, _,	     E).
 sbag_member( E, [Head|Tail], _) :-
 	sbag_member( E, Tail, Head).
 
'chr sbag_del_element'( [],	  _,	[]).
'chr sbag_del_element'( [X|Xs], Elem, Set2) :-
	( X==Elem ->
	    Set2 = Xs
	;
	    Set2 = [X|Xss],
	    'chr sbag_del_element'( Xs, Elem, Xss)
	).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
'chr merge_attributes'([],Ys,Ys).
'chr merge_attributes'([X | Xs],YL,R) :-
  ( YL = [Y | Ys] ->
      arg(1,X,XId), % ARGXXX
      arg(1,Y,YId),	 % ARGXXX
       ( XId < YId ->
           R = [X | T],
           'chr merge_attributes'(Xs,YL,T)
       ; XId > YId ->
           R = [Y | T],
           'chr merge_attributes'([X|Xs],Ys,T)
       ;
           R = [X | T],
           'chr merge_attributes'(Xs,Ys,T)
       )    
  ;
       R = [X | Xs]
  ).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%:- multifile
%	chr:debug_event/2,		% +State, +Event
%	chr:debug_interact/3.		% +Event, +Depth, -Command
/*
'chr debug_event'(Event) :-
	nb_getval(chr_debug,mutable(State)),  % XXX
	( State == off ->
		true
	; %chr:
	    debug_event(State, Event) ->
		true
	; 	debug_event(State,Event)
	).

chr_trace :-
	nb_setval(chr_debug,mutable(trace)).
chr_notrace :-
	nb_setval(chr_debug,mutable(off)).

%	chr_leash(+Spec)
%	
%	Define the set of ports at which we prompt for user interaction

chr_leash(Spec) :-
	leashed_ports(Spec, Ports),
	nb_setval(chr_leash,mutable(Ports)).

leashed_ports(none, []).
leashed_ports(off,  []).
leashed_ports(all,  [call, exit, redo, fail, wake, try, apply, insert, remove]).
leashed_ports(default, [call,exit,fail,wake,apply]).
leashed_ports(One, Ports) :-
	atom(One), One \== [], !,
	leashed_ports([One], Ports).
leashed_ports(Set, Ports) :-
	sort(Set, Ports),		% make unique
	leashed_ports(all, All),
	valid_ports(Ports, All).

valid_ports([], _).
valid_ports([H|T], Valid) :-
	(   memberchk(H, Valid)
	->  true
	;   throw(error(domain_error(chr_port, H), _))
	),
	valid_ports(T, Valid).


:- initialization
   leashed_ports(default, Ports),
   nb_setval(chr_leash, mutable(Ports)).

%	debug_event(+State, +Event)


%debug_event(trace, Event) :-
%	functor(Event, Name, Arity),
%	writeln(Name/Arity), fail.
debug_event(trace,Event) :- 
	Event = call(_), !,
	get_debug_history(History,Depth),
	NDepth is Depth + 1,
	chr_debug_interact(Event,NDepth), 
	set_debug_history([Event|History],NDepth).
debug_event(trace,Event) :- 
	Event = wake(_), !,
	get_debug_history(History,Depth),
	NDepth is Depth + 1,
	chr_debug_interact(Event,NDepth), 
	set_debug_history([Event|History],NDepth).
debug_event(trace,Event) :-
	Event = redo(_), !,
	get_debug_history(_History, Depth),
	chr_debug_interact(Event, Depth).
debug_event(trace,Event) :- 
	Event = exit(_),!,
	get_debug_history([_|History],Depth),
	chr_debug_interact(Event,Depth),
	NDepth is Depth - 1,
	set_debug_history(History,NDepth). 
debug_event(trace,Event) :- 
	Event = fail(_),!,
	get_debug_history(_,Depth),
	chr_debug_interact(Event,Depth). 
debug_event(trace, Event) :-
	Event = remove(_), !,
	get_debug_history(_,Depth),
	chr_debug_interact(Event, Depth).
debug_event(trace, Event) :-
	Event = insert(_), !,
	get_debug_history(_,Depth),
	chr_debug_interact(Event, Depth).
debug_event(trace, Event) :-
	Event = try(_,_,_,_), !,
	get_debug_history(_,Depth),
	chr_debug_interact(Event, Depth).
debug_event(trace, Event) :- 
	Event = apply(_,_,_,_), !,
	get_debug_history(_,Depth),
	chr_debug_interact(Event,Depth). 

debug_event(skip(_,_),Event) :- 
	Event = call(_), !,
	get_debug_history(History,Depth),
	NDepth is Depth + 1,
	set_debug_history([Event|History],NDepth).
debug_event(skip(_,_),Event) :- 
	Event = wake(_), !,
	get_debug_history(History,Depth),
	NDepth is Depth + 1,
	set_debug_history([Event|History],NDepth).
debug_event(skip(SkipSusp,SkipDepth),Event) :- 
	Event = exit(Susp),!,
	get_debug_history([_|History],Depth),
	( SkipDepth == Depth,
	  SkipSusp == Susp -> 
		set_chr_debug(trace),
		chr_debug_interact(Event,Depth)
	;
		true
	),
	NDepth is Depth - 1,
	set_debug_history(History,NDepth). 
debug_event(skip(_,_),_) :- !,
	true.

%	chr_debug_interact(+Event, +Depth)
%	
%	Interact with the user on Event that took place at Depth.  First
%	calls chr:debug_interact(+Event, +Depth, -Command) hook. If this
%	fails the event is printed and the system prompts for a command.

chr_debug_interact(Event, Depth) :-
	%chr:
	debug_interact(Event, Depth, Command), !,
	handle_debug_command(Command,Event,Depth).
chr_debug_interact(Event, Depth) :-
	print_event(Event, Depth),
	(   leashed(Event)
	->  ask_continue(Command)
	;   Command = creep
	),
	handle_debug_command(Command,Event,Depth).

leashed(Event) :-
	functor(Event, Port, _),
	nb_getval(chr_leash, mutable(Ports)),
	memberchk(Port, Ports).

ask_continue(Command) :-
	print_message(debug, chr(prompt)),
	get_single_char(CharCode),
	(   CharCode == -1
	->  Char = end_of_file
	;   char_code(Char, CharCode)
	),
	(   debug_command(Char, Command)
	->  print_message(debug, chr(command(Command)))
	;   print_message(help, chr(invalid_command)),
	    ask_continue(Command)
	).


'chr debug command'(Char, Command) :-
	debug_command(Char, Command).

debug_command(c, creep).
debug_command(' ', creep).
debug_command('\r', creep).
debug_command(s, skip).
debug_command(g, ancestors).
debug_command(n, nodebug).
debug_command(a, abort).
debug_command(f, fail).
debug_command(b, break).
debug_command(?, help).
debug_command(h, help).
debug_command(end_of_file, exit).


handle_debug_command(creep,_,_) :- !.
handle_debug_command(skip, Event, Depth) :- !,
	Event =.. [Type|Rest],
	( Type \== call,
	  Type \== wake ->
		handle_debug_command('c',Event,Depth)
	;
		Rest = [Susp],
		set_chr_debug(skip(Susp,Depth))
	).
	
handle_debug_command(ancestors,Event,Depth) :- !,
	print_chr_debug_history,
	chr_debug_interact(Event,Depth).	
handle_debug_command(nodebug,_,_) :- !,
	chr_notrace.
handle_debug_command(abort,_,_) :- !,
	abort.
handle_debug_command(exit,_,_) :- !,
	halt.
handle_debug_command(fail,_,_) :- !,
	fail.
handle_debug_command(break,Event,Depth) :- !,
	break,
	chr_debug_interact(Event,Depth).
handle_debug_command(help,Event,Depth) :- !,
	print_message(help, chr(debug_options)),
	chr_debug_interact(Event,Depth).	
handle_debug_command(Cmd, _, _) :- 
	throw(error(domain_error(chr_debug_command, Cmd), _)).

print_chr_debug_history :-
	get_debug_history(History,Depth),
	print_message(debug, chr(ancestors(History, Depth))).

print_event(Event, Depth) :-
	print_message(debug, chr(event(Event, Depth))).

%	{set,get}_debug_history(Ancestors, Depth)
%	
%	Set/get the list of ancestors and the depth of the current goal.

get_debug_history(History,Depth) :-
	nb_getval(chr_debug_history,mutable(History,Depth)).

set_debug_history(History,Depth) :-
	nb_getval(chr_debug_history,Mutable),
	setarg(1,Mutable,History),
	setarg(2,Mutable,Depth).

set_chr_debug(State) :-
	nb_getval(chr_debug,Mutable),
	setarg(1,Mutable,State).

'chr chr_indexed_variables'(Susp,Vars) :-
        Susp =.. [_,_,_,_,_,_,_|Args],
	term_variables(Args,Vars).
*/

:- module(hprolog,
	  [ append/2,		        % +ListOfLists, -List
	    nth/3,			% ?Index, ?List, ?Element
	    substitute/4,		% +OldVal, +OldList, +NewVal, -NewList
	    memberchk_eq/2,		% +Val, +List
	    intersect_eq/3,		% +List1, +List2, -Intersection
	    list_difference_eq/3,	% +List, -Subtract, -Rest
	    take/3,			% +N, +List, -FirstElements
	    drop/3,			% +N, +List, -LastElements
	    max_go_list/2,		% +List, -Max
	    or_list/2,			% +ListOfInts, -BitwiseOr
	    sublist/2,			% ?Sublist, +List
	    bounded_sublist/3,		% ?Sublist, +List, +Bound
	    min_list/2,
	    chr_delete/3,
	    init_store/2,
	    get_store/2,
	    update_store/2,
	    make_get_store_goal/3,
	    make_update_store_goal/3,
	    make_init_store_goal/3,

	    empty_ds/1,
	    ds_to_list/2,
	    get_ds/3,
	    put_ds/4

	    
	  ]).

:- use_module(library(lists)).
:- use_module(library(assoc)).

empty_ds(DS) :- empty_assoc(DS).
ds_to_list(DS,LIST) :- assoc_to_list(DS,LIST).
get_ds(A,B,C) :- get_assoc(A,B,C).
put_ds(A,B,C,D) :- put_assoc(A,B,C,D).


init_store(Name,Value) :- nb_setval(Name,Value).

get_store(Name,Value) :- nb_getval(Name,Value).

update_store(Name,Value) :- b_setval(Name,Value).

make_init_store_goal(Name,Value,Goal) :- Goal = nb_setval(Name,Value).

make_get_store_goal(Name,Value,Goal) :- Goal = nb_getval(Name,Value).

make_update_store_goal(Name,Value,Goal) :- Goal = b_setval(Name,Value).


		 /*******************************
		 *      MORE LIST OPERATIONS	*
		 *******************************/

%	append(+ListOfLists, -List)
%	
%	Convert a one-level nested list into a flat one.  E.g.
%	append([[a,b], [c]], X) --> X = [a,b,c].  See also
%	flatten/3.

append([],[]).
append([X|Xs],L) :-
	append(X,T,L),
	append(Xs,T).


%	nth(?Index, ?List, ?Element)
%	
%	Same as nth1/3

nth(Index, List, Element) :-
	nth1(Index, List, Element).


%	substitute(+OldVal, +OldList, +NewVal, -NewList)
%	
%	Substitute OldVal by NewVal in OldList and unify the result
%	with NewList.  JW: Shouldn't this be called substitute_eq/4?
%'

substitute(_, [], _, []) :- ! .
substitute(X, [U|Us], Y, [V|Vs]) :-
        (   X == U
	->  V = Y,
            substitute(X, Us, Y, Vs)
        ;   V = U,
            substitute(X, Us, Y, Vs)
        ).

%	memberchk_eq(+Val, +List)
%	
%	Deterministic check of membership using == rather than
%	unification.

memberchk_eq(X, [Y|Ys]) :-
   (   X == Y
   ->  true
   ;   memberchk_eq(X, Ys)
   ).


%	list_difference_eq(+List, -Subtract, -Rest)
%	
%	Delete all elements of Subtract from List and unify the result
%	with Rest.  Element comparision is done using ==/2.

list_difference_eq([],_,[]).
list_difference_eq([X|Xs],Ys,L) :-
	(   memberchk_eq(X,Ys)
	->  list_difference_eq(Xs,Ys,L)
	;   L = [X|T],
	    list_difference_eq(Xs,Ys,T)
	).

%	intersect_eq(+List1, +List2, -Intersection)
%	
%	Determine the intersection of two lists without unifying values.

intersect_eq([], _, []).
intersect_eq([X|Xs], Ys, L) :-
	(   memberchk_eq(X, Ys)
	->  L = [X|T],
	    intersect_eq(Xs, Ys, T)
	;   intersect_eq(Xs, Ys, L)
	).


%	take(+N, +List, -FirstElements)
%	
%	Take the first  N  elements  from   List  and  unify  this  with
%	FirstElements. The definition is based   on the GNU-Prolog lists
%	library. Implementation by Jan Wielemaker.

take(0, _, []) :- !.
take(N, [H|TA], [H|TB]) :-
	N > 0,
	N2 is N - 1,
	take(N2, TA, TB).

%	Drop the first  N  elements  from   List  and  unify  the remainder  with
%	LastElements.

drop(0,LastElements,LastElements) :- !.
drop(N,[_|Tail],LastElements) :-
	N > 0,
	N1 is N  - 1,
	drop(N1,Tail,LastElements).

%	max_go_list(+List, -Max)
%	
%	Return the maximum of List in the standard order of terms.

max_go_list([H|T], Max) :-
	max_go_list(T, H, Max).

max_go_list([], Max, Max).
max_go_list([H|T], X, Max) :-
        (   H @=< X
	->  max_go_list(T, X, Max)
        ;   max_go_list(T, H, Max)
        ).

%	or_list(+ListOfInts, -BitwiseOr)
%	
%	Do a bitwise disjuction over all integer members of ListOfInts.

or_list(L, Or) :-
	or_list(L, 0, Or).

or_list([], Or, Or).
or_list([H|T], Or0, Or) :-
	Or1 is H \/ Or0,
	or_list(T, Or1, Or).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
sublist(L, L).
sublist(Sub, [H|T]) :-
	'$sublist1'(T, H, Sub).

'$sublist1'(Sub, _, Sub).
'$sublist1'([H|T], _, Sub) :-
	'$sublist1'(T, H, Sub).
'$sublist1'([H|T], X, [X|Sub]) :-
	'$sublist1'(T, H, Sub).

bounded_sublist(Sublist,_,_) :-
	Sublist = [].
bounded_sublist(Sublist,[H|List],Bound) :-
	Bound > 0,
	(
		Sublist = [H|Rest],
		NBound is Bound - 1,
		bounded_sublist(Rest,List,NBound)
	;
		bounded_sublist(Sublist,List,Bound)
	).
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
min_list([H|T], Min) :-
	'$min_list1'(T, H, Min).

'$min_list1'([], Min, Min).
'$min_list1'([H|T], X, Min) :-
        (   H>=X ->
            '$min_list1'(T, X, Min)
        ;   '$min_list1'(T, H, Min)
        ).

chr_delete([], _, []).
chr_delete([H|T], X, L) :-
        (   H==X ->
            chr_delete(T, X, L)
        ;   L=[H|RT],
            chr_delete(T, X, RT)
        ).
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




% SWI primitives on global variable 
% b_setval(chr_global,Y):-true :
%     global_heap_set(chr_global,Y).
b_setval(X,Y):-
    global_heap_set(X,Y).

%:- dynamic swi_global_var_init/2.

%nb_setval(chr_global,Y):-true :
%    global_heap_set(chr_global,Y).
nb_setval(X,Y):-
    ( retractall(swi_global_var_init(X,_)) ; true),!,
    assert(swi_global_var_init(X,Y)),
    global_heap_set(X,Y).


% nb_getval(chr_global,Y):-true :
%     (is_global_heap(chr_global)->
%      global_heap_get(chr_global,Y);
%      throw('global heap variable chr_global does not exist.')).
nb_getval(X,Y):-
    	( is_global_heap(X) ->
		global_heap_get(X,Y)
	; swi_global_var_init(X,Y1) ->
		global_heap_set(X,Y1),
		Y = Y1
	;
     		throw('global variable does not exist.'(X))
	).


:- op(1102,xfx,[<==>,===>,<=/=>,==/=>]).

:- op(1160,xfx,times).
:- op(1150,fx,sample).
:- op(1150,fx,prob).
:- op(1150,fx,probf).
:- op(1150,fx,viterbi).
:- op(1150,fx,viterbif).
:- op(900,fx,'~').

:- op(1150,fx,ccall).


main_loop :-
    write('[CHRiSM] ?- '),
    read(Goal),
    (var(Goal) ->
        writeln('A variable is not a valid query.'),            %'
        fail
    ;
        true
    ),
    (Goal = end_of_file ->
        writeln('bye bye!'),
        halt
    ;
        true
    ),
    ( call(Goal) ->
        nl,
        fail 
    ;
        writeln('failed derivation'),
        fail
    ).
main_loop :-    
    main_loop.



$help_mess("~nType 'chrism_help' for usage notes.~n").   % Hook for B-Prolog

chrism_help :-
    format("Random switches:~n",[]),
    format(" msw(I,V)                -- the switch I randomly outputs the value V~n",[]),
    format(" set_sw(Sw,Params)       -- set parameters of a switch~n",[]),
    format(" get_sw(Sw,SwInfo)       -- get information of a switch~n",[]),
    nl,
    format("Builtins:~n",[]),
    format(" sample Goal             -- returns a random observation of a derivation from Goal~n",[]),
    format(" prob Observation        -- compute the probability of an observation~n",[]),
    format(" learn(ObservationList)  -- learn the parameters from a list of observations~n",[]),
    format(" learn                   -- learn the parameters from data_source~n",[]),
    nl,
    format("Observations:~n",[]),
    format(" Goal <==> Result        -- a result (final store) for Goal is Result~n",[]),
    format(" Goal ===> PartialResult -- a result for Goal contains PartialResult~n",[]),
    nl,
    format(" please consult the [currently non-existing] user's manual for details.~n",[]).


%:- p_not_table sample/1.
sample(Goal) :-
        chr_query(Goal,ResultList),
        list2conj(ResultList,Result),
        write(Goal),
        write('<==>'),
        writeq(Result),writeln('.').    %'


% does not work??
%(Q <=/=> R) :- \+ (Q <==> R).
%(Q ==/=> R) :- \+ (Q ===> R).

(Query <==> Result) :-
        add_result(Result,full),
        debugwriteln(trying(Query)),
        chr_query((Query,cleanup),ResultList),
        ( var(Result) ->
                list2conj(ResultList,Result)
        ;
                debugwriteln(found(ResultList)),
                chr_result_rest(Result,ResultList,[]),
                debugwriteln(goodGOODGOOD)
%                ,write('.')     %'
        ).

(Query ===> Result) :-
        add_result(Result, partial),
        chr_query((Query,cleanup),ResultList),
        ( var(Result) ->
                list2conj(ResultList,Result)
        ;
                chr_result_rest(Result,ResultList,_)
%                ,write('.')     %'
        ).

add_result(Result,X) :- 
        (ground(Result) ->
                result_status(X), result(Result)
        ;
                true
        ).


chr_result_rest((A,B),List,Rest) :-
        !,
        chr_result_rest(A,List,Rest1),
        chr_result_rest(B,Rest1,Rest).

chr_result_rest(true,List,List).

chr_result_rest(~(A),List,List) :-
        \+ chr_result_rest((A),List,_).
chr_result_rest(not(A),List,List) :-
        \+ chr_result_rest((A),List,_).
chr_result_rest(\+ A,List,List) :-
        \+ chr_result_rest((A),List,_).


chr_result_rest(A,List,Rest) :-
        select(A,List,Rest),!.


chr_result_rest(A,List,Rest) :- debugwriteln(not_good(A,List,Rest)), fail.



% no point in the following; learn and prob do not accept nonground stuff
%chr_result_rest(Builtin,List,List) :-
%        prolog_builtin(Builtin).
%prolog_builtin(A>B) :- A>B.
%prolog_builtin(A<B) :- A<B.
%prolog_builtin(A>=B) :- A>=B.
%prolog_builtin(A=<B) :- A=<B.
%prolog_builtin(A is B) :- A is B.
%prolog_builtin(A =:= B) :- A =:= B.
%prolog_builtin(A =/= B) :- A =/= B.


ccall(Q) :- semi_metacall(Q).

%:- p_table chr_query/2, semi_metacall/3, chr_semimetacall/3, '<==>'/2, '===>'/2.
:- p_table '<==>'/2, '===>'/2.
chr_query(Query,ResultList) :-
         semi_metacall(Query),
         findall(C,'$enumerate_constraints'(C),ResultList).

semi_metacall(X) :- var(X), !, writeln('Variable in query?'),fail.
semi_metacall((A,B)) :- !, semi_metacall(A), semi_metacall(B).
semi_metacall(G) :- functor(G,F,A), chr_constraint_predicate(F/A), !, chr_semimetacall(G).
semi_metacall(G) :- call(G).

chr_save_store(_X) :-
    true. % not doing this for now
%    writeln(start-save),
%    findall(K-V,enum_glob_vars(K,V),X),
%    writeln(saved(X)).


chr_load_store(_X) :-
    true. % not doing this for now
%    writeln(loading(X)),
%    set_all_global_vars(X).

%   retractall(swi_global_var_init(_,_)),
%   chr_init,
%   '$user__chr_initialization',

enum_glob_vars(K,V) :-
    swi_global_var_init(K,_),
    nb_getval(K,V).
enum_glob_vars(K,V) :-
    chr_runtime_global_variable(K),
    nb_getval(K,V).

set_all_global_vars([]).
set_all_global_vars([X-Y|Rest]) :-
    nb_setval(X,Y),
    set_all_global_vars(Rest).



conj2list(Conj,L) :-				%% transform conjunctions to list
  conj2list(Conj,L,[]).

conj2list(Conj,L,T) :-
  Conj = (G1,G2), !,
  conj2list(G1,L,T1),
  conj2list(G2,T1,T).
conj2list(G,[G | T],T).

list2conj([],true).
list2conj([X],X).
list2conj([X,Y|Z],(X,R)) :- list2conj([Y|Z],R).




/*  Generated by CHR bootstrap compiler
    From: /home/jon/onderzoek/apopcaleaps/music/music-vincent-1.chr
    Date: 16-4-2013 16:7:5

    DO NOT EDIT.  EDIT THE CHR FILE INSTEAD
*/

(:-op(1102,xfx,[<==>,===>,<=/=>,==/=>])).
(:-op(1160,xfx,times)).
(:-op(1150,fx,sample)).
(:-op(1150,fx,prob)).
(:-op(900,fx,~)).
(:-set_prism_flag(data_source,file('gui/training_set/training_set.dat'))).
maketest(A) :-
        (   (t(A)<==>B) ->
            writeq(instance(A,B)),
            write('.'),
            nl,
            fail
        ).
maketest(A) :-
        A<100,
        B is A+1,
        maketest(B).
ftest :-
        ftest(1, [[nr,s,u],[s,u],[u],[s],[nr,s],[nr,u]], 1, 10).
ftest0 :-
        ftest(1, [x], 1, 1).
ftest1 :-
        ftest(1, [s(x)], 1, 1).
ftest2 :-
        ftest(1, [s(s(x))], 1, 1).
ftest3 :-
        ftest(1, [s(s(s(x)))], 1, 1).
ftest(A, B, _, _) :-
        finstance(A, C),
        member(D, B),
        cputime(E),
        log_prob((failrules(D),w2(A)<==>C), F),
        cputime(G),
        H is G-E,
        format('data(~w,~w,~w,~w).~n', [D,A,H,F]),
        fail.
ftest(A, B, C, D) :-
        C<D,
        E is C+1,
        ftest(A, B, E, D).
ftest(A, B, C, C) :-
        A<50,
        D is A+1,
        ftest(D, B, 1, C).
(:-dynamic foo/1,ddd/1).
finstance(A, _) :-
        (   retractall(foo(_)),
            (w2(A)<==>B) ->
            assert(foo(B)),
            fail
        ).
finstance(_, A) :-
        foo(A).
fr :-
        failrules([nr,s,u]).
pt(A) :-
        finstance2(A, B),
        writeln(trying_log_prob((fr,A<==>B))),
        (log_prob fr,A<==>B).
finstance2(A, _) :-
        (   retractall(foo(_)),
            (A<==>B) ->
            assert(foo(B)),
            fail
        ).
finstance2(_, A) :-
        foo(A).
test :-
        test(1).
test(A) :-
        instance(A, B),
        cputime(C),
        log_prob((t(A)<==>B), _),
        cputime(D),
        E is D-C,
        format('data(~w,~w).~n', [A,E]),
        fail.
test(A) :-
        B is A+1,
        test(B).
ttest :-
        ttest(1).
ttest(A) :-
        instance(A, B),
        cputime(C),
        log_prob((t(A)<==>B), D),
        cputime(E),
        F is E-C,
        format('data(~w,~w,~w).~n', [A,F,D]),
        fail.
ttest(A) :-
        B is A+1,
        ttest(B).
ptest :-
        ptest(1).
ptest(A) :-
        instance(A, B),
        only_observables(B, C),
        cputime(D),
        log_prob((s(A)===>C), _),
        cputime(E),
        F is E-D,
        format('data(~w,~w).~n', [A,F]),
        fail.
ptest(A) :-
        B is A+1,
        ptest(B).
only_observables((A,B), C) :- !,
        only_observables(A, D),
        only_observables(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D,E)
        ).
only_observables(A, A) :-
        functor(A, B, C),
        observable(B/C), !.
only_observables(_, true).
observable(note/5).
observable(octave/5).
observable(beat/5).
observable(tied/4).
wfail(A) :-
        debugwriteln(failing(A)),
        fail.
debugwrite(A) :-
        (   ddd(on) ->
            write(A)
        ;   true
        ).
debugwriteln(A) :-
        (   ddd(on) ->
            writeln(A)
        ;   true
        ).
dodebug :-
        retractall(ddd(_)),
        assert(ddd(on)).
nodebug :-
        retractall(ddd(_)),
        assert(ddd(off)).
ddd(on).
filter(_, [], []).
filter(A, [B|C], [B|D]) :-
        call(A, B),
        filter(A, C, D), !.
filter(A, [_|B], C) :-
        filter(A, B, C).
boundary_of([A,B]) :-
        functor(B, theme_boundary, 2),
        arg(1, B, A).
theme_boundaries(A) :-
        findall([A,B], find_chr_constraint(B), C),
        filter(boundary_of, C, D),
        boundary_list(D).
values_x(split_beat(_), [1-2]).
octave_compare(A, A, _, low).
octave_compare(_, A, A, high).
octave_compare(A, B, C, mid) :-
        A<B,
        B<C.
values_x(join_notes(_,_,_), [1-2]).
values_x(join_notes(_,_,_), [1-2]).
is_rest(r).
is_rest(r+' ~').
abstract_beat1(_, 0, 0, first) :- !.
abstract_beat1(A, B, 0, strong) :-
        0 is A mod 2,
        B is A//2, !.
abstract_beat1(3, 1, 0, strong) :- !.
abstract_beat1(3, 2, 0, strong) :- !.
abstract_beat1(2, 0, 0.5, weak) :- !.
abstract_beat1(2, 1, 0.5, weak) :- !.
abstract_beat1(3, _, 0.5, weak) :- !.
abstract_beat1(4, 1, 0, weak) :- !.
abstract_beat1(4, 3, 0, weak) :- !.
abstract_beat1(6, _, 0, weak) :- !.
abstract_beat1(2, _, 0.75, prestrong) :- !.
abstract_beat1(4, 1, 0.5, prestrong) :- !.
abstract_beat1(4, 3, 0.5, prestrong) :- !.
abstract_beat1(3, 2, 0.5, prestrong) :- !.
abstract_beat1(6, 5, 0.5, prestrong) :- !.
abstract_beat1(_, _, _, weakest) :- !.
pick_concrete_note(A, B, C, D) :-
        msw(concrete(A,B,C), D).
note_below(A, B) :-
        note_dbelow(A, B).
note_below(A, B) :-
        note_dbelow(A, C),
        note_below(C, B).
note_above(A, B) :-
        note_below(B, A).
note_dbelow(c, d).
note_dbelow(d, e).
note_dbelow(e, f).
note_dbelow(f, g).
note_dbelow(g, a).
note_dbelow(a, b).
interval(A, B, C, D, E) :-
        pure_pitch(A, F),
        pure_pitch(C, G),
        debugwriteln(interval(F,B,G,D,E)),
        H is 12*(D-B),
        interval(F, G, I),
        E is H+I.
pure_pitch(A, A) :-
        member(A, [c,cis,d,dis,e,f,fis,g,gis,a,ais,b]).
dinterval(c, cis, 1).
dinterval(cis, d, 1).
dinterval(d, dis, 1).
dinterval(dis, e, 1).
dinterval(e, f, 1).
dinterval(f, fis, 1).
dinterval(fis, g, 1).
dinterval(g, gis, 1).
dinterval(gis, a, 1).
dinterval(a, ais, 1).
dinterval(ais, b, 1).
dinterval(b, c, -11).
pinterval(A, B, C) :-
        dinterval(A, B, C).
pinterval(A, B, C) :-
        dinterval(A, D, E),
        pinterval(D, B, F),
        C is E+F.
interval(A, A, 0) :- !.
interval(A, B, C) :-
        pinterval(A, B, C), !.
set_range(A, B, C, D, E) :-
        add(D, B, C, F, G),
        add(E, B, C, H, I),
        range(A, F, G, H, I).
add(A, B, C, D, E) :-
        A>11, !,
        F is A-12,
        G is C+1,
        add(F, B, G, D, E).
add(A, B, C, D, E) :-
        A<0, !,
        F is A+12,
        G is C-1,
        add(F, B, G, D, E).
add(A, B, C, D, E) :-
        A>0,
        dinterval(B, F, 1), !,
        G is A-1,
        add(G, F, C, D, E).
add(1, b, A, c, B) :- !,
        B is A+1.
add(0, A, B, A, B).
soft_msw(A, B) :-
        '$pp_get_distribution'(A, C, D), !,
        zip(C, D, E),
        soft_choose(E, B).
zip([], [], []).
zip([A|B], [C|D], [A-C|E]) :-
        zip(B, D, E).
soft_choose([], _) :- !,
        fail.
soft_choose(A, B) :-
        zip(C, D, A),
        sumlist(D, E),
        E>0,
        random_uniform(E, F),
        '$pp_choose'(D, F, C, G, H),
        delete(A, G-H, I),
        (   B=G
        ;   soft_choose(I, B)
        ).
octave_notation(7, '\'\'\'\'').
octave_notation(6, '\'\'\'').
octave_notation(5, '\'\'').
octave_notation(4, '\'').
octave_notation(3, '').
octave_notation(2, ',').
octave_notation(1, ',,').
octave_notation(0, ',,,').
lilypond :-
        writeln('Invoking GNU Lilypond...'),
        system('lilypond temp.ly 2>/dev/null').
header :-
        writeln('\\version "2.12.1"').
footer :-
        writeln('\\score{'),
        writeln('  <<'),
        show_voice_footers,
        writeln('  >>').
end_footer :-
        writeln('}').
chaos(A, B) :-
        chaos_group(A, C),
        add_chaos(C, B).
add_chaos([], _).
add_chaos([A|B], C) :-
        findall(A-D, get_sw(A,[_,_,D]), E),
        add_chaos2(E, C),
        add_chaos(B, C).
add_chaos2([], _).
add_chaos2([A-B|C], D) :-
        length(B, E),
        add_chaos(B, E, D, F),
        writeln(adding_chaos(D,A,B,F)),
        set_sw(A, F),
        add_chaos2(C, D).
add_chaos([], _, _, []).
add_chaos([A|B], C, D, [E|F]) :-
        E is((100-D)*A+D/C)/100,
        add_chaos(B, C, D, F).
(:-include(values)).
(:-include('gui/saved_parameters.pl')).
(:-include('gui/param_tuning/save_params.pl')).
(:-use_module(chr(chr_runtime))).
(:-use_module(chr(chr_hashtable_store))).
'$activate_constraint_result_status/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_result/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_cleanup/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_e/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_t/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_t/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_u/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_s/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_v/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_s/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_w/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_w2/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_failrules/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resultnote/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resultanote/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resultoctave/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resultbeat/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_check_resultbeat/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resultmchord/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_resulttied/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_check/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_check2/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_initial/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_measures/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_meter/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_repeats/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_key/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_shortest_duration/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_tempo/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_voice/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_range/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_max_jump/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_instrument/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_chord_style/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_max_repeat/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_measure/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_mchord/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_beat/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_note/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_octave/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_tied/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_make_measures/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_next_measure/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_make_beats/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_next_beat/7'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_anote/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_phase/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_chord/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_octave_d/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_octave_rangecheck/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_same_note_counter/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_make_notes_measure/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_find_octave_d/5'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_chord_scheme/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_theme_boundary/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_unspecified_measure/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_unspecified_successor/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_max_unspecified/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_boundary_list/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_theme_length/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_next_theme_instance/3'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_theme_boundary_count/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_first_theme_start/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_first_theme/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_num_first_theme_repeats/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_first_theme_repetition/3'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_increment_first_theme_rep/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_occurrence_count/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_first_theme_occurrence/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_increment_occurrences/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_first_theme_end/2'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_number_duplicates/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_duplicated_measure/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_increment_duplicates/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_number_duplicated_measures/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_all_duplicates/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_number_removed_unspecified_successors/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_removed_unspecified_successor/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_all_occurrences/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_restored_unspec/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_abstract_beat/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_write_notes/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show/3'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show_notes/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_voice_header/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_voice_footer/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_maybe_close_bracket/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show_note/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show_mods/1'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_maybe_show_octave/4'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_tempo_declaration/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_play/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_play_footer/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show_footer/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$activate_constraint_show_voice_footers/0'(C, A) :-
        arg(2, A, B),
        'chr get_mutable'(D, B),
        'chr update_mutable'(active, B),
        true,
        (   D==not_stored_yet ->
            C=yes
        ;   C=no
        ).
'$remove_constraint_internal_result_status/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_result/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_cleanup/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_e/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_t/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_t/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_u/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_s/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_v/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_s/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_w/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_w2/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_failrules/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resultnote/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resultanote/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resultoctave/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resultbeat/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_check_resultbeat/5'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resultmchord/2'(suspension(_,B,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_resulttied/4'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_check/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_check2/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_initial/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_max_repeat/2'(suspension(_,B,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_beat/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_octave/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_make_measures/1'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_make_beats/4'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_next_beat/7'(suspension(_,B,_,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_phase/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_chord/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_octave_d/5'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_octave_rangecheck/5'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_same_note_counter/5'(suspension(_,B,_,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_make_notes_measure/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_find_octave_d/5'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_chord_scheme/1'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_unspecified_measure/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_unspecified_successor/2'(suspension(_,B,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_max_unspecified/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_boundary_list/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_theme_length/2'(suspension(_,B,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_next_theme_instance/3'(suspension(_,B,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_num_first_theme_repeats/2'(suspension(_,B,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_increment_first_theme_rep/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_occurrence_count/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_increment_occurrences/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_increment_duplicates/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_number_duplicated_measures/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_all_duplicates/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_number_removed_unspecified_successors/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_removed_unspecified_successor/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_all_occurrences/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_restored_unspec/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_abstract_beat/4'(suspension(_,B,_,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_write_notes/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show/3'(suspension(_,B,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show_notes/4'(suspension(_,B,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_voice_header/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_voice_footer/1'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_maybe_close_bracket/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show_note/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show_mods/1'(suspension(_,B,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_maybe_show_octave/4'(suspension(_,B,_,_,_,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_tempo_declaration/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_play_footer/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show_footer/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$remove_constraint_internal_show_voice_footers/0'(suspension(_,B,_,_), A) :-
        (   var(B) ->
            A=no
        ;   'chr get_mutable'(C, B),
            'chr update_mutable'(removed, B),
            (   C=not_stored_yet ->
                A=no
            ;   A=yes
            )
        ).
'$insert_constraint_internal_result_status/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_result/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_cleanup/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_e/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_t/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_t/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_u/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_s/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_v/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_s/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_w/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_w2/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_failrules/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_resultnote/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_resultanote/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_resultoctave/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_resultbeat/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_check_resultbeat/5'(suspension(F,G,H,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_resultmchord/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_resulttied/4'(suspension(E,F,G,_,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_check/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_check2/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_initial/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_measures/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_meter/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_repeats/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_key/1'(suspension(B,C,D,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_shortest_duration/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_tempo/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_voice/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_range/5'(suspension(F,G,H,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_max_jump/2'(suspension(C,D,E,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_instrument/2'(suspension(C,D,E,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_chord_style/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_max_repeat/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_measure/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_mchord/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_beat/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_note/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_octave/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_tied/4'(suspension(E,F,G,_,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_make_measures/1'(suspension(B,C,D,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_next_measure/2'(suspension(C,D,E,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_make_beats/4'(suspension(E,F,G,_,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_next_beat/7'(suspension(H,I,J,A,B,C,D,E,F,G), A, B, C, D, E, F, G) :-
        'chr create_mutable'(active, I),
        true,
        'chr create_mutable'(t, J),
        'chr gen_id'(H).
'$insert_constraint_internal_anote/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_phase/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_chord/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_octave_d/5'(suspension(F,G,H,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_octave_rangecheck/5'(suspension(F,G,H,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_same_note_counter/5'(suspension(F,G,H,_,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_make_notes_measure/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_find_octave_d/5'(suspension(F,G,H,A,B,C,D,E), A, B, C, D, E) :-
        'chr create_mutable'(active, G),
        true,
        'chr create_mutable'(t, H),
        'chr gen_id'(F).
'$insert_constraint_internal_chord_scheme/1'(suspension(B,C,D,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_theme_boundary/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_unspecified_measure/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_unspecified_successor/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_max_unspecified/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_boundary_list/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_theme_length/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_next_theme_instance/3'(suspension(D,E,F,_,A,B,C), A, B, C) :-
        'chr create_mutable'(active, E),
        true,
        'chr create_mutable'(t, F),
        'chr gen_id'(D).
'$insert_constraint_internal_theme_boundary_count/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_first_theme_start/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_first_theme/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_num_first_theme_repeats/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_first_theme_repetition/3'(suspension(D,E,F,_,A,B,C), A, B, C) :-
        'chr create_mutable'(active, E),
        true,
        'chr create_mutable'(t, F),
        'chr gen_id'(D).
'$insert_constraint_internal_increment_first_theme_rep/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_occurrence_count/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_first_theme_occurrence/4'(suspension(E,F,G,_,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_increment_occurrences/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_first_theme_end/2'(suspension(C,D,E,_,A,B), A, B) :-
        'chr create_mutable'(active, D),
        true,
        'chr create_mutable'(t, E),
        'chr gen_id'(C).
'$insert_constraint_internal_number_duplicates/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_duplicated_measure/1'(suspension(B,C,D,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_increment_duplicates/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_number_duplicated_measures/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_all_duplicates/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_number_removed_unspecified_successors/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_removed_unspecified_successor/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_all_occurrences/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_restored_unspec/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_abstract_beat/4'(suspension(E,F,G,_,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_write_notes/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_show/3'(suspension(D,E,F,_,A,B,C), A, B, C) :-
        'chr create_mutable'(active, E),
        true,
        'chr create_mutable'(t, F),
        'chr gen_id'(D).
'$insert_constraint_internal_show_notes/4'(suspension(E,F,G,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_voice_header/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_voice_footer/1'(suspension(B,C,D,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_maybe_close_bracket/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_show_note/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_show_mods/1'(suspension(B,C,D,_,A), A) :-
        'chr create_mutable'(active, C),
        true,
        'chr create_mutable'(t, D),
        'chr gen_id'(B).
'$insert_constraint_internal_maybe_show_octave/4'(suspension(E,F,G,A,B,C,D), A, B, C, D) :-
        'chr create_mutable'(active, F),
        true,
        'chr create_mutable'(t, G),
        'chr gen_id'(E).
'$insert_constraint_internal_tempo_declaration/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_play/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_show/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_play_footer/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_show_footer/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$insert_constraint_internal_show_voice_footers/0'(suspension(A,B,C,_)) :-
        'chr create_mutable'(active, B),
        true,
        'chr create_mutable'(t, C),
        'chr gen_id'(A).
'$novel_production'(A, B) :-
        arg(3, A, C),
        'chr get_mutable'(D, C),
        (   get_ds(B, D, _) ->
            fail
        ;   true
        ).
'$extend_history'(C, D) :-
        arg(3, C, B),
        'chr get_mutable'(E, B),
        put_ds(D, E, x, A),
        'chr update_mutable'(A, B).
chr_constraint_predicate(result_status/1).
chr_constraint_predicate(result/1).
chr_constraint_predicate(cleanup/0).
chr_constraint_predicate(e/0).
chr_constraint_predicate(t/0).
chr_constraint_predicate(t/1).
chr_constraint_predicate(u/0).
chr_constraint_predicate(s/0).
chr_constraint_predicate(v/0).
chr_constraint_predicate(s/1).
chr_constraint_predicate(w/1).
chr_constraint_predicate(w2/1).
chr_constraint_predicate(failrules/1).
chr_constraint_predicate(resultnote/5).
chr_constraint_predicate(resultanote/5).
chr_constraint_predicate(resultoctave/5).
chr_constraint_predicate(resultbeat/5).
chr_constraint_predicate(check_resultbeat/5).
chr_constraint_predicate(resultmchord/2).
chr_constraint_predicate(resulttied/4).
chr_constraint_predicate(check/1).
chr_constraint_predicate(check2/1).
chr_constraint_predicate(initial/0).
chr_constraint_predicate(measures/1).
chr_constraint_predicate(meter/2).
chr_constraint_predicate(repeats/1).
chr_constraint_predicate(key/1).
chr_constraint_predicate(shortest_duration/2).
chr_constraint_predicate(tempo/1).
chr_constraint_predicate(voice/1).
chr_constraint_predicate(range/5).
chr_constraint_predicate(max_jump/2).
chr_constraint_predicate(instrument/2).
chr_constraint_predicate(chord_style/1).
chr_constraint_predicate(max_repeat/2).
chr_constraint_predicate(measure/1).
chr_constraint_predicate(mchord/2).
chr_constraint_predicate(beat/5).
chr_constraint_predicate(note/5).
chr_constraint_predicate(octave/5).
chr_constraint_predicate(tied/4).
chr_constraint_predicate(make_measures/1).
chr_constraint_predicate(next_measure/2).
chr_constraint_predicate(make_beats/4).
chr_constraint_predicate(next_beat/7).
chr_constraint_predicate(anote/5).
chr_constraint_predicate(phase/1).
chr_constraint_predicate(chord/5).
chr_constraint_predicate(octave_d/5).
chr_constraint_predicate(octave_rangecheck/5).
chr_constraint_predicate(same_note_counter/5).
chr_constraint_predicate(make_notes_measure/1).
chr_constraint_predicate(find_octave_d/5).
chr_constraint_predicate(chord_scheme/1).
chr_constraint_predicate(theme_boundary/2).
chr_constraint_predicate(unspecified_measure/1).
chr_constraint_predicate(unspecified_successor/2).
chr_constraint_predicate(max_unspecified/1).
chr_constraint_predicate(boundary_list/1).
chr_constraint_predicate(theme_length/2).
chr_constraint_predicate(next_theme_instance/3).
chr_constraint_predicate(theme_boundary_count/2).
chr_constraint_predicate(first_theme_start/2).
chr_constraint_predicate(first_theme/1).
chr_constraint_predicate(num_first_theme_repeats/2).
chr_constraint_predicate(first_theme_repetition/3).
chr_constraint_predicate(increment_first_theme_rep/0).
chr_constraint_predicate(occurrence_count/1).
chr_constraint_predicate(first_theme_occurrence/4).
chr_constraint_predicate(increment_occurrences/0).
chr_constraint_predicate(first_theme_end/2).
chr_constraint_predicate(number_duplicates/1).
chr_constraint_predicate(duplicated_measure/1).
chr_constraint_predicate(increment_duplicates/0).
chr_constraint_predicate(number_duplicated_measures/1).
chr_constraint_predicate(all_duplicates/0).
chr_constraint_predicate(number_removed_unspecified_successors/1).
chr_constraint_predicate(removed_unspecified_successor/0).
chr_constraint_predicate(all_occurrences/0).
chr_constraint_predicate(restored_unspec/0).
chr_constraint_predicate(abstract_beat/4).
chr_constraint_predicate(write_notes/0).
chr_constraint_predicate(show/3).
chr_constraint_predicate(show_notes/4).
chr_constraint_predicate(voice_header/1).
chr_constraint_predicate(voice_footer/1).
chr_constraint_predicate(maybe_close_bracket/0).
chr_constraint_predicate(show_note/1).
chr_constraint_predicate(show_mods/1).
chr_constraint_predicate(maybe_show_octave/4).
chr_constraint_predicate(tempo_declaration/0).
chr_constraint_predicate(play/0).
chr_constraint_predicate(show/0).
chr_constraint_predicate(play_footer/0).
chr_constraint_predicate(show_footer/0).
chr_constraint_predicate(show_voice_footers/0).
chr_semimetacall(result_status(A)) :-
        chr_wrapped_result_status(A).
chr_semimetacall(result(A)) :-
        chr_wrapped_result(A).
chr_semimetacall(cleanup) :-
        chr_wrapped_cleanup.
chr_semimetacall(e) :-
        chr_wrapped_e.
chr_semimetacall(t) :-
        chr_wrapped_t.
chr_semimetacall(t(A)) :-
        chr_wrapped_t(A).
chr_semimetacall(u) :-
        chr_wrapped_u.
chr_semimetacall(s) :-
        chr_wrapped_s.
chr_semimetacall(v) :-
        chr_wrapped_v.
chr_semimetacall(s(A)) :-
        chr_wrapped_s(A).
chr_semimetacall(w(A)) :-
        chr_wrapped_w(A).
chr_semimetacall(w2(A)) :-
        chr_wrapped_w2(A).
chr_semimetacall(failrules(A)) :-
        chr_wrapped_failrules(A).
chr_semimetacall(resultnote(A,B,C,D,E)) :-
        chr_wrapped_resultnote(A, B, C, D, E).
chr_semimetacall(resultanote(A,B,C,D,E)) :-
        chr_wrapped_resultanote(A, B, C, D, E).
chr_semimetacall(resultoctave(A,B,C,D,E)) :-
        chr_wrapped_resultoctave(A, B, C, D, E).
chr_semimetacall(resultbeat(A,B,C,D,E)) :-
        chr_wrapped_resultbeat(A, B, C, D, E).
chr_semimetacall(check_resultbeat(A,B,C,D,E)) :-
        chr_wrapped_check_resultbeat(A, B, C, D, E).
chr_semimetacall(resultmchord(A,B)) :-
        chr_wrapped_resultmchord(A, B).
chr_semimetacall(resulttied(A,B,C,D)) :-
        chr_wrapped_resulttied(A, B, C, D).
chr_semimetacall(check(A)) :-
        chr_wrapped_check(A).
chr_semimetacall(check2(A)) :-
        chr_wrapped_check2(A).
chr_semimetacall(initial) :-
        chr_wrapped_initial.
chr_semimetacall(measures(A)) :-
        chr_wrapped_measures(A).
chr_semimetacall(meter(A,B)) :-
        chr_wrapped_meter(A, B).
chr_semimetacall(repeats(A)) :-
        chr_wrapped_repeats(A).
chr_semimetacall(key(A)) :-
        chr_wrapped_key(A).
chr_semimetacall(shortest_duration(A,B)) :-
        chr_wrapped_shortest_duration(A, B).
chr_semimetacall(tempo(A)) :-
        chr_wrapped_tempo(A).
chr_semimetacall(voice(A)) :-
        chr_wrapped_voice(A).
chr_semimetacall(range(A,B,C,D,E)) :-
        chr_wrapped_range(A, B, C, D, E).
chr_semimetacall(max_jump(A,B)) :-
        chr_wrapped_max_jump(A, B).
chr_semimetacall(instrument(A,B)) :-
        chr_wrapped_instrument(A, B).
chr_semimetacall(chord_style(A)) :-
        chr_wrapped_chord_style(A).
chr_semimetacall(max_repeat(A,B)) :-
        chr_wrapped_max_repeat(A, B).
chr_semimetacall(measure(A)) :-
        chr_wrapped_measure(A).
chr_semimetacall(mchord(A,B)) :-
        chr_wrapped_mchord(A, B).
chr_semimetacall(beat(A,B,C,D,E)) :-
        chr_wrapped_beat(A, B, C, D, E).
chr_semimetacall(note(A,B,C,D,E)) :-
        chr_wrapped_note(A, B, C, D, E).
chr_semimetacall(octave(A,B,C,D,E)) :-
        chr_wrapped_octave(A, B, C, D, E).
chr_semimetacall(tied(A,B,C,D)) :-
        chr_wrapped_tied(A, B, C, D).
chr_semimetacall(make_measures(A)) :-
        chr_wrapped_make_measures(A).
chr_semimetacall(next_measure(A,B)) :-
        chr_wrapped_next_measure(A, B).
chr_semimetacall(make_beats(A,B,C,D)) :-
        chr_wrapped_make_beats(A, B, C, D).
chr_semimetacall(next_beat(A,B,C,D,E,F,G)) :-
        chr_wrapped_next_beat(A, B, C, D, E, F, G).
chr_semimetacall(anote(A,B,C,D,E)) :-
        chr_wrapped_anote(A, B, C, D, E).
chr_semimetacall(phase(A)) :-
        chr_wrapped_phase(A).
chr_semimetacall(chord(A,B,C,D,E)) :-
        chr_wrapped_chord(A, B, C, D, E).
chr_semimetacall(octave_d(A,B,C,D,E)) :-
        chr_wrapped_octave_d(A, B, C, D, E).
chr_semimetacall(octave_rangecheck(A,B,C,D,E)) :-
        chr_wrapped_octave_rangecheck(A, B, C, D, E).
chr_semimetacall(same_note_counter(A,B,C,D,E)) :-
        chr_wrapped_same_note_counter(A, B, C, D, E).
chr_semimetacall(make_notes_measure(A)) :-
        chr_wrapped_make_notes_measure(A).
chr_semimetacall(find_octave_d(A,B,C,D,E)) :-
        chr_wrapped_find_octave_d(A, B, C, D, E).
chr_semimetacall(chord_scheme(A)) :-
        chr_wrapped_chord_scheme(A).
chr_semimetacall(theme_boundary(A,B)) :-
        chr_wrapped_theme_boundary(A, B).
chr_semimetacall(unspecified_measure(A)) :-
        chr_wrapped_unspecified_measure(A).
chr_semimetacall(unspecified_successor(A,B)) :-
        chr_wrapped_unspecified_successor(A, B).
chr_semimetacall(max_unspecified(A)) :-
        chr_wrapped_max_unspecified(A).
chr_semimetacall(boundary_list(A)) :-
        chr_wrapped_boundary_list(A).
chr_semimetacall(theme_length(A,B)) :-
        chr_wrapped_theme_length(A, B).
chr_semimetacall(next_theme_instance(A,B,C)) :-
        chr_wrapped_next_theme_instance(A, B, C).
chr_semimetacall(theme_boundary_count(A,B)) :-
        chr_wrapped_theme_boundary_count(A, B).
chr_semimetacall(first_theme_start(A,B)) :-
        chr_wrapped_first_theme_start(A, B).
chr_semimetacall(first_theme(A)) :-
        chr_wrapped_first_theme(A).
chr_semimetacall(num_first_theme_repeats(A,B)) :-
        chr_wrapped_num_first_theme_repeats(A, B).
chr_semimetacall(first_theme_repetition(A,B,C)) :-
        chr_wrapped_first_theme_repetition(A, B, C).
chr_semimetacall(increment_first_theme_rep) :-
        chr_wrapped_increment_first_theme_rep.
chr_semimetacall(occurrence_count(A)) :-
        chr_wrapped_occurrence_count(A).
chr_semimetacall(first_theme_occurrence(A,B,C,D)) :-
        chr_wrapped_first_theme_occurrence(A, B, C, D).
chr_semimetacall(increment_occurrences) :-
        chr_wrapped_increment_occurrences.
chr_semimetacall(first_theme_end(A,B)) :-
        chr_wrapped_first_theme_end(A, B).
chr_semimetacall(number_duplicates(A)) :-
        chr_wrapped_number_duplicates(A).
chr_semimetacall(duplicated_measure(A)) :-
        chr_wrapped_duplicated_measure(A).
chr_semimetacall(increment_duplicates) :-
        chr_wrapped_increment_duplicates.
chr_semimetacall(number_duplicated_measures(A)) :-
        chr_wrapped_number_duplicated_measures(A).
chr_semimetacall(all_duplicates) :-
        chr_wrapped_all_duplicates.
chr_semimetacall(number_removed_unspecified_successors(A)) :-
        chr_wrapped_number_removed_unspecified_successors(A).
chr_semimetacall(removed_unspecified_successor) :-
        chr_wrapped_removed_unspecified_successor.
chr_semimetacall(all_occurrences) :-
        chr_wrapped_all_occurrences.
chr_semimetacall(restored_unspec) :-
        chr_wrapped_restored_unspec.
chr_semimetacall(abstract_beat(A,B,C,D)) :-
        chr_wrapped_abstract_beat(A, B, C, D).
chr_semimetacall(write_notes) :-
        chr_wrapped_write_notes.
chr_semimetacall(show(A,B,C)) :-
        chr_wrapped_show(A, B, C).
chr_semimetacall(show_notes(A,B,C,D)) :-
        chr_wrapped_show_notes(A, B, C, D).
chr_semimetacall(voice_header(A)) :-
        chr_wrapped_voice_header(A).
chr_semimetacall(voice_footer(A)) :-
        chr_wrapped_voice_footer(A).
chr_semimetacall(maybe_close_bracket) :-
        chr_wrapped_maybe_close_bracket.
chr_semimetacall(show_note(A)) :-
        chr_wrapped_show_note(A).
chr_semimetacall(show_mods(A)) :-
        chr_wrapped_show_mods(A).
chr_semimetacall(maybe_show_octave(A,B,C,D)) :-
        chr_wrapped_maybe_show_octave(A, B, C, D).
chr_semimetacall(tempo_declaration) :-
        chr_wrapped_tempo_declaration.
chr_semimetacall(play) :-
        chr_wrapped_play.
chr_semimetacall(show) :-
        chr_wrapped_show.
chr_semimetacall(play_footer) :-
        chr_wrapped_play_footer.
chr_semimetacall(show_footer) :-
        chr_wrapped_show_footer.
chr_semimetacall(show_voice_footers) :-
        chr_wrapped_show_voice_footers.
chr_wrapped_result_status(A) :-
        result_status(A).
chr_wrapped_result(A) :-
        result(A).
chr_wrapped_cleanup :-
        cleanup.
chr_wrapped_e :-
        e.
chr_wrapped_t :-
        t.
chr_wrapped_t(A) :-
        t(A).
chr_wrapped_u :-
        u.
chr_wrapped_s :-
        s.
chr_wrapped_v :-
        v.
chr_wrapped_s(A) :-
        s(A).
chr_wrapped_w(A) :-
        w(A).
chr_wrapped_w2(A) :-
        w2(A).
chr_wrapped_failrules(A) :-
        failrules(A).
chr_wrapped_resultnote(A, B, C, D, E) :-
        resultnote(A, B, C, D, E).
chr_wrapped_resultanote(A, B, C, D, E) :-
        resultanote(A, B, C, D, E).
chr_wrapped_resultoctave(A, B, C, D, E) :-
        resultoctave(A, B, C, D, E).
chr_wrapped_resultbeat(A, B, C, D, E) :-
        resultbeat(A, B, C, D, E).
chr_wrapped_check_resultbeat(A, B, C, D, E) :-
        check_resultbeat(A, B, C, D, E).
chr_wrapped_resultmchord(A, B) :-
        resultmchord(A, B).
chr_wrapped_resulttied(A, B, C, D) :-
        resulttied(A, B, C, D).
chr_wrapped_check(A) :-
        check(A).
chr_wrapped_check2(A) :-
        check2(A).
chr_wrapped_initial :-
        initial.
chr_wrapped_measures(A) :-
        measures(A).
chr_wrapped_meter(A, B) :-
        meter(A, B).
chr_wrapped_repeats(A) :-
        repeats(A).
chr_wrapped_key(A) :-
        key(A).
chr_wrapped_shortest_duration(A, B) :-
        shortest_duration(A, B).
chr_wrapped_tempo(A) :-
        tempo(A).
chr_wrapped_voice(A) :-
        voice(A).
chr_wrapped_range(A, B, C, D, E) :-
        range(A, B, C, D, E).
chr_wrapped_max_jump(A, B) :-
        max_jump(A, B).
chr_wrapped_instrument(A, B) :-
        instrument(A, B).
chr_wrapped_chord_style(A) :-
        chord_style(A).
chr_wrapped_max_repeat(A, B) :-
        max_repeat(A, B).
chr_wrapped_measure(A) :-
        measure(A).
chr_wrapped_mchord(A, B) :-
        mchord(A, B).
chr_wrapped_beat(A, B, C, D, E) :-
        beat(A, B, C, D, E).
chr_wrapped_note(A, B, C, D, E) :-
        note(A, B, C, D, E).
chr_wrapped_octave(A, B, C, D, E) :-
        octave(A, B, C, D, E).
chr_wrapped_tied(A, B, C, D) :-
        tied(A, B, C, D).
chr_wrapped_make_measures(A) :-
        make_measures(A).
chr_wrapped_next_measure(A, B) :-
        next_measure(A, B).
chr_wrapped_make_beats(A, B, C, D) :-
        make_beats(A, B, C, D).
chr_wrapped_next_beat(A, B, C, D, E, F, G) :-
        next_beat(A, B, C, D, E, F, G).
chr_wrapped_anote(A, B, C, D, E) :-
        anote(A, B, C, D, E).
chr_wrapped_phase(A) :-
        phase(A).
chr_wrapped_chord(A, B, C, D, E) :-
        chord(A, B, C, D, E).
chr_wrapped_octave_d(A, B, C, D, E) :-
        octave_d(A, B, C, D, E).
chr_wrapped_octave_rangecheck(A, B, C, D, E) :-
        octave_rangecheck(A, B, C, D, E).
chr_wrapped_same_note_counter(A, B, C, D, E) :-
        same_note_counter(A, B, C, D, E).
chr_wrapped_make_notes_measure(A) :-
        make_notes_measure(A).
chr_wrapped_find_octave_d(A, B, C, D, E) :-
        find_octave_d(A, B, C, D, E).
chr_wrapped_chord_scheme(A) :-
        chord_scheme(A).
chr_wrapped_theme_boundary(A, B) :-
        theme_boundary(A, B).
chr_wrapped_unspecified_measure(A) :-
        unspecified_measure(A).
chr_wrapped_unspecified_successor(A, B) :-
        unspecified_successor(A, B).
chr_wrapped_max_unspecified(A) :-
        max_unspecified(A).
chr_wrapped_boundary_list(A) :-
        boundary_list(A).
chr_wrapped_theme_length(A, B) :-
        theme_length(A, B).
chr_wrapped_next_theme_instance(A, B, C) :-
        next_theme_instance(A, B, C).
chr_wrapped_theme_boundary_count(A, B) :-
        theme_boundary_count(A, B).
chr_wrapped_first_theme_start(A, B) :-
        first_theme_start(A, B).
chr_wrapped_first_theme(A) :-
        first_theme(A).
chr_wrapped_num_first_theme_repeats(A, B) :-
        num_first_theme_repeats(A, B).
chr_wrapped_first_theme_repetition(A, B, C) :-
        first_theme_repetition(A, B, C).
chr_wrapped_increment_first_theme_rep :-
        increment_first_theme_rep.
chr_wrapped_occurrence_count(A) :-
        occurrence_count(A).
chr_wrapped_first_theme_occurrence(A, B, C, D) :-
        first_theme_occurrence(A, B, C, D).
chr_wrapped_increment_occurrences :-
        increment_occurrences.
chr_wrapped_first_theme_end(A, B) :-
        first_theme_end(A, B).
chr_wrapped_number_duplicates(A) :-
        number_duplicates(A).
chr_wrapped_duplicated_measure(A) :-
        duplicated_measure(A).
chr_wrapped_increment_duplicates :-
        increment_duplicates.
chr_wrapped_number_duplicated_measures(A) :-
        number_duplicated_measures(A).
chr_wrapped_all_duplicates :-
        all_duplicates.
chr_wrapped_number_removed_unspecified_successors(A) :-
        number_removed_unspecified_successors(A).
chr_wrapped_removed_unspecified_successor :-
        removed_unspecified_successor.
chr_wrapped_all_occurrences :-
        all_occurrences.
chr_wrapped_restored_unspec :-
        restored_unspec.
chr_wrapped_abstract_beat(A, B, C, D) :-
        abstract_beat(A, B, C, D).
chr_wrapped_write_notes :-
        write_notes.
chr_wrapped_show(A, B, C) :-
        show(A, B, C).
chr_wrapped_show_notes(A, B, C, D) :-
        show_notes(A, B, C, D).
chr_wrapped_voice_header(A) :-
        voice_header(A).
chr_wrapped_voice_footer(A) :-
        voice_footer(A).
chr_wrapped_maybe_close_bracket :-
        maybe_close_bracket.
chr_wrapped_show_note(A) :-
        show_note(A).
chr_wrapped_show_mods(A) :-
        show_mods(A).
chr_wrapped_maybe_show_octave(A, B, C, D) :-
        maybe_show_octave(A, B, C, D).
chr_wrapped_tempo_declaration :-
        tempo_declaration.
chr_wrapped_play :-
        play.
chr_wrapped_show :-
        show.
chr_wrapped_play_footer :-
        play_footer.
chr_wrapped_show_footer :-
        show_footer.
chr_wrapped_show_voice_footers :-
        show_voice_footers.
'$insert_in_store_result_status/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:result_status/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:result_status/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_result_status/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:result_status/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:result_status/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_result/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:result/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:result/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_result/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:result/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:result/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_cleanup/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:cleanup/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:cleanup/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_cleanup/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:cleanup/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:cleanup/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_e/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:e/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:e/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_e/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:e/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:e/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_t/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:t/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:t/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_t/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:t/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:t/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_t/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:t/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:t/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_t/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:t/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:t/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_u/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:u/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:u/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_u/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:u/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:u/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_s/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:s/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:s/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_s/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:s/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:s/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_v/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:v/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:v/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_v/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:v/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:v/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_s/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:s/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:s/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_s/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:s/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:s/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_w/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:w/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:w/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_w/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:w/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:w/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_w2/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:w2/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:w2/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_w2/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:w2/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:w2/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_failrules/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:failrules/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:failrules/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:failrules/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_failrules/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:failrules/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:failrules/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:failrules/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_resultnote/5'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        arg(9, A, I),
        nb_getval('$chr_store_multi_hash_user:resultnote/5-12345', J),
        insert_ht(J, k(E,F,G,H,I), A),
        true,
        nb_getval('$chr_store_global_ground_user:resultnote/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resultnote/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resultnote/5'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        arg(9, A, J),
        nb_getval('$chr_store_multi_hash_user:resultnote/5-12345', K),
        delete_ht(K, k(F,G,H,I,J), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resultnote/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resultnote/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_resultanote/5'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        arg(9, A, I),
        nb_getval('$chr_store_multi_hash_user:resultanote/5-12345', J),
        insert_ht(J, k(E,F,G,H,I), A),
        true,
        nb_getval('$chr_store_global_ground_user:resultanote/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resultanote/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resultanote/5'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        arg(9, A, J),
        nb_getval('$chr_store_multi_hash_user:resultanote/5-12345', K),
        delete_ht(K, k(F,G,H,I,J), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resultanote/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resultanote/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_resultoctave/5'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        arg(9, A, I),
        nb_getval('$chr_store_multi_hash_user:resultoctave/5-12345', J),
        insert_ht(J, k(E,F,G,H,I), A),
        true,
        nb_getval('$chr_store_global_ground_user:resultoctave/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resultoctave/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resultoctave/5'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        arg(9, A, J),
        nb_getval('$chr_store_multi_hash_user:resultoctave/5-12345', K),
        delete_ht(K, k(F,G,H,I,J), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resultoctave/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resultoctave/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_resultbeat/5'(A) :-
        true,
        arg(5, A, K),
        arg(6, A, L),
        arg(7, A, M),
        arg(8, A, N),
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-1234', O),
        insert_ht(O, k(K,L,M,N), A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        arg(9, A, I),
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-12345', J),
        insert_ht(J, k(E,F,G,H,I), A),
        true,
        nb_getval('$chr_store_global_ground_user:resultbeat/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resultbeat/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resultbeat/5'(A) :-
        true,
        arg(5, A, L),
        arg(6, A, M),
        arg(7, A, N),
        arg(8, A, O),
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-1234', P),
        delete_ht(P, k(L,M,N,O), A),
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        arg(9, A, J),
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-12345', K),
        delete_ht(K, k(F,G,H,I,J), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resultbeat/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resultbeat/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_check_resultbeat/5'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        arg(8, A, F),
        nb_getval('$chr_store_multi_hash_user:check_resultbeat/5-12345', G),
        insert_ht(G, k(B,C,D,E,F), A),
        true.
'$delete_from_store_check_resultbeat/5'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        arg(8, A, F),
        nb_getval('$chr_store_multi_hash_user:check_resultbeat/5-12345', G),
        delete_ht(G, k(B,C,D,E,F), A),
        true.
'$insert_in_store_resultmchord/2'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        nb_getval('$chr_store_multi_hash_user:resultmchord/2-12', G),
        insert_ht(G, k(E,F), A),
        true,
        nb_getval('$chr_store_global_ground_user:resultmchord/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resultmchord/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resultmchord/2'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        nb_getval('$chr_store_multi_hash_user:resultmchord/2-12', H),
        delete_ht(H, k(F,G), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resultmchord/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resultmchord/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_resulttied/4'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:resulttied/4-1234', I),
        insert_ht(I, k(E,F,G,H), A),
        true,
        nb_getval('$chr_store_global_ground_user:resulttied/4', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:resulttied/4', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_resulttied/4'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        nb_getval('$chr_store_multi_hash_user:resulttied/4-1234', J),
        delete_ht(J, k(F,G,H,I), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:resulttied/4', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:resulttied/4', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_check/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:check/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:check/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_check/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:check/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:check/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_check2/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:check2/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:check2/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_check2/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:check2/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:check2/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_initial/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:initial/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:initial/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_initial/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:initial/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:initial/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_measures/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:measures/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:measures/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:measures/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_measures/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:measures/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:measures/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:measures/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_meter/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:meter/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:meter/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:meter/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_meter/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:meter/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:meter/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:meter/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_repeats/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:repeats/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:repeats/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_repeats/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:repeats/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:repeats/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_key/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:key/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_key/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:key/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_shortest_duration/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:shortest_duration/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:shortest_duration/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:shortest_duration/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_shortest_duration/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:shortest_duration/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:shortest_duration/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:shortest_duration/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_tempo/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:tempo/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:tempo/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_tempo/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:tempo/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:tempo/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_voice/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:voice/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:voice/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:voice/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_voice/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:voice/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:voice/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:voice/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_range/5'(A) :-
        true,
        arg(4, A, H),
        nb_getval('$chr_store_multi_hash_user:range/5-1', I),
        insert_ht(I, H, A),
        true,
        arg(4, A, E),
        arg(8, A, F),
        nb_getval('$chr_store_multi_hash_user:range/5-15', G),
        insert_ht(G, k(E,F), A),
        true,
        arg(4, A, B),
        arg(6, A, C),
        nb_getval('$chr_store_multi_hash_user:range/5-13', D),
        insert_ht(D, k(B,C), A),
        true.
'$delete_from_store_range/5'(A) :-
        true,
        arg(4, A, H),
        nb_getval('$chr_store_multi_hash_user:range/5-1', I),
        delete_ht(I, H, A),
        true,
        arg(4, A, E),
        arg(8, A, F),
        nb_getval('$chr_store_multi_hash_user:range/5-15', G),
        delete_ht(G, k(E,F), A),
        true,
        arg(4, A, B),
        arg(6, A, C),
        nb_getval('$chr_store_multi_hash_user:range/5-13', D),
        delete_ht(D, k(B,C), A),
        true.
'$insert_in_store_max_jump/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:max_jump/2-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_max_jump/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:max_jump/2-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_instrument/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:instrument/2-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_instrument/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:instrument/2-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_chord_style/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:chord_style/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:chord_style/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_chord_style/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:chord_style/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:chord_style/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_max_repeat/2'(A) :-
        true,
        arg(5, A, G),
        arg(6, A, H),
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-12', I),
        insert_ht(I, k(G,H), A),
        true,
        nb_getval('$chr_store_global_ground_user:max_repeat/2', D),
        E=[A|D],
        b_setval('$chr_store_global_ground_user:max_repeat/2', E),
        (   D=[F|_] ->
            setarg(4, F, E)
        ;   true
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_max_repeat/2'(A) :-
        true,
        arg(5, A, H),
        arg(6, A, I),
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-12', J),
        delete_ht(J, k(H,I), A),
        true,
        arg(4, A, D),
        (   var(D) ->
            nb_getval('$chr_store_global_ground_user:max_repeat/2', E),
            E=[_|F],
            b_setval('$chr_store_global_ground_user:max_repeat/2', F),
            (   F=[G|_] ->
                setarg(4, G, _)
            ;   true
            )
        ;   D=[_,_|F],
            setarg(2, D, F),
            (   F=[G|_] ->
                setarg(4, G, D)
            ;   true
            )
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_measure/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:measure/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:measure/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:measure/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_measure/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:measure/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:measure/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:measure/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_mchord/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:mchord/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:mchord/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:mchord/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_mchord/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:mchord/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:mchord/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:mchord/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_beat/5'(A) :-
        true,
        arg(5, A, P),
        arg(6, A, Q),
        arg(7, A, R),
        arg(8, A, S),
        nb_getval('$chr_store_multi_hash_user:beat/5-1234', T),
        insert_ht(T, k(P,Q,R,S), A),
        true,
        arg(6, A, N),
        nb_getval('$chr_store_multi_hash_user:beat/5-2', O),
        insert_ht(O, N, A),
        true,
        arg(6, A, J),
        arg(7, A, K),
        arg(8, A, L),
        nb_getval('$chr_store_multi_hash_user:beat/5-234', M),
        insert_ht(M, k(J,K,L), A),
        true,
        arg(5, A, H),
        nb_getval('$chr_store_multi_hash_user:beat/5-1', I),
        insert_ht(I, H, A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        nb_getval('$chr_store_multi_hash_user:beat/5-12', G),
        insert_ht(G, k(E,F), A),
        true,
        nb_getval('$chr_store_global_ground_user:beat/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:beat/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_beat/5'(A) :-
        true,
        arg(5, A, Q),
        arg(6, A, R),
        arg(7, A, S),
        arg(8, A, T),
        nb_getval('$chr_store_multi_hash_user:beat/5-1234', U),
        delete_ht(U, k(Q,R,S,T), A),
        true,
        arg(6, A, O),
        nb_getval('$chr_store_multi_hash_user:beat/5-2', P),
        delete_ht(P, O, A),
        true,
        arg(6, A, K),
        arg(7, A, L),
        arg(8, A, M),
        nb_getval('$chr_store_multi_hash_user:beat/5-234', N),
        delete_ht(N, k(K,L,M), A),
        true,
        arg(5, A, I),
        nb_getval('$chr_store_multi_hash_user:beat/5-1', J),
        delete_ht(J, I, A),
        true,
        arg(5, A, F),
        arg(6, A, G),
        nb_getval('$chr_store_multi_hash_user:beat/5-12', H),
        delete_ht(H, k(F,G), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:beat/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:beat/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_note/5'(A) :-
        true,
        arg(6, A, V),
        nb_getval('$chr_store_multi_hash_user:note/5-2', W),
        insert_ht(W, V, A),
        true,
        arg(5, A, R),
        arg(6, A, S),
        arg(9, A, T),
        nb_getval('$chr_store_multi_hash_user:note/5-125', U),
        insert_ht(U, k(R,S,T), A),
        true,
        arg(5, A, L),
        arg(6, A, M),
        arg(7, A, N),
        arg(8, A, O),
        arg(9, A, P),
        nb_getval('$chr_store_multi_hash_user:note/5-12345', Q),
        insert_ht(Q, k(L,M,N,O,P), A),
        true,
        arg(5, A, J),
        nb_getval('$chr_store_multi_hash_user:note/5-1', K),
        insert_ht(K, J, A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:note/5-1234', I),
        insert_ht(I, k(E,F,G,H), A),
        true,
        nb_getval('$chr_store_global_ground_user:note/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:note/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_note/5'(A) :-
        true,
        arg(6, A, W),
        nb_getval('$chr_store_multi_hash_user:note/5-2', X),
        delete_ht(X, W, A),
        true,
        arg(5, A, S),
        arg(6, A, T),
        arg(9, A, U),
        nb_getval('$chr_store_multi_hash_user:note/5-125', V),
        delete_ht(V, k(S,T,U), A),
        true,
        arg(5, A, M),
        arg(6, A, N),
        arg(7, A, O),
        arg(8, A, P),
        arg(9, A, Q),
        nb_getval('$chr_store_multi_hash_user:note/5-12345', R),
        delete_ht(R, k(M,N,O,P,Q), A),
        true,
        arg(5, A, K),
        nb_getval('$chr_store_multi_hash_user:note/5-1', L),
        delete_ht(L, K, A),
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        nb_getval('$chr_store_multi_hash_user:note/5-1234', J),
        delete_ht(J, k(F,G,H,I), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:note/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:note/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_octave/5'(A) :-
        true,
        arg(5, A, G),
        arg(6, A, H),
        arg(7, A, I),
        arg(8, A, J),
        nb_getval('$chr_store_multi_hash_user:octave/5-1234', K),
        insert_ht(K, k(G,H,I,J), A),
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:octave/5-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:octave/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:octave/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_octave/5'(A) :-
        true,
        arg(5, A, H),
        arg(6, A, I),
        arg(7, A, J),
        arg(8, A, K),
        nb_getval('$chr_store_multi_hash_user:octave/5-1234', L),
        delete_ht(L, k(H,I,J,K), A),
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:octave/5-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:octave/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:octave/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_tied/4'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:tied/4-1234', I),
        insert_ht(I, k(E,F,G,H), A),
        true,
        nb_getval('$chr_store_global_ground_user:tied/4', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:tied/4', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_tied/4'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        nb_getval('$chr_store_multi_hash_user:tied/4-1234', J),
        delete_ht(J, k(F,G,H,I), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:tied/4', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:tied/4', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_make_measures/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:make_measures/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_make_measures/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:make_measures/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_next_measure/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:next_measure/2-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_next_measure/2'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:next_measure/2-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_make_beats/4'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:make_beats/4', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:make_beats/4', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_make_beats/4'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:make_beats/4', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:make_beats/4', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_next_beat/7'(A) :-
        true,
        arg(8, A, W),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-5', X),
        insert_ht(X, W, A),
        true,
        arg(4, A, Q),
        arg(5, A, R),
        arg(6, A, S),
        arg(7, A, T),
        arg(8, A, U),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-12345', V),
        insert_ht(V, k(Q,R,S,T,U), A),
        true,
        arg(4, A, I),
        arg(5, A, J),
        arg(6, A, K),
        arg(7, A, L),
        arg(8, A, M),
        arg(9, A, N),
        arg(10, A, O),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234567', P),
        insert_ht(P, k(I,J,K,L,M,N,O), A),
        true,
        arg(9, A, G),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-6', H),
        insert_ht(H, G, A),
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234', F),
        insert_ht(F, k(B,C,D,E), A),
        true.
'$delete_from_store_next_beat/7'(A) :-
        true,
        arg(8, A, W),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-5', X),
        delete_ht(X, W, A),
        true,
        arg(4, A, Q),
        arg(5, A, R),
        arg(6, A, S),
        arg(7, A, T),
        arg(8, A, U),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-12345', V),
        delete_ht(V, k(Q,R,S,T,U), A),
        true,
        arg(4, A, I),
        arg(5, A, J),
        arg(6, A, K),
        arg(7, A, L),
        arg(8, A, M),
        arg(9, A, N),
        arg(10, A, O),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234567', P),
        delete_ht(P, k(I,J,K,L,M,N,O), A),
        true,
        arg(9, A, G),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-6', H),
        delete_ht(H, G, A),
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234', F),
        delete_ht(F, k(B,C,D,E), A),
        true.
'$insert_in_store_anote/5'(A) :-
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:anote/5-1234', I),
        insert_ht(I, k(E,F,G,H), A),
        true,
        nb_getval('$chr_store_global_ground_user:anote/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:anote/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_anote/5'(A) :-
        true,
        arg(5, A, F),
        arg(6, A, G),
        arg(7, A, H),
        arg(8, A, I),
        nb_getval('$chr_store_multi_hash_user:anote/5-1234', J),
        delete_ht(J, k(F,G,H,I), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:anote/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:anote/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_phase/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:phase/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:phase/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:phase/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_phase/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:phase/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:phase/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:phase/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_chord/5'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:chord/5', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:chord/5', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_chord/5'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:chord/5', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:chord/5', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_octave_d/5'(A) :-
        true,
        arg(4, A, D),
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1234', H),
        insert_ht(H, k(D,E,F,G), A),
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_octave_d/5'(A) :-
        true,
        arg(4, A, D),
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1234', H),
        delete_ht(H, k(D,E,F,G), A),
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_octave_rangecheck/5'(A) :-
        true,
        arg(4, A, G),
        arg(5, A, H),
        arg(6, A, I),
        arg(7, A, J),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1234', K),
        insert_ht(K, k(G,H,I,J), A),
        true,
        arg(4, A, D),
        arg(8, A, E),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-15', F),
        insert_ht(F, k(D,E), A),
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_octave_rangecheck/5'(A) :-
        true,
        arg(4, A, G),
        arg(5, A, H),
        arg(6, A, I),
        arg(7, A, J),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1234', K),
        delete_ht(K, k(G,H,I,J), A),
        true,
        arg(4, A, D),
        arg(8, A, E),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-15', F),
        delete_ht(F, k(D,E), A),
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_same_note_counter/5'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:same_note_counter/5', L),
        M=[A|L],
        b_setval('$chr_store_global_ground_user:same_note_counter/5', M),
        (   L=[N|_] ->
            setarg(4, N, M)
        ;   true
        ),
        arg(5, A, J),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1', K),
        insert_ht(K, J, A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1234', I),
        insert_ht(I, k(E,F,G,H), A),
        true,
        arg(5, A, B),
        arg(9, A, C),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-15', D),
        insert_ht(D, k(B,C), A),
        true.
'$delete_from_store_same_note_counter/5'(A) :-
        true,
        arg(4, A, L),
        (   var(L) ->
            nb_getval('$chr_store_global_ground_user:same_note_counter/5', M),
            M=[_|N],
            b_setval('$chr_store_global_ground_user:same_note_counter/5', N),
            (   N=[O|_] ->
                setarg(4, O, _)
            ;   true
            )
        ;   L=[_,_|N],
            setarg(2, L, N),
            (   N=[O|_] ->
                setarg(4, O, L)
            ;   true
            )
        ),
        arg(5, A, J),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1', K),
        delete_ht(K, J, A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        arg(7, A, G),
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1234', I),
        delete_ht(I, k(E,F,G,H), A),
        true,
        arg(5, A, B),
        arg(9, A, C),
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-15', D),
        delete_ht(D, k(B,C), A),
        true.
'$insert_in_store_make_notes_measure/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:make_notes_measure/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:make_notes_measure/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:make_notes_measure/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_make_notes_measure/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:make_notes_measure/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:make_notes_measure/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:make_notes_measure/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_find_octave_d/5'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:find_octave_d/5-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_find_octave_d/5'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:find_octave_d/5-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_chord_scheme/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:chord_scheme/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_chord_scheme/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:chord_scheme/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_theme_boundary/2'(A) :-
        true,
        arg(5, A, G),
        arg(6, A, H),
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-12', I),
        insert_ht(I, k(G,H), A),
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:theme_boundary/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:theme_boundary/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_theme_boundary/2'(A) :-
        true,
        arg(5, A, H),
        arg(6, A, I),
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-12', J),
        delete_ht(J, k(H,I), A),
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:theme_boundary/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_unspecified_measure/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', D),
        E=[A|D],
        b_setval('$chr_store_global_ground_user:unspecified_measure/1', E),
        (   D=[F|_] ->
            setarg(4, F, E)
        ;   true
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:unspecified_measure/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_unspecified_measure/1'(A) :-
        true,
        arg(4, A, D),
        (   var(D) ->
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', E),
            E=[_|F],
            b_setval('$chr_store_global_ground_user:unspecified_measure/1', F),
            (   F=[G|_] ->
                setarg(4, G, _)
            ;   true
            )
        ;   D=[_,_|F],
            setarg(2, D, F),
            (   F=[G|_] ->
                setarg(4, G, D)
            ;   true
            )
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:unspecified_measure/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_unspecified_successor/2'(A) :-
        true,
        arg(6, A, G),
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-2', H),
        insert_ht(H, G, A),
        true,
        nb_getval('$chr_store_global_ground_user:unspecified_successor/2', D),
        E=[A|D],
        b_setval('$chr_store_global_ground_user:unspecified_successor/2', E),
        (   D=[F|_] ->
            setarg(4, F, E)
        ;   true
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_unspecified_successor/2'(A) :-
        true,
        arg(6, A, H),
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-2', I),
        delete_ht(I, H, A),
        true,
        arg(4, A, D),
        (   var(D) ->
            nb_getval('$chr_store_global_ground_user:unspecified_successor/2', E),
            E=[_|F],
            b_setval('$chr_store_global_ground_user:unspecified_successor/2', F),
            (   F=[G|_] ->
                setarg(4, G, _)
            ;   true
            )
        ;   D=[_,_|F],
            setarg(2, D, F),
            (   F=[G|_] ->
                setarg(4, G, D)
            ;   true
            )
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_max_unspecified/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:max_unspecified/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:max_unspecified/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:max_unspecified/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_max_unspecified/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:max_unspecified/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:max_unspecified/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:max_unspecified/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_boundary_list/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:boundary_list/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:boundary_list/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:boundary_list/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_boundary_list/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:boundary_list/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:boundary_list/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:boundary_list/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_theme_length/2'(A) :-
        true,
        arg(5, A, G),
        arg(6, A, H),
        nb_getval('$chr_store_multi_hash_user:theme_length/2-12', I),
        insert_ht(I, k(G,H), A),
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:theme_length/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:theme_length/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:theme_length/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_theme_length/2'(A) :-
        true,
        arg(5, A, H),
        arg(6, A, I),
        nb_getval('$chr_store_multi_hash_user:theme_length/2-12', J),
        delete_ht(J, k(H,I), A),
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:theme_length/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:theme_length/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:theme_length/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_next_theme_instance/3'(A) :-
        true,
        arg(5, A, H),
        arg(7, A, I),
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-13', J),
        insert_ht(J, k(H,I), A),
        true,
        arg(5, A, E),
        arg(6, A, F),
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-12', G),
        insert_ht(G, k(E,F), A),
        true,
        nb_getval('$chr_store_global_ground_user:next_theme_instance/3', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:next_theme_instance/3', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_next_theme_instance/3'(A) :-
        true,
        arg(5, A, I),
        arg(7, A, J),
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-13', K),
        delete_ht(K, k(I,J), A),
        true,
        arg(5, A, F),
        arg(6, A, G),
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-12', H),
        delete_ht(H, k(F,G), A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:next_theme_instance/3', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:next_theme_instance/3', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_theme_boundary_count/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:theme_boundary_count/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:theme_boundary_count/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:theme_boundary_count/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_theme_boundary_count/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:theme_boundary_count/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:theme_boundary_count/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:theme_boundary_count/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_first_theme_start/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:first_theme_start/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:first_theme_start/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:first_theme_start/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_first_theme_start/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:first_theme_start/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:first_theme_start/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:first_theme_start/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_first_theme/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:first_theme/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:first_theme/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_first_theme/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:first_theme/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:first_theme/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_num_first_theme_repeats/2'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:num_first_theme_repeats/2-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:num_first_theme_repeats/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:num_first_theme_repeats/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_num_first_theme_repeats/2'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:num_first_theme_repeats/2-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:num_first_theme_repeats/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:num_first_theme_repeats/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_first_theme_repetition/3'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:first_theme_repetition/3', D),
        E=[A|D],
        b_setval('$chr_store_global_ground_user:first_theme_repetition/3', E),
        (   D=[F|_] ->
            setarg(4, F, E)
        ;   true
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:first_theme_repetition/3-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_first_theme_repetition/3'(A) :-
        true,
        arg(4, A, D),
        (   var(D) ->
            nb_getval('$chr_store_global_ground_user:first_theme_repetition/3', E),
            E=[_|F],
            b_setval('$chr_store_global_ground_user:first_theme_repetition/3', F),
            (   F=[G|_] ->
                setarg(4, G, _)
            ;   true
            )
        ;   D=[_,_|F],
            setarg(2, D, F),
            (   F=[G|_] ->
                setarg(4, G, D)
            ;   true
            )
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:first_theme_repetition/3-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_increment_first_theme_rep/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:increment_first_theme_rep/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:increment_first_theme_rep/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_increment_first_theme_rep/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:increment_first_theme_rep/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:increment_first_theme_rep/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_occurrence_count/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:occurrence_count/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_occurrence_count/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:occurrence_count/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:occurrence_count/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_first_theme_occurrence/4'(A) :-
        true,
        arg(5, A, K),
        arg(6, A, L),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-12', M),
        insert_ht(M, k(K,L), A),
        true,
        arg(6, A, I),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-2', J),
        insert_ht(J, I, A),
        true,
        arg(8, A, G),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-4', H),
        insert_ht(H, G, A),
        true,
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-3', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:first_theme_occurrence/4', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:first_theme_occurrence/4', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_first_theme_occurrence/4'(A) :-
        true,
        arg(5, A, L),
        arg(6, A, M),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-12', N),
        delete_ht(N, k(L,M), A),
        true,
        arg(6, A, J),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-2', K),
        delete_ht(K, J, A),
        true,
        arg(8, A, H),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-4', I),
        delete_ht(I, H, A),
        true,
        arg(7, A, F),
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-3', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:first_theme_occurrence/4', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:first_theme_occurrence/4', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_increment_occurrences/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:increment_occurrences/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:increment_occurrences/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_increment_occurrences/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:increment_occurrences/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:increment_occurrences/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_first_theme_end/2'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:first_theme_end/2', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:first_theme_end/2', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_first_theme_end/2'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:first_theme_end/2', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:first_theme_end/2', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_number_duplicates/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:number_duplicates/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:number_duplicates/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:number_duplicates/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_number_duplicates/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:number_duplicates/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:number_duplicates/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:number_duplicates/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_duplicated_measure/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:duplicated_measure/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_duplicated_measure/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:duplicated_measure/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_increment_duplicates/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:increment_duplicates/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:increment_duplicates/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_increment_duplicates/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:increment_duplicates/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:increment_duplicates/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_number_duplicated_measures/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:number_duplicated_measures/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:number_duplicated_measures/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:number_duplicated_measures/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_number_duplicated_measures/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:number_duplicated_measures/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:number_duplicated_measures/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:number_duplicated_measures/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_all_duplicates/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:all_duplicates/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:all_duplicates/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_all_duplicates/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:all_duplicates/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:all_duplicates/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_number_removed_unspecified_successors/1'(A) :-
        true,
        arg(5, A, E),
        nb_getval('$chr_store_multi_hash_user:number_removed_unspecified_successors/1-1', F),
        insert_ht(F, E, A),
        true,
        nb_getval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_number_removed_unspecified_successors/1'(A) :-
        true,
        arg(5, A, F),
        nb_getval('$chr_store_multi_hash_user:number_removed_unspecified_successors/1-1', G),
        delete_ht(G, F, A),
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_removed_unspecified_successor/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:removed_unspecified_successor/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:removed_unspecified_successor/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_removed_unspecified_successor/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:removed_unspecified_successor/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:removed_unspecified_successor/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_all_occurrences/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:all_occurrences/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:all_occurrences/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_all_occurrences/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:all_occurrences/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:all_occurrences/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_restored_unspec/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:restored_unspec/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:restored_unspec/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_restored_unspec/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:restored_unspec/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:restored_unspec/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_abstract_beat/4'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:abstract_beat/4', D),
        E=[A|D],
        b_setval('$chr_store_global_ground_user:abstract_beat/4', E),
        (   D=[F|_] ->
            setarg(4, F, E)
        ;   true
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:abstract_beat/4-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_abstract_beat/4'(A) :-
        true,
        arg(4, A, D),
        (   var(D) ->
            nb_getval('$chr_store_global_ground_user:abstract_beat/4', E),
            E=[_|F],
            b_setval('$chr_store_global_ground_user:abstract_beat/4', F),
            (   F=[G|_] ->
                setarg(4, G, _)
            ;   true
            )
        ;   D=[_,_|F],
            setarg(2, D, F),
            (   F=[G|_] ->
                setarg(4, G, D)
            ;   true
            )
        ),
        arg(5, A, B),
        nb_getval('$chr_store_multi_hash_user:abstract_beat/4-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_write_notes/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:write_notes/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:write_notes/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_write_notes/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:write_notes/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:write_notes/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show/3'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show/3', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show/3', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show/3'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show/3', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show/3', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show_notes/4'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:show_notes/4-1234', F),
        insert_ht(F, k(B,C,D,E), A),
        true.
'$delete_from_store_show_notes/4'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:show_notes/4-1234', F),
        delete_ht(F, k(B,C,D,E), A),
        true.
'$insert_in_store_voice_header/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:voice_header/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:voice_header/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_voice_header/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:voice_header/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:voice_header/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_voice_footer/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:voice_footer/1-1', C),
        insert_ht(C, B, A),
        true.
'$delete_from_store_voice_footer/1'(A) :-
        true,
        arg(4, A, B),
        nb_getval('$chr_store_multi_hash_user:voice_footer/1-1', C),
        delete_ht(C, B, A),
        true.
'$insert_in_store_maybe_close_bracket/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:maybe_close_bracket/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:maybe_close_bracket/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_maybe_close_bracket/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:maybe_close_bracket/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:maybe_close_bracket/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show_note/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show_note/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show_note/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show_note/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show_note/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show_note/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show_mods/1'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show_mods/1', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show_mods/1', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show_mods/1'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show_mods/1', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show_mods/1', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_maybe_show_octave/4'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:maybe_show_octave/4-1234', F),
        insert_ht(F, k(B,C,D,E), A),
        true.
'$delete_from_store_maybe_show_octave/4'(A) :-
        true,
        arg(4, A, B),
        arg(5, A, C),
        arg(6, A, D),
        arg(7, A, E),
        nb_getval('$chr_store_multi_hash_user:maybe_show_octave/4-1234', F),
        delete_ht(F, k(B,C,D,E), A),
        true.
'$insert_in_store_tempo_declaration/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:tempo_declaration/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:tempo_declaration/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_tempo_declaration/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:tempo_declaration/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:tempo_declaration/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_play/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:play/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:play/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_play/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:play/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:play/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_play_footer/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:play_footer/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:play_footer/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_play_footer/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:play_footer/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:play_footer/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show_footer/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show_footer/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show_footer/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show_footer/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show_footer/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show_footer/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$insert_in_store_show_voice_footers/0'(A) :-
        true,
        nb_getval('$chr_store_global_ground_user:show_voice_footers/0', B),
        C=[A|B],
        b_setval('$chr_store_global_ground_user:show_voice_footers/0', C),
        (   B=[D|_] ->
            setarg(4, D, C)
        ;   true
        ).
'$delete_from_store_show_voice_footers/0'(A) :-
        true,
        arg(4, A, B),
        (   var(B) ->
            nb_getval('$chr_store_global_ground_user:show_voice_footers/0', C),
            C=[_|D],
            b_setval('$chr_store_global_ground_user:show_voice_footers/0', D),
            (   D=[E|_] ->
                setarg(4, E, _)
            ;   true
            )
        ;   B=[_,_|D],
            setarg(2, B, D),
            (   D=[E|_] ->
                setarg(4, E, B)
            ;   true
            )
        ).
'$enumerate_constraints'(A) :-
        (   nb_getval('$chr_store_global_ground_user:result_status/1', C),
            'chr sbag_member'(B, C),
            B=suspension(_,_,_,_,D),
            A=..[result_status,D]
        ;   nb_getval('$chr_store_global_ground_user:result/1', F),
            'chr sbag_member'(E, F),
            E=suspension(_,_,_,_,G),
            A=..[result,G]
        ;   nb_getval('$chr_store_global_ground_user:cleanup/0', I),
            'chr sbag_member'(H, I),
            H=suspension(_,_,_,_),
            A=..[cleanup]
        ;   nb_getval('$chr_store_global_ground_user:e/0', K),
            'chr sbag_member'(J, K),
            J=suspension(_,_,_,_),
            A=..[e]
        ;   nb_getval('$chr_store_global_ground_user:t/0', M),
            'chr sbag_member'(L, M),
            L=suspension(_,_,_,_),
            A=..[t]
        ;   nb_getval('$chr_store_global_ground_user:t/1', O),
            'chr sbag_member'(N, O),
            N=suspension(_,_,_,_,P),
            A=..[t,P]
        ;   nb_getval('$chr_store_global_ground_user:u/0', R),
            'chr sbag_member'(Q, R),
            Q=suspension(_,_,_,_),
            A=..[u]
        ;   nb_getval('$chr_store_global_ground_user:s/0', T),
            'chr sbag_member'(S, T),
            S=suspension(_,_,_,_),
            A=..[s]
        ;   nb_getval('$chr_store_global_ground_user:v/0', V),
            'chr sbag_member'(U, V),
            U=suspension(_,_,_,_),
            A=..[v]
        ;   nb_getval('$chr_store_global_ground_user:s/1', X),
            'chr sbag_member'(W, X),
            W=suspension(_,_,_,_,Y),
            A=..[s,Y]
        ;   nb_getval('$chr_store_global_ground_user:w/1', A1),
            'chr sbag_member'(Z, A1),
            Z=suspension(_,_,_,_,B1),
            A=..[w,B1]
        ;   nb_getval('$chr_store_global_ground_user:w2/1', D1),
            'chr sbag_member'(C1, D1),
            C1=suspension(_,_,_,_,E1),
            A=..[w2,E1]
        ;   nb_getval('$chr_store_multi_hash_user:failrules/1-1', F1),
            value_ht(F1, G1),
            G1=suspension(_,_,_,_,H1),
            A=..[failrules,H1]
        ;   nb_getval('$chr_store_multi_hash_user:resultnote/5-12345', I1),
            value_ht(I1, J1),
            J1=suspension(_,_,_,_,K1,L1,M1,N1,O1),
            A=..[resultnote,K1,L1,M1,N1,O1]
        ;   nb_getval('$chr_store_multi_hash_user:resultanote/5-12345', P1),
            value_ht(P1, Q1),
            Q1=suspension(_,_,_,_,R1,S1,T1,U1,V1),
            A=..[resultanote,R1,S1,T1,U1,V1]
        ;   nb_getval('$chr_store_multi_hash_user:resultoctave/5-12345', W1),
            value_ht(W1, X1),
            X1=suspension(_,_,_,_,Y1,Z1,A2,B2,C2),
            A=..[resultoctave,Y1,Z1,A2,B2,C2]
        ;   nb_getval('$chr_store_multi_hash_user:resultbeat/5-1234', D2),
            value_ht(D2, E2),
            E2=suspension(_,_,_,_,F2,G2,H2,I2,J2),
            A=..[resultbeat,F2,G2,H2,I2,J2]
        ;   nb_getval('$chr_store_multi_hash_user:check_resultbeat/5-12345', K2),
            value_ht(K2, L2),
            L2=suspension(_,_,_,M2,N2,O2,P2,Q2),
            A=..[check_resultbeat,M2,N2,O2,P2,Q2]
        ;   nb_getval('$chr_store_multi_hash_user:resultmchord/2-12', R2),
            value_ht(R2, S2),
            S2=suspension(_,_,_,_,T2,U2),
            A=..[resultmchord,T2,U2]
        ;   nb_getval('$chr_store_multi_hash_user:resulttied/4-1234', V2),
            value_ht(V2, W2),
            W2=suspension(_,_,_,_,X2,Y2,Z2,A3),
            A=..[resulttied,X2,Y2,Z2,A3]
        ;   nb_getval('$chr_store_global_ground_user:check/1', C3),
            'chr sbag_member'(B3, C3),
            B3=suspension(_,_,_,_,D3),
            A=..[check,D3]
        ;   nb_getval('$chr_store_global_ground_user:check2/1', F3),
            'chr sbag_member'(E3, F3),
            E3=suspension(_,_,_,_,G3),
            A=..[check2,G3]
        ;   nb_getval('$chr_store_global_ground_user:initial/0', I3),
            'chr sbag_member'(H3, I3),
            H3=suspension(_,_,_,_),
            A=..[initial]
        ;   nb_getval('$chr_store_multi_hash_user:measures/1-1', J3),
            value_ht(J3, K3),
            K3=suspension(_,_,_,_,L3),
            A=..[measures,L3]
        ;   nb_getval('$chr_store_multi_hash_user:meter/2-1', M3),
            value_ht(M3, N3),
            N3=suspension(_,_,_,_,O3,P3),
            A=..[meter,O3,P3]
        ;   nb_getval('$chr_store_global_ground_user:repeats/1', R3),
            'chr sbag_member'(Q3, R3),
            Q3=suspension(_,_,_,_,S3),
            A=..[repeats,S3]
        ;   nb_getval('$chr_store_multi_hash_user:key/1-1', T3),
            value_ht(T3, U3),
            U3=suspension(_,_,_,V3),
            A=..[key,V3]
        ;   nb_getval('$chr_store_multi_hash_user:shortest_duration/2-1', W3),
            value_ht(W3, X3),
            X3=suspension(_,_,_,_,Y3,Z3),
            A=..[shortest_duration,Y3,Z3]
        ;   nb_getval('$chr_store_global_ground_user:tempo/1', B4),
            'chr sbag_member'(A4, B4),
            A4=suspension(_,_,_,_,C4),
            A=..[tempo,C4]
        ;   nb_getval('$chr_store_multi_hash_user:voice/1-1', D4),
            value_ht(D4, E4),
            E4=suspension(_,_,_,_,F4),
            A=..[voice,F4]
        ;   nb_getval('$chr_store_multi_hash_user:range/5-1', G4),
            value_ht(G4, H4),
            H4=suspension(_,_,_,I4,J4,K4,L4,M4),
            A=..[range,I4,J4,K4,L4,M4]
        ;   nb_getval('$chr_store_multi_hash_user:max_jump/2-1', N4),
            value_ht(N4, O4),
            O4=suspension(_,_,_,P4,Q4),
            A=..[max_jump,P4,Q4]
        ;   nb_getval('$chr_store_multi_hash_user:instrument/2-1', R4),
            value_ht(R4, S4),
            S4=suspension(_,_,_,T4,U4),
            A=..[instrument,T4,U4]
        ;   nb_getval('$chr_store_global_ground_user:chord_style/1', W4),
            'chr sbag_member'(V4, W4),
            V4=suspension(_,_,_,_,X4),
            A=..[chord_style,X4]
        ;   nb_getval('$chr_store_multi_hash_user:max_repeat/2-12', Y4),
            value_ht(Y4, Z4),
            Z4=suspension(_,_,_,_,A5,B5),
            A=..[max_repeat,A5,B5]
        ;   nb_getval('$chr_store_multi_hash_user:measure/1-1', C5),
            value_ht(C5, D5),
            D5=suspension(_,_,_,_,E5),
            A=..[measure,E5]
        ;   nb_getval('$chr_store_multi_hash_user:mchord/2-1', F5),
            value_ht(F5, G5),
            G5=suspension(_,_,_,_,H5,I5),
            A=..[mchord,H5,I5]
        ;   nb_getval('$chr_store_multi_hash_user:beat/5-1234', J5),
            value_ht(J5, K5),
            K5=suspension(_,_,_,_,L5,M5,N5,O5,P5),
            A=..[beat,L5,M5,N5,O5,P5]
        ;   nb_getval('$chr_store_multi_hash_user:note/5-2', Q5),
            value_ht(Q5, R5),
            R5=suspension(_,_,_,_,S5,T5,U5,V5,W5),
            A=..[note,S5,T5,U5,V5,W5]
        ;   nb_getval('$chr_store_multi_hash_user:octave/5-1234', X5),
            value_ht(X5, Y5),
            Y5=suspension(_,_,_,_,Z5,A6,B6,C6,D6),
            A=..[octave,Z5,A6,B6,C6,D6]
        ;   nb_getval('$chr_store_multi_hash_user:tied/4-1234', E6),
            value_ht(E6, F6),
            F6=suspension(_,_,_,_,G6,H6,I6,J6),
            A=..[tied,G6,H6,I6,J6]
        ;   nb_getval('$chr_store_multi_hash_user:make_measures/1-1', K6),
            value_ht(K6, L6),
            L6=suspension(_,_,_,M6),
            A=..[make_measures,M6]
        ;   nb_getval('$chr_store_multi_hash_user:next_measure/2-1', N6),
            value_ht(N6, O6),
            O6=suspension(_,_,_,P6,Q6),
            A=..[next_measure,P6,Q6]
        ;   nb_getval('$chr_store_global_ground_user:make_beats/4', S6),
            'chr sbag_member'(R6, S6),
            R6=suspension(_,_,_,_,T6,U6,V6,W6),
            A=..[make_beats,T6,U6,V6,W6]
        ;   nb_getval('$chr_store_multi_hash_user:next_beat/7-5', X6),
            value_ht(X6, Y6),
            Y6=suspension(_,_,_,Z6,A7,B7,C7,D7,E7,F7),
            A=..[next_beat,Z6,A7,B7,C7,D7,E7,F7]
        ;   nb_getval('$chr_store_multi_hash_user:anote/5-1234', G7),
            value_ht(G7, H7),
            H7=suspension(_,_,_,_,I7,J7,K7,L7,M7),
            A=..[anote,I7,J7,K7,L7,M7]
        ;   nb_getval('$chr_store_multi_hash_user:phase/1-1', N7),
            value_ht(N7, O7),
            O7=suspension(_,_,_,_,P7),
            A=..[phase,P7]
        ;   nb_getval('$chr_store_global_ground_user:chord/5', R7),
            'chr sbag_member'(Q7, R7),
            Q7=suspension(_,_,_,_,S7,T7,U7,V7,W7),
            A=..[chord,S7,T7,U7,V7,W7]
        ;   nb_getval('$chr_store_multi_hash_user:octave_d/5-1234', X7),
            value_ht(X7, Y7),
            Y7=suspension(_,_,_,Z7,A8,B8,C8,D8),
            A=..[octave_d,Z7,A8,B8,C8,D8]
        ;   nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1234', E8),
            value_ht(E8, F8),
            F8=suspension(_,_,_,G8,H8,I8,J8,K8),
            A=..[octave_rangecheck,G8,H8,I8,J8,K8]
        ;   nb_getval('$chr_store_global_ground_user:same_note_counter/5', M8),
            'chr sbag_member'(L8, M8),
            L8=suspension(_,_,_,_,N8,O8,P8,Q8,R8),
            A=..[same_note_counter,N8,O8,P8,Q8,R8]
        ;   nb_getval('$chr_store_multi_hash_user:make_notes_measure/1-1', S8),
            value_ht(S8, T8),
            T8=suspension(_,_,_,_,U8),
            A=..[make_notes_measure,U8]
        ;   nb_getval('$chr_store_multi_hash_user:find_octave_d/5-1', V8),
            value_ht(V8, W8),
            W8=suspension(_,_,_,X8,Y8,Z8,A9,B9),
            A=..[find_octave_d,X8,Y8,Z8,A9,B9]
        ;   nb_getval('$chr_store_multi_hash_user:chord_scheme/1-1', C9),
            value_ht(C9, D9),
            D9=suspension(_,_,_,E9),
            A=..[chord_scheme,E9]
        ;   nb_getval('$chr_store_multi_hash_user:theme_boundary/2-12', F9),
            value_ht(F9, G9),
            G9=suspension(_,_,_,_,H9,I9),
            A=..[theme_boundary,H9,I9]
        ;   nb_getval('$chr_store_global_ground_user:unspecified_measure/1', K9),
            'chr sbag_member'(J9, K9),
            J9=suspension(_,_,_,_,L9),
            A=..[unspecified_measure,L9]
        ;   nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-2', M9),
            value_ht(M9, N9),
            N9=suspension(_,_,_,_,O9,P9),
            A=..[unspecified_successor,O9,P9]
        ;   nb_getval('$chr_store_multi_hash_user:max_unspecified/1-1', Q9),
            value_ht(Q9, R9),
            R9=suspension(_,_,_,_,S9),
            A=..[max_unspecified,S9]
        ;   nb_getval('$chr_store_multi_hash_user:boundary_list/1-1', T9),
            value_ht(T9, U9),
            U9=suspension(_,_,_,_,V9),
            A=..[boundary_list,V9]
        ;   nb_getval('$chr_store_multi_hash_user:theme_length/2-12', W9),
            value_ht(W9, X9),
            X9=suspension(_,_,_,_,Y9,Z9),
            A=..[theme_length,Y9,Z9]
        ;   nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-13', A10),
            value_ht(A10, B10),
            B10=suspension(_,_,_,_,C10,D10,E10),
            A=..[next_theme_instance,C10,D10,E10]
        ;   nb_getval('$chr_store_multi_hash_user:theme_boundary_count/2-1', F10),
            value_ht(F10, G10),
            G10=suspension(_,_,_,_,H10,I10),
            A=..[theme_boundary_count,H10,I10]
        ;   nb_getval('$chr_store_multi_hash_user:first_theme_start/2-1', J10),
            value_ht(J10, K10),
            K10=suspension(_,_,_,_,L10,M10),
            A=..[first_theme_start,L10,M10]
        ;   nb_getval('$chr_store_global_ground_user:first_theme/1', O10),
            'chr sbag_member'(N10, O10),
            N10=suspension(_,_,_,_,P10),
            A=..[first_theme,P10]
        ;   nb_getval('$chr_store_multi_hash_user:num_first_theme_repeats/2-1', Q10),
            value_ht(Q10, R10),
            R10=suspension(_,_,_,_,S10,T10),
            A=..[num_first_theme_repeats,S10,T10]
        ;   nb_getval('$chr_store_global_ground_user:first_theme_repetition/3', V10),
            'chr sbag_member'(U10, V10),
            U10=suspension(_,_,_,_,W10,X10,Y10),
            A=..[first_theme_repetition,W10,X10,Y10]
        ;   nb_getval('$chr_store_global_ground_user:increment_first_theme_rep/0', A11),
            'chr sbag_member'(Z10, A11),
            Z10=suspension(_,_,_,_),
            A=..[increment_first_theme_rep]
        ;   nb_getval('$chr_store_global_ground_user:occurrence_count/1', C11),
            'chr sbag_member'(B11, C11),
            B11=suspension(_,_,_,_,D11),
            A=..[occurrence_count,D11]
        ;   nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-12', E11),
            value_ht(E11, F11),
            F11=suspension(_,_,_,_,G11,H11,I11,J11),
            A=..[first_theme_occurrence,G11,H11,I11,J11]
        ;   nb_getval('$chr_store_global_ground_user:increment_occurrences/0', L11),
            'chr sbag_member'(K11, L11),
            K11=suspension(_,_,_,_),
            A=..[increment_occurrences]
        ;   nb_getval('$chr_store_global_ground_user:first_theme_end/2', N11),
            'chr sbag_member'(M11, N11),
            M11=suspension(_,_,_,_,O11,P11),
            A=..[first_theme_end,O11,P11]
        ;   nb_getval('$chr_store_multi_hash_user:number_duplicates/1-1', Q11),
            value_ht(Q11, R11),
            R11=suspension(_,_,_,_,S11),
            A=..[number_duplicates,S11]
        ;   nb_getval('$chr_store_multi_hash_user:duplicated_measure/1-1', T11),
            value_ht(T11, U11),
            U11=suspension(_,_,_,V11),
            A=..[duplicated_measure,V11]
        ;   nb_getval('$chr_store_global_ground_user:increment_duplicates/0', X11),
            'chr sbag_member'(W11, X11),
            W11=suspension(_,_,_,_),
            A=..[increment_duplicates]
        ;   nb_getval('$chr_store_multi_hash_user:number_duplicated_measures/1-1', Y11),
            value_ht(Y11, Z11),
            Z11=suspension(_,_,_,_,A12),
            A=..[number_duplicated_measures,A12]
        ;   nb_getval('$chr_store_global_ground_user:all_duplicates/0', C12),
            'chr sbag_member'(B12, C12),
            B12=suspension(_,_,_,_),
            A=..[all_duplicates]
        ;   nb_getval('$chr_store_multi_hash_user:number_removed_unspecified_successors/1-1', D12),
            value_ht(D12, E12),
            E12=suspension(_,_,_,_,F12),
            A=..[number_removed_unspecified_successors,F12]
        ;   nb_getval('$chr_store_global_ground_user:removed_unspecified_successor/0', H12),
            'chr sbag_member'(G12, H12),
            G12=suspension(_,_,_,_),
            A=..[removed_unspecified_successor]
        ;   nb_getval('$chr_store_global_ground_user:all_occurrences/0', J12),
            'chr sbag_member'(I12, J12),
            I12=suspension(_,_,_,_),
            A=..[all_occurrences]
        ;   nb_getval('$chr_store_global_ground_user:restored_unspec/0', L12),
            'chr sbag_member'(K12, L12),
            K12=suspension(_,_,_,_),
            A=..[restored_unspec]
        ;   nb_getval('$chr_store_global_ground_user:abstract_beat/4', N12),
            'chr sbag_member'(M12, N12),
            M12=suspension(_,_,_,_,O12,P12,Q12,R12),
            A=..[abstract_beat,O12,P12,Q12,R12]
        ;   nb_getval('$chr_store_global_ground_user:write_notes/0', T12),
            'chr sbag_member'(S12, T12),
            S12=suspension(_,_,_,_),
            A=..[write_notes]
        ;   nb_getval('$chr_store_global_ground_user:show/3', V12),
            'chr sbag_member'(U12, V12),
            U12=suspension(_,_,_,_,W12,X12,Y12),
            A=..[show,W12,X12,Y12]
        ;   nb_getval('$chr_store_multi_hash_user:show_notes/4-1234', Z12),
            value_ht(Z12, A13),
            A13=suspension(_,_,_,B13,C13,D13,E13),
            A=..[show_notes,B13,C13,D13,E13]
        ;   nb_getval('$chr_store_global_ground_user:voice_header/1', G13),
            'chr sbag_member'(F13, G13),
            F13=suspension(_,_,_,_,H13),
            A=..[voice_header,H13]
        ;   nb_getval('$chr_store_multi_hash_user:voice_footer/1-1', I13),
            value_ht(I13, J13),
            J13=suspension(_,_,_,K13),
            A=..[voice_footer,K13]
        ;   nb_getval('$chr_store_global_ground_user:maybe_close_bracket/0', M13),
            'chr sbag_member'(L13, M13),
            L13=suspension(_,_,_,_),
            A=..[maybe_close_bracket]
        ;   nb_getval('$chr_store_global_ground_user:show_note/1', O13),
            'chr sbag_member'(N13, O13),
            N13=suspension(_,_,_,_,P13),
            A=..[show_note,P13]
        ;   nb_getval('$chr_store_global_ground_user:show_mods/1', R13),
            'chr sbag_member'(Q13, R13),
            Q13=suspension(_,_,_,_,S13),
            A=..[show_mods,S13]
        ;   nb_getval('$chr_store_multi_hash_user:maybe_show_octave/4-1234', T13),
            value_ht(T13, U13),
            U13=suspension(_,_,_,V13,W13,X13,Y13),
            A=..[maybe_show_octave,V13,W13,X13,Y13]
        ;   nb_getval('$chr_store_global_ground_user:tempo_declaration/0', A14),
            'chr sbag_member'(Z13, A14),
            Z13=suspension(_,_,_,_),
            A=..[tempo_declaration]
        ;   nb_getval('$chr_store_global_ground_user:play/0', C14),
            'chr sbag_member'(B14, C14),
            B14=suspension(_,_,_,_),
            A=..[play]
        ;   nb_getval('$chr_store_global_ground_user:show/0', E14),
            'chr sbag_member'(D14, E14),
            D14=suspension(_,_,_,_),
            A=..[show]
        ;   nb_getval('$chr_store_global_ground_user:play_footer/0', G14),
            'chr sbag_member'(F14, G14),
            F14=suspension(_,_,_,_),
            A=..[play_footer]
        ;   nb_getval('$chr_store_global_ground_user:show_footer/0', I14),
            'chr sbag_member'(H14, I14),
            H14=suspension(_,_,_,_),
            A=..[show_footer]
        ;   nb_getval('$chr_store_global_ground_user:show_voice_footers/0', K14),
            'chr sbag_member'(J14, K14),
            J14=suspension(_,_,_,_),
            A=..[show_voice_footers]
        ).
'$via1_multi_hash_failrules/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:failrules/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultnote/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultnote/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultanote/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultanote/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultoctave/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultoctave/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultbeat/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultbeat/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultbeat/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_check_resultbeat/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:check_resultbeat/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resultmchord/2-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resultmchord/2-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_resulttied/4-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:resulttied/4-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_measures/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:measures/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_meter/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:meter/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_key/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:key/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_shortest_duration/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:shortest_duration/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_voice/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:voice/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_range/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:range/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_range/5-15'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:range/5-15', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_range/5-13'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:range/5-13', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_max_jump/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:max_jump/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_instrument/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:instrument/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_max_repeat/2-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_max_repeat/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:max_repeat/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_measure/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:measure/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_mchord/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:mchord/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_beat/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:beat/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_beat/5-2'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:beat/5-2', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_beat/5-234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:beat/5-234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_beat/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:beat/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_beat/5-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:beat/5-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_note/5-2'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:note/5-2', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_note/5-125'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:note/5-125', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_note/5-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:note/5-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_note/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:note/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_note/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:note/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_tied/4-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:tied/4-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_make_measures/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:make_measures/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_measure/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_measure/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_beat/7-5'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_beat/7-5', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_beat/7-12345'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_beat/7-12345', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_beat/7-1234567'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234567', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_beat/7-6'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_beat/7-6', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_beat/7-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_beat/7-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_anote/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:anote/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_phase/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:phase/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave_d/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave_d/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave_d/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave_rangecheck/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave_rangecheck/5-15'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-15', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_octave_rangecheck/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:octave_rangecheck/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_same_note_counter/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_same_note_counter/5-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_same_note_counter/5-15'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:same_note_counter/5-15', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_make_notes_measure/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:make_notes_measure/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_find_octave_d/5-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:find_octave_d/5-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_chord_scheme/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:chord_scheme/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_theme_boundary/2-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_theme_boundary/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:theme_boundary/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_unspecified_measure/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:unspecified_measure/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_unspecified_successor/2-2'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-2', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_unspecified_successor/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:unspecified_successor/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_max_unspecified/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:max_unspecified/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_boundary_list/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:boundary_list/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_theme_length/2-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:theme_length/2-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_theme_length/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:theme_length/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_theme_instance/3-13'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-13', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_next_theme_instance/3-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:next_theme_instance/3-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_theme_boundary_count/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:theme_boundary_count/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_start/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_start/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_num_first_theme_repeats/2-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:num_first_theme_repeats/2-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_repetition/3-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_repetition/3-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_occurrence/4-12'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-12', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_occurrence/4-2'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-2', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_occurrence/4-4'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-4', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_first_theme_occurrence/4-3'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:first_theme_occurrence/4-3', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_number_duplicates/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:number_duplicates/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_duplicated_measure/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:duplicated_measure/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_number_duplicated_measures/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:number_duplicated_measures/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_number_removed_unspecified_successors/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:number_removed_unspecified_successors/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_abstract_beat/4-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:abstract_beat/4-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_show_notes/4-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:show_notes/4-1234', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_voice_footer/1-1'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:voice_footer/1-1', C),
        lookup_ht(C, A, B).
'$via1_multi_hash_maybe_show_octave/4-1234'(A, B) :-
        nb_getval('$chr_store_multi_hash_user:maybe_show_octave/4-1234', C),
        lookup_ht(C, A, B).
'$user__chr_initialization' :-
        nb_setval('$chr_store_global_ground_user:show_voice_footers/0', []),
        nb_setval('$chr_store_global_ground_user:show_footer/0', []),
        nb_setval('$chr_store_global_ground_user:play_footer/0', []),
        nb_setval('$chr_store_global_ground_user:show/0', []),
        nb_setval('$chr_store_global_ground_user:play/0', []),
        nb_setval('$chr_store_global_ground_user:tempo_declaration/0', []),
        new_ht(E3),
        nb_setval('$chr_store_multi_hash_user:maybe_show_octave/4-1234', E3),
        nb_setval('$chr_store_global_ground_user:show_mods/1', []),
        nb_setval('$chr_store_global_ground_user:show_note/1', []),
        nb_setval('$chr_store_global_ground_user:maybe_close_bracket/0', []),
        new_ht(D3),
        nb_setval('$chr_store_multi_hash_user:voice_footer/1-1', D3),
        nb_setval('$chr_store_global_ground_user:voice_header/1', []),
        new_ht(C3),
        nb_setval('$chr_store_multi_hash_user:show_notes/4-1234', C3),
        nb_setval('$chr_store_global_ground_user:show/3', []),
        nb_setval('$chr_store_global_ground_user:write_notes/0', []),
        new_ht(B3),
        nb_setval('$chr_store_multi_hash_user:abstract_beat/4-1', B3),
        nb_setval('$chr_store_global_ground_user:abstract_beat/4', []),
        nb_setval('$chr_store_global_ground_user:restored_unspec/0', []),
        nb_setval('$chr_store_global_ground_user:all_occurrences/0', []),
        nb_setval('$chr_store_global_ground_user:removed_unspecified_successor/0', []),
        nb_setval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', []),
        new_ht(A3),
        nb_setval('$chr_store_multi_hash_user:number_removed_unspecified_successors/1-1', A3),
        nb_setval('$chr_store_global_ground_user:all_duplicates/0', []),
        nb_setval('$chr_store_global_ground_user:number_duplicated_measures/1', []),
        new_ht(Z2),
        nb_setval('$chr_store_multi_hash_user:number_duplicated_measures/1-1', Z2),
        nb_setval('$chr_store_global_ground_user:increment_duplicates/0', []),
        new_ht(Y2),
        nb_setval('$chr_store_multi_hash_user:duplicated_measure/1-1', Y2),
        nb_setval('$chr_store_global_ground_user:number_duplicates/1', []),
        new_ht(X2),
        nb_setval('$chr_store_multi_hash_user:number_duplicates/1-1', X2),
        nb_setval('$chr_store_global_ground_user:first_theme_end/2', []),
        nb_setval('$chr_store_global_ground_user:increment_occurrences/0', []),
        nb_setval('$chr_store_global_ground_user:first_theme_occurrence/4', []),
        new_ht(W2),
        nb_setval('$chr_store_multi_hash_user:first_theme_occurrence/4-3', W2),
        new_ht(V2),
        nb_setval('$chr_store_multi_hash_user:first_theme_occurrence/4-4', V2),
        new_ht(U2),
        nb_setval('$chr_store_multi_hash_user:first_theme_occurrence/4-2', U2),
        new_ht(T2),
        nb_setval('$chr_store_multi_hash_user:first_theme_occurrence/4-12', T2),
        nb_setval('$chr_store_global_ground_user:occurrence_count/1', []),
        nb_setval('$chr_store_global_ground_user:increment_first_theme_rep/0', []),
        new_ht(S2),
        nb_setval('$chr_store_multi_hash_user:first_theme_repetition/3-1', S2),
        nb_setval('$chr_store_global_ground_user:first_theme_repetition/3', []),
        nb_setval('$chr_store_global_ground_user:num_first_theme_repeats/2', []),
        new_ht(R2),
        nb_setval('$chr_store_multi_hash_user:num_first_theme_repeats/2-1', R2),
        nb_setval('$chr_store_global_ground_user:first_theme/1', []),
        nb_setval('$chr_store_global_ground_user:first_theme_start/2', []),
        new_ht(Q2),
        nb_setval('$chr_store_multi_hash_user:first_theme_start/2-1', Q2),
        nb_setval('$chr_store_global_ground_user:theme_boundary_count/2', []),
        new_ht(P2),
        nb_setval('$chr_store_multi_hash_user:theme_boundary_count/2-1', P2),
        nb_setval('$chr_store_global_ground_user:next_theme_instance/3', []),
        new_ht(O2),
        nb_setval('$chr_store_multi_hash_user:next_theme_instance/3-12', O2),
        new_ht(N2),
        nb_setval('$chr_store_multi_hash_user:next_theme_instance/3-13', N2),
        nb_setval('$chr_store_global_ground_user:theme_length/2', []),
        new_ht(M2),
        nb_setval('$chr_store_multi_hash_user:theme_length/2-1', M2),
        new_ht(L2),
        nb_setval('$chr_store_multi_hash_user:theme_length/2-12', L2),
        nb_setval('$chr_store_global_ground_user:boundary_list/1', []),
        new_ht(K2),
        nb_setval('$chr_store_multi_hash_user:boundary_list/1-1', K2),
        nb_setval('$chr_store_global_ground_user:max_unspecified/1', []),
        new_ht(J2),
        nb_setval('$chr_store_multi_hash_user:max_unspecified/1-1', J2),
        new_ht(I2),
        nb_setval('$chr_store_multi_hash_user:unspecified_successor/2-1', I2),
        nb_setval('$chr_store_global_ground_user:unspecified_successor/2', []),
        new_ht(H2),
        nb_setval('$chr_store_multi_hash_user:unspecified_successor/2-2', H2),
        new_ht(G2),
        nb_setval('$chr_store_multi_hash_user:unspecified_measure/1-1', G2),
        nb_setval('$chr_store_global_ground_user:unspecified_measure/1', []),
        nb_setval('$chr_store_global_ground_user:theme_boundary/2', []),
        new_ht(F2),
        nb_setval('$chr_store_multi_hash_user:theme_boundary/2-1', F2),
        new_ht(E2),
        nb_setval('$chr_store_multi_hash_user:theme_boundary/2-12', E2),
        new_ht(D2),
        nb_setval('$chr_store_multi_hash_user:chord_scheme/1-1', D2),
        new_ht(C2),
        nb_setval('$chr_store_multi_hash_user:find_octave_d/5-1', C2),
        nb_setval('$chr_store_global_ground_user:make_notes_measure/1', []),
        new_ht(B2),
        nb_setval('$chr_store_multi_hash_user:make_notes_measure/1-1', B2),
        new_ht(A2),
        nb_setval('$chr_store_multi_hash_user:same_note_counter/5-15', A2),
        new_ht(Z1),
        nb_setval('$chr_store_multi_hash_user:same_note_counter/5-1234', Z1),
        new_ht(Y1),
        nb_setval('$chr_store_multi_hash_user:same_note_counter/5-1', Y1),
        nb_setval('$chr_store_global_ground_user:same_note_counter/5', []),
        new_ht(X1),
        nb_setval('$chr_store_multi_hash_user:octave_rangecheck/5-1', X1),
        new_ht(W1),
        nb_setval('$chr_store_multi_hash_user:octave_rangecheck/5-15', W1),
        new_ht(V1),
        nb_setval('$chr_store_multi_hash_user:octave_rangecheck/5-1234', V1),
        new_ht(U1),
        nb_setval('$chr_store_multi_hash_user:octave_d/5-1', U1),
        new_ht(T1),
        nb_setval('$chr_store_multi_hash_user:octave_d/5-1234', T1),
        nb_setval('$chr_store_global_ground_user:chord/5', []),
        nb_setval('$chr_store_global_ground_user:phase/1', []),
        new_ht(S1),
        nb_setval('$chr_store_multi_hash_user:phase/1-1', S1),
        nb_setval('$chr_store_global_ground_user:anote/5', []),
        new_ht(R1),
        nb_setval('$chr_store_multi_hash_user:anote/5-1234', R1),
        new_ht(Q1),
        nb_setval('$chr_store_multi_hash_user:next_beat/7-1234', Q1),
        new_ht(P1),
        nb_setval('$chr_store_multi_hash_user:next_beat/7-6', P1),
        new_ht(O1),
        nb_setval('$chr_store_multi_hash_user:next_beat/7-1234567', O1),
        new_ht(N1),
        nb_setval('$chr_store_multi_hash_user:next_beat/7-12345', N1),
        new_ht(M1),
        nb_setval('$chr_store_multi_hash_user:next_beat/7-5', M1),
        nb_setval('$chr_store_global_ground_user:make_beats/4', []),
        new_ht(L1),
        nb_setval('$chr_store_multi_hash_user:next_measure/2-1', L1),
        new_ht(K1),
        nb_setval('$chr_store_multi_hash_user:make_measures/1-1', K1),
        nb_setval('$chr_store_global_ground_user:tied/4', []),
        new_ht(J1),
        nb_setval('$chr_store_multi_hash_user:tied/4-1234', J1),
        nb_setval('$chr_store_global_ground_user:octave/5', []),
        new_ht(I1),
        nb_setval('$chr_store_multi_hash_user:octave/5-1', I1),
        new_ht(H1),
        nb_setval('$chr_store_multi_hash_user:octave/5-1234', H1),
        nb_setval('$chr_store_global_ground_user:note/5', []),
        new_ht(G1),
        nb_setval('$chr_store_multi_hash_user:note/5-1234', G1),
        new_ht(F1),
        nb_setval('$chr_store_multi_hash_user:note/5-1', F1),
        new_ht(E1),
        nb_setval('$chr_store_multi_hash_user:note/5-12345', E1),
        new_ht(D1),
        nb_setval('$chr_store_multi_hash_user:note/5-125', D1),
        new_ht(C1),
        nb_setval('$chr_store_multi_hash_user:note/5-2', C1),
        nb_setval('$chr_store_global_ground_user:beat/5', []),
        new_ht(B1),
        nb_setval('$chr_store_multi_hash_user:beat/5-12', B1),
        new_ht(A1),
        nb_setval('$chr_store_multi_hash_user:beat/5-1', A1),
        new_ht(Z),
        nb_setval('$chr_store_multi_hash_user:beat/5-234', Z),
        new_ht(Y),
        nb_setval('$chr_store_multi_hash_user:beat/5-2', Y),
        new_ht(X),
        nb_setval('$chr_store_multi_hash_user:beat/5-1234', X),
        nb_setval('$chr_store_global_ground_user:mchord/2', []),
        new_ht(W),
        nb_setval('$chr_store_multi_hash_user:mchord/2-1', W),
        nb_setval('$chr_store_global_ground_user:measure/1', []),
        new_ht(V),
        nb_setval('$chr_store_multi_hash_user:measure/1-1', V),
        new_ht(U),
        nb_setval('$chr_store_multi_hash_user:max_repeat/2-1', U),
        nb_setval('$chr_store_global_ground_user:max_repeat/2', []),
        new_ht(T),
        nb_setval('$chr_store_multi_hash_user:max_repeat/2-12', T),
        nb_setval('$chr_store_global_ground_user:chord_style/1', []),
        new_ht(S),
        nb_setval('$chr_store_multi_hash_user:instrument/2-1', S),
        new_ht(R),
        nb_setval('$chr_store_multi_hash_user:max_jump/2-1', R),
        new_ht(Q),
        nb_setval('$chr_store_multi_hash_user:range/5-13', Q),
        new_ht(P),
        nb_setval('$chr_store_multi_hash_user:range/5-15', P),
        new_ht(O),
        nb_setval('$chr_store_multi_hash_user:range/5-1', O),
        nb_setval('$chr_store_global_ground_user:voice/1', []),
        new_ht(N),
        nb_setval('$chr_store_multi_hash_user:voice/1-1', N),
        nb_setval('$chr_store_global_ground_user:tempo/1', []),
        nb_setval('$chr_store_global_ground_user:shortest_duration/2', []),
        new_ht(M),
        nb_setval('$chr_store_multi_hash_user:shortest_duration/2-1', M),
        new_ht(L),
        nb_setval('$chr_store_multi_hash_user:key/1-1', L),
        nb_setval('$chr_store_global_ground_user:repeats/1', []),
        nb_setval('$chr_store_global_ground_user:meter/2', []),
        new_ht(K),
        nb_setval('$chr_store_multi_hash_user:meter/2-1', K),
        nb_setval('$chr_store_global_ground_user:measures/1', []),
        new_ht(J),
        nb_setval('$chr_store_multi_hash_user:measures/1-1', J),
        nb_setval('$chr_store_global_ground_user:initial/0', []),
        nb_setval('$chr_store_global_ground_user:check2/1', []),
        nb_setval('$chr_store_global_ground_user:check/1', []),
        nb_setval('$chr_store_global_ground_user:resulttied/4', []),
        new_ht(I),
        nb_setval('$chr_store_multi_hash_user:resulttied/4-1234', I),
        nb_setval('$chr_store_global_ground_user:resultmchord/2', []),
        new_ht(H),
        nb_setval('$chr_store_multi_hash_user:resultmchord/2-12', H),
        new_ht(G),
        nb_setval('$chr_store_multi_hash_user:check_resultbeat/5-12345', G),
        nb_setval('$chr_store_global_ground_user:resultbeat/5', []),
        new_ht(F),
        nb_setval('$chr_store_multi_hash_user:resultbeat/5-12345', F),
        new_ht(E),
        nb_setval('$chr_store_multi_hash_user:resultbeat/5-1234', E),
        nb_setval('$chr_store_global_ground_user:resultoctave/5', []),
        new_ht(D),
        nb_setval('$chr_store_multi_hash_user:resultoctave/5-12345', D),
        nb_setval('$chr_store_global_ground_user:resultanote/5', []),
        new_ht(C),
        nb_setval('$chr_store_multi_hash_user:resultanote/5-12345', C),
        nb_setval('$chr_store_global_ground_user:resultnote/5', []),
        new_ht(B),
        nb_setval('$chr_store_multi_hash_user:resultnote/5-12345', B),
        nb_setval('$chr_store_global_ground_user:failrules/1', []),
        new_ht(A),
        nb_setval('$chr_store_multi_hash_user:failrules/1-1', A),
        nb_setval('$chr_store_global_ground_user:w2/1', []),
        nb_setval('$chr_store_global_ground_user:w/1', []),
        nb_setval('$chr_store_global_ground_user:s/1', []),
        nb_setval('$chr_store_global_ground_user:v/0', []),
        nb_setval('$chr_store_global_ground_user:s/0', []),
        nb_setval('$chr_store_global_ground_user:u/0', []),
        nb_setval('$chr_store_global_ground_user:t/1', []),
        nb_setval('$chr_store_global_ground_user:t/0', []),
        nb_setval('$chr_store_global_ground_user:e/0', []),
        nb_setval('$chr_store_global_ground_user:cleanup/0', []),
        nb_setval('$chr_store_global_ground_user:result/1', []),
        nb_setval('$chr_store_global_ground_user:result_status/1', []),
        true.
(:-'$user__chr_initialization').
result_status(A) :-
        '$insert_constraint_internal_result_status/1'(B, A),
        '$insert_in_store_result_status/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'result_status/1__0'(A, B).
'result_status/1__0'(_, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_result_status/1'(A, E),
        (   E=yes ->
            '$delete_from_store_result_status/1'(A)
        ;   true
        ).
'result_status/1__0'(_, A) :-
        '$activate_constraint_result_status/1'(_, A).
result(A) :-
        '$insert_constraint_internal_result/1'(B, A),
        '$insert_in_store_result/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'result/1__0'(A, B).
'result/1__0'((B,C), A) :- !,
        '$remove_constraint_internal_result/1'(A, D),
        (   D=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        result(B),
        result(C).
'result/1__0'((B,C), A) :- !,
        '$remove_constraint_internal_result/1'(A, D),
        (   D=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        result(B),
        result(C).
'result/1__0'(note(B,C,D,E,F), A) :- !,
        '$remove_constraint_internal_result/1'(A, G),
        (   G=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        resultnote(B, C, D, E, F).
'result/1__0'(tied(B,C,D,E), A) :- !,
        '$remove_constraint_internal_result/1'(A, F),
        (   F=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        resulttied(B, C, D, E).
'result/1__0'(anote(B,C,D,E,F), A) :- !,
        '$remove_constraint_internal_result/1'(A, G),
        (   G=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        resultanote(B, C, D, E, F).
'result/1__0'(octave(B,C,D,E,F), A) :- !,
        '$remove_constraint_internal_result/1'(A, G),
        (   G=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        resultoctave(B, C, D, E, F).
'result/1__0'(beat(B,C,D,E,F), A) :- !,
        '$remove_constraint_internal_result/1'(A, G),
        (   G=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        resultbeat(B, C, D, E, F).
'result/1__0'(mchord(B,C), A) :- !,
        '$remove_constraint_internal_result/1'(A, D),
        (   D=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ),
        debugwrite('DEBUG: '),
        debugwriteln(resultmchord(B,C)),
        resultmchord(B, C).
'result/1__0'(_, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_result/1'(A, E),
        (   E=yes ->
            '$delete_from_store_result/1'(A)
        ;   true
        ).
'result/1__0'(_, A) :-
        '$activate_constraint_result/1'(_, A).
cleanup :-
        '$insert_constraint_internal_cleanup/0'(A),
        '$insert_in_store_cleanup/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'cleanup/0__0'(A).
'cleanup/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:failrules/1', B), !,
        'cleanup/0__0__0'(B, A).
'cleanup/0__0__0'([], A) :-
        'cleanup/0__1'(A).
'cleanup/0__0__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_failrules/1'(B, E),
            (   E=yes ->
                '$delete_from_store_failrules/1'(B)
            ;   true
            ),
            'cleanup/0__0__0'(D, A)
        ;   'cleanup/0__0__0'(D, A)
        ).
'cleanup/0__0'(A) :-
        'cleanup/0__1'(A).
'cleanup/0__1'(A) :-
        nb_getval('$chr_store_global_ground_user:resultnote/5', B), !,
        'cleanup/0__1__0'(B, A).
'cleanup/0__1__0'([], A) :-
        'cleanup/0__2'(A).
'cleanup/0__1__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resultnote/5'(B, E),
            (   E=yes ->
                '$delete_from_store_resultnote/5'(B)
            ;   true
            ),
            'cleanup/0__1__0'(D, A)
        ;   'cleanup/0__1__0'(D, A)
        ).
'cleanup/0__1'(A) :-
        'cleanup/0__2'(A).
'cleanup/0__2'(A) :-
        nb_getval('$chr_store_global_ground_user:resulttied/4', B), !,
        'cleanup/0__2__0'(B, A).
'cleanup/0__2__0'([], A) :-
        'cleanup/0__3'(A).
'cleanup/0__2__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resulttied/4'(B, E),
            (   E=yes ->
                '$delete_from_store_resulttied/4'(B)
            ;   true
            ),
            'cleanup/0__2__0'(D, A)
        ;   'cleanup/0__2__0'(D, A)
        ).
'cleanup/0__2'(A) :-
        'cleanup/0__3'(A).
'cleanup/0__3'(A) :-
        nb_getval('$chr_store_global_ground_user:resultanote/5', B), !,
        'cleanup/0__3__0'(B, A).
'cleanup/0__3__0'([], A) :-
        'cleanup/0__4'(A).
'cleanup/0__3__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resultanote/5'(B, E),
            (   E=yes ->
                '$delete_from_store_resultanote/5'(B)
            ;   true
            ),
            'cleanup/0__3__0'(D, A)
        ;   'cleanup/0__3__0'(D, A)
        ).
'cleanup/0__3'(A) :-
        'cleanup/0__4'(A).
'cleanup/0__4'(A) :-
        nb_getval('$chr_store_global_ground_user:resultoctave/5', B), !,
        'cleanup/0__4__0'(B, A).
'cleanup/0__4__0'([], A) :-
        'cleanup/0__5'(A).
'cleanup/0__4__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resultoctave/5'(B, E),
            (   E=yes ->
                '$delete_from_store_resultoctave/5'(B)
            ;   true
            ),
            'cleanup/0__4__0'(D, A)
        ;   'cleanup/0__4__0'(D, A)
        ).
'cleanup/0__4'(A) :-
        'cleanup/0__5'(A).
'cleanup/0__5'(A) :-
        nb_getval('$chr_store_global_ground_user:resultbeat/5', B), !,
        'cleanup/0__5__0'(B, A).
'cleanup/0__5__0'([], A) :-
        'cleanup/0__6'(A).
'cleanup/0__5__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resultbeat/5'(B, E),
            (   E=yes ->
                '$delete_from_store_resultbeat/5'(B)
            ;   true
            ),
            'cleanup/0__5__0'(D, A)
        ;   'cleanup/0__5__0'(D, A)
        ).
'cleanup/0__5'(A) :-
        'cleanup/0__6'(A).
'cleanup/0__6'(A) :-
        nb_getval('$chr_store_global_ground_user:resultmchord/2', B), !,
        'cleanup/0__6__0'(B, A).
'cleanup/0__6__0'([], A) :-
        'cleanup/0__7'(A).
'cleanup/0__6__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_resultmchord/2'(B, E),
            (   E=yes ->
                '$delete_from_store_resultmchord/2'(B)
            ;   true
            ),
            debugwriteln('DEBUG: cleaning up resultmchord'),
            'cleanup/0__6__0'(D, A)
        ;   'cleanup/0__6__0'(D, A)
        ).
'cleanup/0__6'(A) :-
        'cleanup/0__7'(A).
'cleanup/0__7'(A) :-
        nb_getval('$chr_store_global_ground_user:result/1', B), !,
        'cleanup/0__7__0'(B, A).
'cleanup/0__7__0'([], A) :-
        'cleanup/0__8'(A).
'cleanup/0__7__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_result/1'(B, E),
            (   E=yes ->
                '$delete_from_store_result/1'(B)
            ;   true
            ),
            'cleanup/0__7__0'(D, A)
        ;   'cleanup/0__7__0'(D, A)
        ).
'cleanup/0__7'(A) :-
        'cleanup/0__8'(A).
'cleanup/0__8'(A) :-
        nb_getval('$chr_store_global_ground_user:result_status/1', B), !,
        'cleanup/0__8__0'(B, A).
'cleanup/0__8__0'([], A) :-
        'cleanup/0__9'(A).
'cleanup/0__8__0'([B|D], A) :-
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_result_status/1'(B, E),
            (   E=yes ->
                '$delete_from_store_result_status/1'(B)
            ;   true
            ),
            'cleanup/0__8__0'(D, A)
        ;   'cleanup/0__8__0'(D, A)
        ).
'cleanup/0__8'(A) :-
        'cleanup/0__9'(A).
'cleanup/0__9'(A) :- !,
        '$remove_constraint_internal_cleanup/0'(A, B),
        (   B=yes ->
            '$delete_from_store_cleanup/0'(A)
        ;   true
        ),
        debugwriteln(cleanup_done).
'cleanup/0__9'(A) :-
        '$activate_constraint_cleanup/0'(_, A).
e :-
        '$insert_constraint_internal_e/0'(A),
        '$insert_in_store_e/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'e/0__0'(A).
'e/0__0'(A) :- !,
        '$remove_constraint_internal_e/0'(A, B),
        (   B=yes ->
            '$delete_from_store_e/0'(A)
        ;   true
        ),
        play,
        show,
        t,
        write_notes.
'e/0__0'(A) :-
        '$activate_constraint_e/0'(_, A).
t :-
        '$insert_constraint_internal_t/0'(A),
        '$insert_in_store_t/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        't/0__0'(A).
't/0__0'(A) :- !,
        '$remove_constraint_internal_t/0'(A, B),
        (   B=yes ->
            '$delete_from_store_t/0'(A)
        ;   true
        ),
        t(8).
't/0__0'(A) :-
        '$activate_constraint_t/0'(_, A).
t(A) :-
        '$insert_constraint_internal_t/1'(B, A),
        '$insert_in_store_t/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        't/1__0'(A, B).
't/1__0'(A, B) :- !,
        '$remove_constraint_internal_t/1'(B, C),
        (   C=yes ->
            '$delete_from_store_t/1'(B)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(drums),
        voice(bass),
        voice(chords),
        voice(melody),
        range(bass, g, 1, c, 3),
        range(melody, g, 3, e, 5),
        max_jump(bass, 12),
        max_jump(melody, 5),
        chord_style(offbeat),
        shortest_duration(drums, 16),
        shortest_duration(bass, 8),
        shortest_duration(chords, 16),
        shortest_duration(melody, 16),
        measures(A).
't/1__0'(_, A) :-
        '$activate_constraint_t/1'(_, A).
u :-
        '$insert_constraint_internal_u/0'(A),
        '$insert_in_store_u/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'u/0__0'(A).
'u/0__0'(A) :- !,
        '$remove_constraint_internal_u/0'(A, B),
        (   B=yes ->
            '$delete_from_store_u/0'(A)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(bass),
        voice(melody),
        range(bass, g, 1, c, 3),
        range(melody, g, 3, e, 5),
        max_jump(bass, 12),
        max_jump(melody, 5),
        shortest_duration(bass, 8),
        shortest_duration(melody, 16),
        measures(1).
'u/0__0'(A) :-
        '$activate_constraint_u/0'(_, A).
s :-
        '$insert_constraint_internal_s/0'(A),
        '$insert_in_store_s/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        's/0__0'(A).
's/0__0'(A) :- !,
        '$remove_constraint_internal_s/0'(A, B),
        (   B=yes ->
            '$delete_from_store_s/0'(A)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(melody),
        range(melody, g, 3, e, 5),
        max_jump(melody, 5),
        shortest_duration(melody, 16),
        measures(1).
's/0__0'(A) :-
        '$activate_constraint_s/0'(_, A).
v :-
        '$insert_constraint_internal_v/0'(A),
        '$insert_in_store_v/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'v/0__0'(A).
'v/0__0'(A) :- !,
        '$remove_constraint_internal_v/0'(A, B),
        (   B=yes ->
            '$delete_from_store_v/0'(A)
        ;   true
        ),
        meter(2, 4),
        key(major),
        measures(3).
'v/0__0'(A) :-
        '$activate_constraint_v/0'(_, A).
s(A) :-
        '$insert_constraint_internal_s/1'(B, A),
        '$insert_in_store_s/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        's/1__0'(A, B).
's/1__0'(A, B) :- !,
        '$remove_constraint_internal_s/1'(B, C),
        (   C=yes ->
            '$delete_from_store_s/1'(B)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(melody),
        range(melody, g, 3, e, 5),
        max_jump(melody, 5),
        shortest_duration(melody, 8),
        measures(A).
's/1__0'(_, A) :-
        '$activate_constraint_s/1'(_, A).
w(A) :-
        '$insert_constraint_internal_w/1'(B, A),
        '$insert_in_store_w/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'w/1__0'(A, B).
'w/1__0'(A, B) :- !,
        '$remove_constraint_internal_w/1'(B, C),
        (   C=yes ->
            '$delete_from_store_w/1'(B)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(drums),
        shortest_duration(drums, 4),
        measures(A).
'w/1__0'(_, A) :-
        '$activate_constraint_w/1'(_, A).
w2(A) :-
        '$insert_constraint_internal_w2/1'(B, A),
        '$insert_in_store_w2/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'w2/1__0'(A, B).
'w2/1__0'(A, B) :- !,
        '$remove_constraint_internal_w2/1'(B, C),
        (   C=yes ->
            '$delete_from_store_w2/1'(B)
        ;   true
        ),
        meter(2, 4),
        repeats(1),
        key(major),
        tempo(100),
        voice(drums),
        shortest_duration(drums, 8),
        measures(A).
'w2/1__0'(_, A) :-
        '$activate_constraint_w2/1'(_, A).
failrules(A) :-
        '$insert_constraint_internal_failrules/1'(B, A),
        '$insert_in_store_failrules/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'failrules/1__0'(A, B).
'failrules/1__0'([], A) :- !,
        '$remove_constraint_internal_failrules/1'(A, B),
        (   B=yes ->
            '$delete_from_store_failrules/1'(A)
        ;   true
        ).
'failrules/1__0'([B|C], A) :- !,
        '$remove_constraint_internal_failrules/1'(A, D),
        (   D=yes ->
            '$delete_from_store_failrules/1'(A)
        ;   true
        ),
        failrules(B),
        failrules(C).
'failrules/1__0'(nr, A) :-
        nb_getval('$chr_store_global_ground_user:note/5', B), !,
        'failrules/1__0__0'(B, nr, A).
'failrules/1__0__0'([], B, A) :-
        'failrules/1__1'(B, A).
'failrules/1__0__0'([I|J], B, A) :-
        (   I=suspension(_,H,_,_,C,D,E,F,G),
            H=mutable(active),
            K=t(21,A,I),
            '$novel_production'(A, K),
            '$novel_production'(I, K) ->
            '$extend_history'(A, K),
            check(note(C,D,E,F,G)),
            'failrules/1__0__0'(J, B, A)
        ;   'failrules/1__0__0'(J, B, A)
        ).
'failrules/1__0'(A, B) :-
        'failrules/1__1'(A, B).
'failrules/1__1'(nr, A) :-
        nb_getval('$chr_store_global_ground_user:anote/5', B), !,
        'failrules/1__1__0'(B, nr, A).
'failrules/1__1__0'([], B, A) :-
        'failrules/1__2'(B, A).
'failrules/1__1__0'([I|J], B, A) :-
        (   I=suspension(_,H,_,_,C,D,E,F,G),
            H=mutable(active),
            K=t(22,A,I),
            '$novel_production'(A, K),
            '$novel_production'(I, K) ->
            '$extend_history'(A, K),
            check(anote(C,D,E,F,G)),
            'failrules/1__1__0'(J, B, A)
        ;   'failrules/1__1__0'(J, B, A)
        ).
'failrules/1__1'(A, B) :-
        'failrules/1__2'(A, B).
'failrules/1__2'(nr, A) :-
        nb_getval('$chr_store_global_ground_user:octave/5', B), !,
        'failrules/1__2__0'(B, nr, A).
'failrules/1__2__0'([], B, A) :-
        'failrules/1__3'(B, A).
'failrules/1__2__0'([I|J], B, A) :-
        (   I=suspension(_,H,_,_,C,D,E,F,G),
            H=mutable(active),
            K=t(23,A,I),
            '$novel_production'(A, K),
            '$novel_production'(I, K) ->
            '$extend_history'(A, K),
            check(octave(C,D,E,F,G)),
            'failrules/1__2__0'(J, B, A)
        ;   'failrules/1__2__0'(J, B, A)
        ).
'failrules/1__2'(A, B) :-
        'failrules/1__3'(A, B).
'failrules/1__3'(nr, A) :-
        nb_getval('$chr_store_global_ground_user:mchord/2', B), !,
        'failrules/1__3__0'(B, nr, A).
'failrules/1__3__0'([], B, A) :-
        'failrules/1__4'(B, A).
'failrules/1__3__0'([F|G], B, A) :-
        (   F=suspension(_,E,_,_,C,D),
            E=mutable(active),
            H=t(24,A,F),
            '$novel_production'(A, H),
            '$novel_production'(F, H) ->
            '$extend_history'(A, H),
            debugwrite('DEBUG: '),
            debugwriteln(check(mchordA,D)),
            check(mchord(C,D)),
            'failrules/1__3__0'(G, B, A)
        ;   'failrules/1__3__0'(G, B, A)
        ).
'failrules/1__3'(A, B) :-
        'failrules/1__4'(A, B).
'failrules/1__4'(nr, A) :-
        nb_getval('$chr_store_global_ground_user:tied/4', B), !,
        'failrules/1__4__0'(B, nr, A).
'failrules/1__4__0'([], B, A) :-
        'failrules/1__5'(B, A).
'failrules/1__4__0'([H|I], B, A) :-
        (   H=suspension(_,G,_,_,C,D,E,F),
            G=mutable(active),
            J=t(25,A,H),
            '$novel_production'(A, J),
            '$novel_production'(H, J) ->
            '$extend_history'(A, J),
            check(tied(C,D,E,F)),
            'failrules/1__4__0'(I, B, A)
        ;   'failrules/1__4__0'(I, B, A)
        ).
'failrules/1__4'(A, B) :-
        'failrules/1__5'(A, B).
'failrules/1__5'(s, A) :-
        nb_getval('$chr_store_global_ground_user:beat/5', B), !,
        'failrules/1__5__0'(B, s, A).
'failrules/1__5__0'([], B, A) :-
        'failrules/1__6'(B, A).
'failrules/1__5__0'([I|J], B, A) :-
        (   I=suspension(_,H,_,_,C,D,E,F,G),
            H=mutable(active),
            K=t(31,A,I),
            '$novel_production'(A, K),
            '$novel_production'(I, K) ->
            '$extend_history'(A, K),
            check2(beat(C,D,E,F,G)),
            'failrules/1__5__0'(J, B, A)
        ;   'failrules/1__5__0'(J, B, A)
        ).
'failrules/1__5'(A, B) :-
        'failrules/1__6'(A, B).
'failrules/1__6'(u, A) :-
        nb_getval('$chr_store_global_ground_user:phase/1', B), !,
        'failrules/1__6__0'(B, u, A).
'failrules/1__6__0'([], B, A) :-
        'failrules/1__7'(B, A).
'failrules/1__6__0'([D|H], B, A) :-
        (   D=suspension(_,F,_,_,C),
            F=mutable(active),
            C=split_beats(E),
            nb_getval('$chr_store_global_ground_user:beat/5', G) ->
            'failrules/1__6__1'(G, E, D, H, B, A)
        ;   'failrules/1__6__0'(H, B, A)
        ).
'failrules/1__6__1'([], _, _, A, C, B) :-
        'failrules/1__6__0'(A, C, B).
'failrules/1__6__1'([L|M], E, A, B, D, C) :-
        (   L=suspension(_,K,_,_,F,G,H,I,J),
            K=mutable(active),
            N=t(34,C,A,L),
            '$novel_production'(C, N),
            '$novel_production'(A, N),
            '$novel_production'(L, N),
            G<E ->
            '$extend_history'(C, N),
            check_resultbeat(F, G, H, I, J),
            'failrules/1__6__1'(M, E, A, B, D, C)
        ;   'failrules/1__6__1'(M, E, A, B, D, C)
        ).
'failrules/1__6'(A, B) :-
        'failrules/1__7'(A, B).
'failrules/1__7'(_, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_failrules/1'(A, E),
        (   E=yes ->
            '$delete_from_store_failrules/1'(A)
        ;   true
        ).
'failrules/1__7'(_, A) :-
        '$activate_constraint_failrules/1'(_, A).
resultnote(A, B, C, D, E) :-
        '$insert_constraint_internal_resultnote/5'(F, A, B, C, D, E),
        '$insert_in_store_resultnote/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'resultnote/5__0'(A, B, C, D, E, F).
'resultnote/5__0'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:check/1', G), !,
        'resultnote/5__0__0'(G, A, B, C, D, E, F).
'resultnote/5__0__0'([], B, C, D, E, F, A) :-
        'resultnote/5__1'(B, C, D, E, F, A).
'resultnote/5__0__0'([H|O], A, B, C, D, E, F) :-
        (   H=suspension(_,N,_,_,G),
            N=mutable(active),
            G=note(I,J,K,L,M),
            I==A,
            J==B,
            K==C,
            L==D,
            M==E ->
            '$remove_constraint_internal_check/1'(H, P),
            (   P=yes ->
                '$delete_from_store_check/1'(H)
            ;   true
            ),
            'resultnote/5__0__0'(O, A, B, C, D, E, F)
        ;   'resultnote/5__0__0'(O, A, B, C, D, E, F)
        ).
'resultnote/5__0'(A, B, C, D, E, F) :-
        'resultnote/5__1'(A, B, C, D, E, F).
'resultnote/5__1'(_, _, _, _, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resultnote/5'(A, E),
        (   E=yes ->
            '$delete_from_store_resultnote/5'(A)
        ;   true
        ).
'resultnote/5__1'(_, _, _, _, _, A) :-
        '$activate_constraint_resultnote/5'(_, A).
resultanote(A, B, C, D, E) :-
        '$insert_constraint_internal_resultanote/5'(F, A, B, C, D, E),
        '$insert_in_store_resultanote/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'resultanote/5__0'(A, B, C, D, E, F).
'resultanote/5__0'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:check/1', G), !,
        'resultanote/5__0__0'(G, A, B, C, D, E, F).
'resultanote/5__0__0'([], B, C, D, E, F, A) :-
        'resultanote/5__1'(B, C, D, E, F, A).
'resultanote/5__0__0'([H|O], A, B, C, D, E, F) :-
        (   H=suspension(_,N,_,_,G),
            N=mutable(active),
            G=anote(I,J,K,L,M),
            I==A,
            J==B,
            K==C,
            L==D,
            M==E ->
            '$remove_constraint_internal_check/1'(H, P),
            (   P=yes ->
                '$delete_from_store_check/1'(H)
            ;   true
            ),
            'resultanote/5__0__0'(O, A, B, C, D, E, F)
        ;   'resultanote/5__0__0'(O, A, B, C, D, E, F)
        ).
'resultanote/5__0'(A, B, C, D, E, F) :-
        'resultanote/5__1'(A, B, C, D, E, F).
'resultanote/5__1'(_, _, _, _, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resultanote/5'(A, E),
        (   E=yes ->
            '$delete_from_store_resultanote/5'(A)
        ;   true
        ).
'resultanote/5__1'(_, _, _, _, _, A) :-
        '$activate_constraint_resultanote/5'(_, A).
resultoctave(A, B, C, D, E) :-
        '$insert_constraint_internal_resultoctave/5'(F, A, B, C, D, E),
        '$insert_in_store_resultoctave/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'resultoctave/5__0'(A, B, C, D, E, F).
'resultoctave/5__0'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:check/1', G), !,
        'resultoctave/5__0__0'(G, A, B, C, D, E, F).
'resultoctave/5__0__0'([], B, C, D, E, F, A) :-
        'resultoctave/5__1'(B, C, D, E, F, A).
'resultoctave/5__0__0'([H|O], A, B, C, D, E, F) :-
        (   H=suspension(_,N,_,_,G),
            N=mutable(active),
            G=octave(I,J,K,L,M),
            I==A,
            J==B,
            K==C,
            L==D,
            M==E ->
            '$remove_constraint_internal_check/1'(H, P),
            (   P=yes ->
                '$delete_from_store_check/1'(H)
            ;   true
            ),
            'resultoctave/5__0__0'(O, A, B, C, D, E, F)
        ;   'resultoctave/5__0__0'(O, A, B, C, D, E, F)
        ).
'resultoctave/5__0'(A, B, C, D, E, F) :-
        'resultoctave/5__1'(A, B, C, D, E, F).
'resultoctave/5__1'(_, _, _, _, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resultoctave/5'(A, E),
        (   E=yes ->
            '$delete_from_store_resultoctave/5'(A)
        ;   true
        ).
'resultoctave/5__1'(_, _, _, _, _, A) :-
        '$activate_constraint_resultoctave/5'(_, A).
resultbeat(A, B, C, D, E) :-
        '$insert_constraint_internal_resultbeat/5'(F, A, B, C, D, E),
        '$insert_in_store_resultbeat/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'resultbeat/5__0'(A, B, C, D, E, F).
'resultbeat/5__0'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:check/1', G), !,
        'resultbeat/5__0__0'(G, A, B, C, D, E, F).
'resultbeat/5__0__0'([], B, C, D, E, F, A) :-
        'resultbeat/5__1'(B, C, D, E, F, A).
'resultbeat/5__0__0'([H|N], A, B, C, D, E, F) :-
        (   H=suspension(_,M,_,_,G),
            M=mutable(active),
            G=beat(I,J,K,L,_),
            I==A,
            J==B,
            K==C,
            L==D ->
            '$remove_constraint_internal_check/1'(H, O),
            (   O=yes ->
                '$delete_from_store_check/1'(H)
            ;   true
            ),
            'resultbeat/5__0__0'(N, A, B, C, D, E, F)
        ;   'resultbeat/5__0__0'(N, A, B, C, D, E, F)
        ).
'resultbeat/5__0'(A, B, C, D, E, F) :-
        'resultbeat/5__1'(A, B, C, D, E, F).
'resultbeat/5__1'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:check2/1', G), !,
        'resultbeat/5__1__0'(G, A, B, C, D, E, F).
'resultbeat/5__1__0'([], B, C, D, E, F, A) :-
        'resultbeat/5__2'(B, C, D, E, F, A).
'resultbeat/5__1__0'([H|O], A, B, C, D, E, F) :-
        (   H=suspension(_,N,_,_,G),
            N=mutable(active),
            G=beat(I,J,K,L,M),
            I==A,
            J==B,
            K==C,
            L==D,
            E>=M ->
            '$remove_constraint_internal_check2/1'(H, P),
            (   P=yes ->
                '$delete_from_store_check2/1'(H)
            ;   true
            ),
            'resultbeat/5__1__0'(O, A, B, C, D, E, F)
        ;   'resultbeat/5__1__0'(O, A, B, C, D, E, F)
        ).
'resultbeat/5__1'(A, B, C, D, E, F) :-
        'resultbeat/5__2'(A, B, C, D, E, F).
'resultbeat/5__2'(A, B, C, D, E, F) :-
        '$via1_multi_hash_check_resultbeat/5-12345'(k(A,B,C,D,E), G), !,
        'resultbeat/5__2__0'(G, A, B, C, D, E, F).
'resultbeat/5__2__0'([], B, C, D, E, F, A) :-
        'resultbeat/5__3'(B, C, D, E, F, A).
'resultbeat/5__2__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            K==E ->
            '$remove_constraint_internal_check_resultbeat/5'(L, O),
            (   O=yes ->
                '$delete_from_store_check_resultbeat/5'(L)
            ;   true
            ),
            'resultbeat/5__2__0'(N, A, B, C, D, E, F)
        ;   'resultbeat/5__2__0'(N, A, B, C, D, E, F)
        ).
'resultbeat/5__2'(A, B, C, D, E, F) :-
        'resultbeat/5__3'(A, B, C, D, E, F).
'resultbeat/5__3'(_, _, _, _, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resultbeat/5'(A, E),
        (   E=yes ->
            '$delete_from_store_resultbeat/5'(A)
        ;   true
        ).
'resultbeat/5__3'(_, _, _, _, _, A) :-
        '$activate_constraint_resultbeat/5'(_, A).
check_resultbeat(A, B, C, D, E) :-
        '$insert_constraint_internal_check_resultbeat/5'(F, A, B, C, D, E),
        '$insert_in_store_check_resultbeat/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'check_resultbeat/5__0'(A, B, C, D, E, F).
'check_resultbeat/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_resultbeat/5-12345'(k(A,B,C,D,E), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_check_resultbeat/5'(F, J),
        (   J=yes ->
            '$delete_from_store_check_resultbeat/5'(F)
        ;   true
        ).
'check_resultbeat/5__0'(A, B, C, D, E, F) :- !,
        '$remove_constraint_internal_check_resultbeat/5'(F, G),
        (   G=yes ->
            '$delete_from_store_check_resultbeat/5'(F)
        ;   true
        ),
        wfail(check_resultbeat_notfound(A,B,C,D,E)).
'check_resultbeat/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_check_resultbeat/5'(_, A).
resultmchord(A, B) :-
        '$insert_constraint_internal_resultmchord/2'(C, A, B),
        '$insert_in_store_resultmchord/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'resultmchord/2__0'(A, B, C).
'resultmchord/2__0'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:check/1', D), !,
        'resultmchord/2__0__0'(D, A, B, C).
'resultmchord/2__0__0'([], B, C, A) :-
        'resultmchord/2__1'(B, C, A).
'resultmchord/2__0__0'([E|I], A, B, C) :-
        (   E=suspension(_,H,_,_,D),
            H=mutable(active),
            D=mchord(F,G),
            F==A,
            G==B ->
            '$remove_constraint_internal_check/1'(E, J),
            (   J=yes ->
                '$delete_from_store_check/1'(E)
            ;   true
            ),
            debugwrite('DEBUG: '),
            debugwriteln('Simpagation rule with resultchord'),
            'resultmchord/2__0__0'(I, A, B, C)
        ;   'resultmchord/2__0__0'(I, A, B, C)
        ).
'resultmchord/2__0'(A, B, C) :-
        'resultmchord/2__1'(A, B, C).
'resultmchord/2__1'(_, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resultmchord/2'(A, E),
        (   E=yes ->
            '$delete_from_store_resultmchord/2'(A)
        ;   true
        ),
        debugwriteln('DEBUG: cleaning up resultmchord').
'resultmchord/2__1'(_, _, A) :-
        '$activate_constraint_resultmchord/2'(_, A).
resulttied(A, B, C, D) :-
        '$insert_constraint_internal_resulttied/4'(E, A, B, C, D),
        '$insert_in_store_resulttied/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'resulttied/4__0'(A, B, C, D, E).
'resulttied/4__0'(A, B, C, D, E) :-
        nb_getval('$chr_store_global_ground_user:check/1', F), !,
        'resulttied/4__0__0'(F, A, B, C, D, E).
'resulttied/4__0__0'([], B, C, D, E, A) :-
        'resulttied/4__1'(B, C, D, E, A).
'resulttied/4__0__0'([G|M], A, B, C, D, E) :-
        (   G=suspension(_,L,_,_,F),
            L=mutable(active),
            F=tied(H,I,J,K),
            H==A,
            I==B,
            J==C,
            K==D ->
            '$remove_constraint_internal_check/1'(G, N),
            (   N=yes ->
                '$delete_from_store_check/1'(G)
            ;   true
            ),
            'resulttied/4__0__0'(M, A, B, C, D, E)
        ;   'resulttied/4__0__0'(M, A, B, C, D, E)
        ).
'resulttied/4__0'(A, B, C, D, E) :-
        'resulttied/4__1'(A, B, C, D, E).
'resulttied/4__1'(_, _, _, _, A) :-
        nb_getval('$chr_store_global_ground_user:cleanup/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_resulttied/4'(A, E),
        (   E=yes ->
            '$delete_from_store_resulttied/4'(A)
        ;   true
        ).
'resulttied/4__1'(_, _, _, _, A) :-
        '$activate_constraint_resulttied/4'(_, A).
check(A) :-
        '$insert_constraint_internal_check/1'(B, A),
        '$insert_in_store_check/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'check/1__0'(A, B).
'check/1__0'(note(B,C,D,E,F), A) :-
        '$via1_multi_hash_resultnote/5-12345'(k(B,C,D,E,F), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, J),
        (   J=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ).
'check/1__0'(tied(B,C,D,E), A) :-
        '$via1_multi_hash_resulttied/4-1234'(k(B,C,D,E), G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, I),
        (   I=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ).
'check/1__0'(anote(B,C,D,E,F), A) :-
        '$via1_multi_hash_resultanote/5-12345'(k(B,C,D,E,F), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, J),
        (   J=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ).
'check/1__0'(octave(B,C,D,E,F), A) :-
        '$via1_multi_hash_resultoctave/5-12345'(k(B,C,D,E,F), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, J),
        (   J=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ).
'check/1__0'(mchord(B,C), A) :-
        '$via1_multi_hash_resultmchord/2-12'(k(B,C), E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_,_),
        F=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, G),
        (   G=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ),
        debugwrite('DEBUG: '),
        debugwriteln('Simpagation rule with resultchord').
'check/1__0'(beat(B,C,D,E,_), A) :-
        '$via1_multi_hash_resultbeat/5-1234'(k(B,C,D,E), G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_,_,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_check/1'(A, I),
        (   I=yes ->
            '$delete_from_store_check/1'(A)
        ;   true
        ).
'check/1__0'(A, B) :- !,
        '$remove_constraint_internal_check/1'(B, C),
        (   C=yes ->
            '$delete_from_store_check/1'(B)
        ;   true
        ),
        wfail(check_failed(A)).
'check/1__0'(_, A) :-
        '$activate_constraint_check/1'(_, A).
check2(A) :-
        '$insert_constraint_internal_check2/1'(B, A),
        '$insert_in_store_check2/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'check2/1__0'(A, B).
'check2/1__0'(beat(B,C,D,E,F), A) :-
        '$via1_multi_hash_resultbeat/5-1234'(k(B,C,D,E), I),
        'chr sbag_member'(G, I),
        G=suspension(_,J,_,_,_,_,_,_,H),
        J=mutable(active),
        H>=F, !,
        '$remove_constraint_internal_check2/1'(A, K),
        (   K=yes ->
            '$delete_from_store_check2/1'(A)
        ;   true
        ).
'check2/1__0'(A, B) :- !,
        '$remove_constraint_internal_check2/1'(B, C),
        (   C=yes ->
            '$delete_from_store_check2/1'(B)
        ;   true
        ),
        wfail(check_failed(A)).
'check2/1__0'(_, A) :-
        '$activate_constraint_check2/1'(_, A).
initial :-
        '$insert_constraint_internal_initial/0'(A),
        '$insert_in_store_initial/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'initial/0__0'(A).
'initial/0__0'(A) :- !,
        '$remove_constraint_internal_initial/0'(A, B),
        (   B=yes ->
            '$delete_from_store_initial/0'(A)
        ;   true
        ),
        phase(select_chords).
'initial/0__0'(A) :-
        '$activate_constraint_initial/0'(_, A).
measures(A) :-
        '$insert_constraint_internal_measures/1'(B, A),
        '$insert_in_store_measures/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'measures/1__0'(A, B).
'measures/1__0'(A, B) :- !,
        '$activate_constraint_measures/1'(_, B),
        debugwriteln('[MUSIC GENERATOR] startup'),
        make_measures(A),
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            'chr update_mutable'(inactive, C),
            'measures/1__1'(A, B)
        ;   true
        ).
'measures/1__1'(A, B) :-
        nb_getval('$chr_store_global_ground_user:meter/2', C), !,
        'measures/1__1__0'(C, A, B).
'measures/1__1__0'([], B, A) :-
        'measures/1__2'(B, A).
'measures/1__1__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,_,C),
            E=mutable(active),
            nb_getval('$chr_store_global_ground_user:phase/1', F) ->
            'measures/1__1__1'(F, C, D, G, B, A)
        ;   'measures/1__1__0'(G, B, A)
        ).
'measures/1__1__1'([], _, _, A, C, B) :-
        'measures/1__1__0'(A, C, B).
'measures/1__1__1'([G|K], E, A, B, D, C) :-
        (   G=suspension(_,I,_,_,F),
            I=mutable(active),
            F=split_beats(H),
            nb_getval('$chr_store_global_ground_user:shortest_duration/2', J) ->
            'measures/1__1__2'(J, H, G, K, E, A, B, D, C)
        ;   'measures/1__1__1'(K, E, A, B, D, C)
        ).
'measures/1__1__2'([], _, _, A, F, B, C, E, D) :-
        'measures/1__1__1'(A, F, B, C, E, D).
'measures/1__1__2'([K|N], H, A, B, G, C, D, F, E) :-
        (   K=suspension(_,L,_,_,I,J),
            L=mutable(active),
            '$via1_multi_hash_beat/5-12'(k(I,H), M) ->
            'measures/1__1__3'(M, I, J, K, N, H, A, B, G, C, D, F, E)
        ;   'measures/1__1__2'(N, H, A, B, G, C, D, F, E)
        ).
'measures/1__1__3'([], _, _, _, A, I, B, C, H, D, E, G, F) :-
        'measures/1__1__2'(A, I, B, C, H, D, E, G, F).
'measures/1__1__3'([R|U], K, L, A, B, J, C, D, I, E, F, H, G) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            M==K,
            N==J,
            '$via1_multi_hash_next_beat/7-1234'(k(K,J,O,P), T) ->
            'measures/1__1__4'(T, O, P, Q, R, U, K, L, A, B, J, C, D, I, E, F, H, G)
        ;   'measures/1__1__3'(U, K, L, A, B, J, C, D, I, E, F, H, G)
        ).
'measures/1__1__4'([], _, _, _, _, A, L, M, B, C, K, D, E, J, F, G, I, H) :-
        'measures/1__1__3'(A, L, M, B, C, K, D, E, J, F, G, I, H).
'measures/1__1__4'([Z|A1], O, P, Q, A, B, M, N, C, D, L, E, F, K, G, H, J, I) :-
        (   Z=suspension(_,Y,_,R,S,T,U,V,W,X),
            Y=mutable(active),
            R==M,
            S==L,
            T==O,
            U==P,
            H1=t(96,G,E,C,I,A,Z),
            '$novel_production'(G, H1),
            '$novel_production'(E, H1),
            '$novel_production'(C, H1),
            '$novel_production'(I, H1),
            '$novel_production'(A, H1),
            '$novel_production'(Z, H1),
            Q<N,
            L\==J,
            'chr lock'(M),
            'chr lock'(L),
            'chr lock'(O),
            'chr lock'(P),
            'chr lock'(Q),
            debugwriteln(considering_splitbeat(M,L,O,P,Q)),
            'chr unlock'(M),
            'chr unlock'(L),
            'chr unlock'(O),
            'chr unlock'(P),
            'chr unlock'(Q) ->
            '$extend_history'(I, H1),
            '$activate_constraint_measures/1'(_, I),
            msw(split_beat(M), B1),
            (   B1=1 ->
                (   '$remove_constraint_internal_beat/5'(A, E1),
                    (   E1=yes ->
                        '$delete_from_store_beat/5'(A)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(Z, F1),
                    (   F1=yes ->
                        '$delete_from_store_next_beat/7'(Z)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                C1 is Q*2,
                D1 is P+1/(C1/K),
                debugwriteln(doing_splitbeat(M,L,O,P,Q)),
                next_beat(M, L, O, P, L, O, D1),
                next_beat(M, L, O, D1, V, W, X),
                beat(M, L, O, P, C1),
                beat(M, L, O, D1, C1)
            ;   true
            ),
            (   I=suspension(_,G1,_,_,_),
                G1=mutable(active) ->
                'chr update_mutable'(inactive, G1),
                'measures/1__1__4'(A1, O, P, Q, A, B, M, N, C, D, L, E, F, K, G, H, J, I)
            ;   true
            )
        ;   'measures/1__1__4'(A1, O, P, Q, A, B, M, N, C, D, L, E, F, K, G, H, J, I)
        ).
'measures/1__1'(A, B) :-
        'measures/1__2'(A, B).
'measures/1__2'(A, B) :-
        nb_getval('$chr_store_global_ground_user:make_notes_measure/1', C), !,
        'measures/1__2__0'(C, A, B).
'measures/1__2__0'([], B, A) :-
        'measures/1__3'(B, A).
'measures/1__2__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_unspecified_successor/2-1'(C, I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,_,H),
            J=mutable(active) ->
            '$remove_constraint_internal_make_notes_measure/1'(D, K),
            (   K=yes ->
                '$delete_from_store_make_notes_measure/1'(D)
            ;   true
            ),
            '$activate_constraint_measures/1'(_, B),
            debugwrite('DEBUG: '),
            debugwriteln(make_notes_measure(H)),
            make_notes_measure(H),
            (   B=suspension(_,L,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'measures/1__2__0'(F, A, B)
            ;   true
            )
        ;   'measures/1__2__0'(F, A, B)
        ).
'measures/1__2'(A, B) :-
        'measures/1__3'(A, B).
'measures/1__3'(A, B) :-
        '$via1_multi_hash_abstract_beat/4-1'(A, C), !,
        'measures/1__3__0'(C, A, B).
'measures/1__3__0'([], B, A) :-
        'measures/1__4'(B, A).
'measures/1__3__0'([E|G], A, B) :-
        (   E=suspension(_,F,_,_,C,_,_,D),
            F=mutable(active),
            C==A ->
            '$remove_constraint_internal_abstract_beat/4'(E, H),
            (   H=yes ->
                '$delete_from_store_abstract_beat/4'(E)
            ;   true
            ),
            '$activate_constraint_measures/1'(_, B),
            D=first,
            (   B=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'measures/1__3__0'(G, A, B)
            ;   true
            )
        ;   'measures/1__3__0'(G, A, B)
        ).
'measures/1__3'(A, B) :-
        'measures/1__4'(A, B).
'measures/1__4'(A, B) :-
        nb_getval('$chr_store_global_ground_user:meter/2', C), !,
        'measures/1__4__0'(C, A, B).
'measures/1__4__0'([], B, A) :-
        'measures/1__5'(B, A).
'measures/1__4__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:write_notes/0', G) ->
            'measures/1__4__1'(G, C, D, E, H, B, A)
        ;   'measures/1__4__0'(H, B, A)
        ).
'measures/1__4__1'([], _, _, _, A, C, B) :-
        'measures/1__4__0'(A, C, B).
'measures/1__4__1'([G|J], E, F, A, B, D, C) :-
        (   G=suspension(_,H,_,_),
            H=mutable(active),
            nb_getval('$chr_store_global_ground_user:voice/1', I) ->
            'measures/1__4__2'(I, G, J, E, F, A, B, D, C)
        ;   'measures/1__4__1'(J, E, F, A, B, D, C)
        ).
'measures/1__4__2'([], _, A, F, G, B, C, E, D) :-
        'measures/1__4__1'(A, F, G, B, C, E, D).
'measures/1__4__2'([K|L], A, B, G, H, C, D, F, E) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            N=t(144,E,C,A,K),
            '$novel_production'(E, N),
            '$novel_production'(C, N),
            '$novel_production'(A, N),
            '$novel_production'(K, N) ->
            '$extend_history'(E, N),
            '$activate_constraint_measures/1'(_, E),
            voice_header(I),
            write('\\time '),
            write(G),
            write(/),
            write(H),
            nl,
            show(I, 1, F),
            maybe_close_bracket,
            writeln('}'),
            (   E=suspension(_,M,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'measures/1__4__2'(L, A, B, G, H, C, D, F, E)
            ;   true
            )
        ;   'measures/1__4__2'(L, A, B, G, H, C, D, F, E)
        ).
'measures/1__4'(A, B) :-
        'measures/1__5'(A, B).
'measures/1__5'(_, A) :-
        '$activate_constraint_measures/1'(_, A).
meter(A, B) :-
        '$insert_constraint_internal_meter/2'(C, A, B),
        '$insert_in_store_meter/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'meter/2__0'(A, B, C).
'meter/2__0'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:voice/1', D), !,
        'meter/2__0__0'(D, A, B, C).
'meter/2__0__0'([], B, C, A) :-
        'meter/2__1'(B, C, A).
'meter/2__0__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:measure/1', G) ->
            'meter/2__0__1'(G, D, E, H, B, C, A)
        ;   'meter/2__0__0'(H, B, C, A)
        ).
'meter/2__0__1'([], _, _, A, C, D, B) :-
        'meter/2__0__0'(A, C, D, B).
'meter/2__0__1'([H|K], F, A, B, D, E, C) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            '$via1_multi_hash_unspecified_measure/1-1'(G, J) ->
            'meter/2__0__2'(J, G, H, K, F, A, B, D, E, C)
        ;   'meter/2__0__1'(K, F, A, B, D, E, C)
        ).
'meter/2__0__2'([], _, _, A, G, B, C, E, F, D) :-
        'meter/2__0__1'(A, G, B, C, E, F, D).
'meter/2__0__2'([L|M], I, A, B, H, C, D, F, G, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J==I,
            O=t(92,E,C,A,L),
            '$novel_production'(E, O),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(L, O) ->
            '$extend_history'(E, O),
            '$activate_constraint_meter/2'(_, E),
            debugwriteln(make_beats(F,G,I,H)),
            make_beats(F, G, I, H),
            (   E=suspension(_,N,_,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'meter/2__0__2'(M, I, A, B, H, C, D, F, G, E)
            ;   true
            )
        ;   'meter/2__0__2'(M, I, A, B, H, C, D, F, G, E)
        ).
'meter/2__0'(A, B, C) :-
        'meter/2__1'(A, B, C).
'meter/2__1'(A, B, C) :-
        '$via1_multi_hash_next_beat/7-6'(A, D), !,
        'meter/2__1__0'(D, A, B, C).
'meter/2__1__0'([], B, C, A) :-
        'meter/2__2'(B, C, A).
'meter/2__1__0'([J|L], A, B, C) :-
        (   J=suspension(_,K,_,D,E,F,G,H,I,_),
            K=mutable(active),
            I==A,
            '$via1_multi_hash_next_measure/2-1'(H, O),
            'chr sbag_member'(M, O),
            M=suspension(_,P,_,_,N),
            P=mutable(active) ->
            '$remove_constraint_internal_next_beat/7'(J, Q),
            (   Q=yes ->
                '$delete_from_store_next_beat/7'(J)
            ;   true
            ),
            '$activate_constraint_meter/2'(_, C),
            next_beat(D, E, F, G, N, 0, 0),
            (   C=suspension(_,R,_,_,_,_),
                R=mutable(active) ->
                'chr update_mutable'(inactive, R),
                'meter/2__1__0'(L, A, B, C)
            ;   true
            )
        ;   'meter/2__1__0'(L, A, B, C)
        ).
'meter/2__1'(A, B, C) :-
        'meter/2__2'(A, B, C).
'meter/2__2'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:phase/1', D), !,
        'meter/2__2__0'(D, A, B, C).
'meter/2__2__0'([], B, C, A) :-
        'meter/2__3'(B, C, A).
'meter/2__2__0'([E|I], B, C, A) :-
        (   E=suspension(_,G,_,_,D),
            G=mutable(active),
            D=split_beats(F),
            nb_getval('$chr_store_global_ground_user:shortest_duration/2', H) ->
            'meter/2__2__1'(H, F, E, I, B, C, A)
        ;   'meter/2__2__0'(I, B, C, A)
        ).
'meter/2__2__1'([], _, _, A, C, D, B) :-
        'meter/2__2__0'(A, C, D, B).
'meter/2__2__1'([I|L], F, A, B, D, E, C) :-
        (   I=suspension(_,J,_,_,G,H),
            J=mutable(active),
            nb_getval('$chr_store_global_ground_user:measures/1', K) ->
            'meter/2__2__2'(K, G, H, I, L, F, A, B, D, E, C)
        ;   'meter/2__2__1'(L, F, A, B, D, E, C)
        ).
'meter/2__2__2'([], _, _, _, A, G, B, C, E, F, D) :-
        'meter/2__2__1'(A, G, B, C, E, F, D).
'meter/2__2__2'([L|O], I, J, A, B, H, C, D, F, G, E) :-
        (   L=suspension(_,M,_,_,K),
            M=mutable(active),
            '$via1_multi_hash_beat/5-12'(k(I,H), N) ->
            'meter/2__2__3'(N, K, L, O, I, J, A, B, H, C, D, F, G, E)
        ;   'meter/2__2__2'(O, I, J, A, B, H, C, D, F, G, E)
        ).
'meter/2__2__3'([], _, _, A, J, K, B, C, I, D, E, G, H, F) :-
        'meter/2__2__2'(A, J, K, B, C, I, D, E, G, H, F).
'meter/2__2__3'([S|V], M, A, B, K, L, C, D, J, E, F, H, I, G) :-
        (   S=suspension(_,T,_,_,N,O,P,Q,R),
            T=mutable(active),
            N==K,
            O==J,
            '$via1_multi_hash_next_beat/7-1234'(k(K,J,P,Q), U) ->
            'meter/2__2__4'(U, P, Q, R, S, V, M, A, B, K, L, C, D, J, E, F, H, I, G)
        ;   'meter/2__2__3'(V, M, A, B, K, L, C, D, J, E, F, H, I, G)
        ).
'meter/2__2__4'([], _, _, _, _, A, N, B, C, L, M, D, E, K, F, G, I, J, H) :-
        'meter/2__2__3'(A, N, B, C, L, M, D, E, K, F, G, I, J, H).
'meter/2__2__4'([A1|B1], P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, K, I) :-
        (   A1=suspension(_,Z,_,S,T,U,V,W,X,Y),
            Z=mutable(active),
            S==M,
            T==L,
            U==P,
            V==Q,
            I1=t(96,I,G,E,C,A,A1),
            '$novel_production'(I, I1),
            '$novel_production'(G, I1),
            '$novel_production'(E, I1),
            '$novel_production'(C, I1),
            '$novel_production'(A, I1),
            '$novel_production'(A1, I1),
            R<N,
            L\==O,
            'chr lock'(M),
            'chr lock'(L),
            'chr lock'(P),
            'chr lock'(Q),
            'chr lock'(R),
            debugwriteln(considering_splitbeat(M,L,P,Q,R)),
            'chr unlock'(M),
            'chr unlock'(L),
            'chr unlock'(P),
            'chr unlock'(Q),
            'chr unlock'(R) ->
            '$extend_history'(I, I1),
            '$activate_constraint_meter/2'(_, I),
            msw(split_beat(M), C1),
            (   C1=1 ->
                (   '$remove_constraint_internal_beat/5'(A, F1),
                    (   F1=yes ->
                        '$delete_from_store_beat/5'(A)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(A1, G1),
                    (   G1=yes ->
                        '$delete_from_store_next_beat/7'(A1)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                D1 is R*2,
                E1 is Q+1/(D1/K),
                debugwriteln(doing_splitbeat(M,L,P,Q,R)),
                next_beat(M, L, P, Q, L, P, E1),
                next_beat(M, L, P, E1, W, X, Y),
                beat(M, L, P, Q, D1),
                beat(M, L, P, E1, D1)
            ;   true
            ),
            (   I=suspension(_,H1,_,_,_,_),
                H1=mutable(active) ->
                'chr update_mutable'(inactive, H1),
                'meter/2__2__4'(B1, P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, K, I)
            ;   true
            )
        ;   'meter/2__2__4'(B1, P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, K, I)
        ).
'meter/2__2'(A, B, C) :-
        'meter/2__3'(A, B, C).
'meter/2__3'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:abstract_beat/4', D), !,
        'meter/2__3__0'(D, A, B, C).
'meter/2__3__0'([], B, C, A) :-
        'meter/2__4'(B, C, A).
'meter/2__3__0'([G|I], A, B, C) :-
        (   G=suspension(_,H,_,_,_,D,E,F),
            H=mutable(active) ->
            '$remove_constraint_internal_abstract_beat/4'(G, J),
            (   J=yes ->
                '$delete_from_store_abstract_beat/4'(G)
            ;   true
            ),
            '$activate_constraint_meter/2'(_, C),
            abstract_beat1(A, D, E, F),
            (   C=suspension(_,K,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'meter/2__3__0'(I, A, B, C)
            ;   true
            )
        ;   'meter/2__3__0'(I, A, B, C)
        ).
'meter/2__3'(A, B, C) :-
        'meter/2__4'(A, B, C).
'meter/2__4'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:measures/1', D), !,
        'meter/2__4__0'(D, A, B, C).
'meter/2__4__0'([], B, C, A) :-
        'meter/2__5'(B, C, A).
'meter/2__4__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:write_notes/0', G) ->
            'meter/2__4__1'(G, D, E, H, B, C, A)
        ;   'meter/2__4__0'(H, B, C, A)
        ).
'meter/2__4__1'([], _, _, A, C, D, B) :-
        'meter/2__4__0'(A, C, D, B).
'meter/2__4__1'([G|J], F, A, B, D, E, C) :-
        (   G=suspension(_,H,_,_),
            H=mutable(active),
            nb_getval('$chr_store_global_ground_user:voice/1', I) ->
            'meter/2__4__2'(I, G, J, F, A, B, D, E, C)
        ;   'meter/2__4__1'(J, F, A, B, D, E, C)
        ).
'meter/2__4__2'([], _, A, G, B, C, E, F, D) :-
        'meter/2__4__1'(A, G, B, C, E, F, D).
'meter/2__4__2'([K|L], A, B, H, C, D, F, G, E) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            N=t(144,C,E,A,K),
            '$novel_production'(C, N),
            '$novel_production'(E, N),
            '$novel_production'(A, N),
            '$novel_production'(K, N) ->
            '$extend_history'(E, N),
            '$activate_constraint_meter/2'(_, E),
            voice_header(I),
            write('\\time '),
            write(F),
            write(/),
            write(G),
            nl,
            show(I, 1, H),
            maybe_close_bracket,
            writeln('}'),
            (   E=suspension(_,M,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'meter/2__4__2'(L, A, B, H, C, D, F, G, E)
            ;   true
            )
        ;   'meter/2__4__2'(L, A, B, H, C, D, F, G, E)
        ).
'meter/2__4'(A, B, C) :-
        'meter/2__5'(A, B, C).
'meter/2__5'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:tempo_declaration/0', D), !,
        'meter/2__5__0'(D, A, B, C).
'meter/2__5__0'([], B, C, A) :-
        'meter/2__6'(B, C, A).
'meter/2__5__0'([D|F], A, B, C) :-
        (   D=suspension(_,E,_,_),
            E=mutable(active),
            nb_getval('$chr_store_global_ground_user:tempo/1', I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,H),
            J=mutable(active) ->
            '$remove_constraint_internal_tempo_declaration/0'(D, K),
            (   K=yes ->
                '$delete_from_store_tempo_declaration/0'(D)
            ;   true
            ),
            '$activate_constraint_meter/2'(_, C),
            format('  \\tempo ~w=~w\n', [B,H]),
            (   C=suspension(_,L,_,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'meter/2__5__0'(F, A, B, C)
            ;   true
            )
        ;   'meter/2__5__0'(F, A, B, C)
        ).
'meter/2__5'(A, B, C) :-
        'meter/2__6'(A, B, C).
'meter/2__6'(_, _, A) :-
        '$activate_constraint_meter/2'(_, A).
repeats(A) :-
        '$insert_constraint_internal_repeats/1'(B, A),
        '$insert_in_store_repeats/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'repeats/1__0'(A, B).
'repeats/1__0'(A, B) :-
        nb_getval('$chr_store_global_ground_user:voice_header/1', C), !,
        'repeats/1__0__0'(C, A, B).
'repeats/1__0__0'([], B, A) :-
        'repeats/1__1'(B, A).
'repeats/1__0__0'([D|E], B, A) :-
        (   D=suspension(_,C,_,_,_),
            C=mutable(active),
            F=t(165,A,D),
            '$novel_production'(A, F),
            '$novel_production'(D, F) ->
            '$extend_history'(A, F),
            write('  \\repeat unfold '),
            write(B),
            writeln(' {'),
            'repeats/1__0__0'(E, B, A)
        ;   'repeats/1__0__0'(E, B, A)
        ).
'repeats/1__0'(A, B) :-
        'repeats/1__1'(A, B).
'repeats/1__1'(A, B) :-
        nb_getval('$chr_store_global_ground_user:maybe_close_bracket/0', C), !,
        'repeats/1__1__0'(C, A, B).
'repeats/1__1__0'([], B, A) :-
        'repeats/1__2'(B, A).
'repeats/1__1__0'([C|E], A, B) :-
        (   C=suspension(_,D,_,_),
            D=mutable(active) ->
            '$remove_constraint_internal_maybe_close_bracket/0'(C, F),
            (   F=yes ->
                '$delete_from_store_maybe_close_bracket/0'(C)
            ;   true
            ),
            writeln('  }'),
            'repeats/1__1__0'(E, A, B)
        ;   'repeats/1__1__0'(E, A, B)
        ).
'repeats/1__1'(A, B) :-
        'repeats/1__2'(A, B).
'repeats/1__2'(_, A) :-
        '$activate_constraint_repeats/1'(_, A).
key(A) :-
        '$insert_constraint_internal_key/1'(B, A),
        '$insert_in_store_key/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'key/1__0'(A, B).
'key/1__0'(major, A) :-
        '$via1_multi_hash_chord_scheme/1-1'(a, B), !,
        'key/1__0__0'(B, major, A).
'key/1__0__0'([], B, A) :-
        'key/1__1'(B, A).
'key/1__0__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,C),
            E=mutable(active),
            C=a,
            '$via1_multi_hash_measure/1-1'(1, H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_chord_scheme/1'(D, J),
            (   J=yes ->
                '$delete_from_store_chord_scheme/1'(D)
            ;   true
            ),
            '$activate_constraint_key/1'(_, B),
            debugwriteln('dDEBUG: using first major progression'),
            mchord(1, c),
            mchord(2, f),
            mchord(3, c),
            mchord(4, c),
            mchord(5, f),
            mchord(6, f),
            mchord(7, c),
            mchord(8, c),
            mchord(9, g),
            mchord(10, f),
            mchord(11, c),
            mchord(12, g),
            mchord(13, c),
            theme_boundary(u, 0),
            theme_boundary(a, 2),
            theme_boundary(a, 4),
            theme_boundary(a, 6),
            theme_boundary(u, 8),
            (   B=suspension(_,K,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'key/1__0__0'(F, A, B)
            ;   true
            )
        ;   'key/1__0__0'(F, A, B)
        ).
'key/1__0'(A, B) :-
        'key/1__1'(A, B).
'key/1__1'(minor, A) :-
        '$via1_multi_hash_chord_scheme/1-1'(a, B), !,
        'key/1__1__0'(B, minor, A).
'key/1__1__0'([], B, A) :-
        'key/1__2'(B, A).
'key/1__1__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,C),
            E=mutable(active),
            C=a,
            '$via1_multi_hash_measure/1-1'(1, H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_chord_scheme/1'(D, J),
            (   J=yes ->
                '$delete_from_store_chord_scheme/1'(D)
            ;   true
            ),
            '$activate_constraint_key/1'(_, B),
            debugwriteln('DEBUG: using first minor progression'),
            theme_boundary(u, 0),
            theme_boundary(a, 2),
            theme_boundary(a, 4),
            theme_boundary(a, 6),
            theme_boundary(u, 8),
            mchord(1, am),
            mchord(2, dm),
            mchord(3, am),
            mchord(4, am),
            mchord(5, dm),
            mchord(6, dm),
            mchord(7, am),
            mchord(8, am),
            mchord(9, em),
            mchord(10, dm),
            mchord(11, am),
            mchord(12, am),
            mchord(13, am),
            (   B=suspension(_,K,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'key/1__1__0'(F, A, B)
            ;   true
            )
        ;   'key/1__1__0'(F, A, B)
        ).
'key/1__1'(A, B) :-
        'key/1__2'(A, B).
'key/1__2'(_, A) :-
        '$activate_constraint_key/1'(_, A).
shortest_duration(A, B) :-
        '$insert_constraint_internal_shortest_duration/2'(C, A, B),
        '$insert_in_store_shortest_duration/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'shortest_duration/2__0'(A, B, C).
'shortest_duration/2__0'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:meter/2', D), !,
        'shortest_duration/2__0__0'(D, A, B, C).
'shortest_duration/2__0__0'([], B, C, A) :-
        'shortest_duration/2__1'(B, C, A).
'shortest_duration/2__0__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,_,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:phase/1', G) ->
            'shortest_duration/2__0__1'(G, D, E, H, B, C, A)
        ;   'shortest_duration/2__0__0'(H, B, C, A)
        ).
'shortest_duration/2__0__1'([], _, _, A, C, D, B) :-
        'shortest_duration/2__0__0'(A, C, D, B).
'shortest_duration/2__0__1'([H|L], F, A, B, D, E, C) :-
        (   H=suspension(_,J,_,_,G),
            J=mutable(active),
            G=split_beats(I),
            nb_getval('$chr_store_global_ground_user:measures/1', K) ->
            'shortest_duration/2__0__2'(K, I, H, L, F, A, B, D, E, C)
        ;   'shortest_duration/2__0__1'(L, F, A, B, D, E, C)
        ).
'shortest_duration/2__0__2'([], _, _, A, G, B, C, E, F, D) :-
        'shortest_duration/2__0__1'(A, G, B, C, E, F, D).
'shortest_duration/2__0__2'([K|N], I, A, B, H, C, D, F, G, E) :-
        (   K=suspension(_,L,_,_,J),
            L=mutable(active),
            '$via1_multi_hash_beat/5-12'(k(F,I), M) ->
            'shortest_duration/2__0__3'(M, J, K, N, I, A, B, H, C, D, F, G, E)
        ;   'shortest_duration/2__0__2'(N, I, A, B, H, C, D, F, G, E)
        ).
'shortest_duration/2__0__3'([], _, _, A, J, B, C, I, D, E, G, H, F) :-
        'shortest_duration/2__0__2'(A, J, B, C, I, D, E, G, H, F).
'shortest_duration/2__0__3'([R|U], L, A, B, K, C, D, J, E, F, H, I, G) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            M==H,
            N==K,
            '$via1_multi_hash_next_beat/7-1234'(k(H,K,O,P), T) ->
            'shortest_duration/2__0__4'(T, O, P, Q, R, U, L, A, B, K, C, D, J, E, F, H, I, G)
        ;   'shortest_duration/2__0__3'(U, L, A, B, K, C, D, J, E, F, H, I, G)
        ).
'shortest_duration/2__0__4'([], _, _, _, _, A, M, B, C, L, D, E, K, F, G, I, J, H) :-
        'shortest_duration/2__0__3'(A, M, B, C, L, D, E, K, F, G, I, J, H).
'shortest_duration/2__0__4'([Z|A1], O, P, Q, A, B, N, C, D, M, E, F, L, G, H, J, K, I) :-
        (   Z=suspension(_,Y,_,R,S,T,U,V,W,X),
            Y=mutable(active),
            R==J,
            S==M,
            T==O,
            U==P,
            H1=t(96,G,E,I,C,A,Z),
            '$novel_production'(G, H1),
            '$novel_production'(E, H1),
            '$novel_production'(I, H1),
            '$novel_production'(C, H1),
            '$novel_production'(A, H1),
            '$novel_production'(Z, H1),
            Q<K,
            M\==N,
            'chr lock'(J),
            'chr lock'(M),
            'chr lock'(O),
            'chr lock'(P),
            'chr lock'(Q),
            debugwriteln(considering_splitbeat(J,M,O,P,Q)),
            'chr unlock'(J),
            'chr unlock'(M),
            'chr unlock'(O),
            'chr unlock'(P),
            'chr unlock'(Q) ->
            '$extend_history'(I, H1),
            '$activate_constraint_shortest_duration/2'(_, I),
            msw(split_beat(J), B1),
            (   B1=1 ->
                (   '$remove_constraint_internal_beat/5'(A, E1),
                    (   E1=yes ->
                        '$delete_from_store_beat/5'(A)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(Z, F1),
                    (   F1=yes ->
                        '$delete_from_store_next_beat/7'(Z)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                C1 is Q*2,
                D1 is P+1/(C1/L),
                debugwriteln(doing_splitbeat(J,M,O,P,Q)),
                next_beat(J, M, O, P, M, O, D1),
                next_beat(J, M, O, D1, V, W, X),
                beat(J, M, O, P, C1),
                beat(J, M, O, D1, C1)
            ;   true
            ),
            (   I=suspension(_,G1,_,_,_,_),
                G1=mutable(active) ->
                'chr update_mutable'(inactive, G1),
                'shortest_duration/2__0__4'(A1, O, P, Q, A, B, N, C, D, M, E, F, L, G, H, J, K, I)
            ;   true
            )
        ;   'shortest_duration/2__0__4'(A1, O, P, Q, A, B, N, C, D, M, E, F, L, G, H, J, K, I)
        ).
'shortest_duration/2__0'(A, B, C) :-
        'shortest_duration/2__1'(A, B, C).
'shortest_duration/2__1'(_, _, A) :-
        '$activate_constraint_shortest_duration/2'(_, A).
tempo(A) :-
        '$insert_constraint_internal_tempo/1'(B, A),
        '$insert_in_store_tempo/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'tempo/1__0'(A, B).
'tempo/1__0'(A, B) :-
        nb_getval('$chr_store_global_ground_user:tempo_declaration/0', C), !,
        'tempo/1__0__0'(C, A, B).
'tempo/1__0__0'([], B, A) :-
        'tempo/1__1'(B, A).
'tempo/1__0__0'([C|E], A, B) :-
        (   C=suspension(_,D,_,_),
            D=mutable(active),
            nb_getval('$chr_store_global_ground_user:meter/2', H),
            'chr sbag_member'(F, H),
            F=suspension(_,I,_,_,_,G),
            I=mutable(active) ->
            '$remove_constraint_internal_tempo_declaration/0'(C, J),
            (   J=yes ->
                '$delete_from_store_tempo_declaration/0'(C)
            ;   true
            ),
            format('  \\tempo ~w=~w\n', [G,A]),
            'tempo/1__0__0'(E, A, B)
        ;   'tempo/1__0__0'(E, A, B)
        ).
'tempo/1__0'(A, B) :-
        'tempo/1__1'(A, B).
'tempo/1__1'(_, A) :-
        '$activate_constraint_tempo/1'(_, A).
voice(A) :-
        '$insert_constraint_internal_voice/1'(B, A),
        '$insert_in_store_voice/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'voice/1__0'(A, B).
'voice/1__0'(A, B) :-
        nb_getval('$chr_store_global_ground_user:meter/2', C), !,
        'voice/1__0__0'(C, A, B).
'voice/1__0__0'([], B, A) :-
        'voice/1__1'(B, A).
'voice/1__0__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:measure/1', G) ->
            'voice/1__0__1'(G, C, D, E, H, B, A)
        ;   'voice/1__0__0'(H, B, A)
        ).
'voice/1__0__1'([], _, _, _, A, C, B) :-
        'voice/1__0__0'(A, C, B).
'voice/1__0__1'([H|K], E, F, A, B, D, C) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            '$via1_multi_hash_unspecified_measure/1-1'(G, J) ->
            'voice/1__0__2'(J, G, H, K, E, F, A, B, D, C)
        ;   'voice/1__0__1'(K, E, F, A, B, D, C)
        ).
'voice/1__0__2'([], _, _, A, F, G, B, C, E, D) :-
        'voice/1__0__1'(A, F, G, B, C, E, D).
'voice/1__0__2'([L|M], I, A, B, G, H, C, D, F, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J==I,
            N=t(92,C,E,A,L),
            '$novel_production'(C, N),
            '$novel_production'(E, N),
            '$novel_production'(A, N),
            '$novel_production'(L, N) ->
            '$extend_history'(E, N),
            debugwriteln(make_beats(G,H,I,F)),
            make_beats(G, H, I, F),
            'voice/1__0__2'(M, I, A, B, G, H, C, D, F, E)
        ;   'voice/1__0__2'(M, I, A, B, G, H, C, D, F, E)
        ).
'voice/1__0'(A, B) :-
        'voice/1__1'(A, B).
'voice/1__1'(A, B) :-
        '$via1_multi_hash_max_repeat/2-1'(A, C), !,
        'voice/1__1__0'(C, A, B).
'voice/1__1__0'([], B, A) :-
        'voice/1__2'(B, A).
'voice/1__1__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C,_),
            D=mutable(active),
            C==B,
            G=t(100,E,A),
            '$novel_production'(E, G),
            '$novel_production'(A, G) ->
            '$extend_history'(A, G),
            same_note_counter(B, 1, 0, 0, 0),
            'voice/1__1__0'(F, B, A)
        ;   'voice/1__1__0'(F, B, A)
        ).
'voice/1__1'(A, B) :-
        'voice/1__2'(A, B).
'voice/1__2'(A, B) :-
        nb_getval('$chr_store_global_ground_user:measures/1', C), !,
        'voice/1__2__0'(C, A, B).
'voice/1__2__0'([], B, A) :-
        'voice/1__3'(B, A).
'voice/1__2__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            nb_getval('$chr_store_global_ground_user:meter/2', F) ->
            'voice/1__2__1'(F, C, D, G, B, A)
        ;   'voice/1__2__0'(G, B, A)
        ).
'voice/1__2__1'([], _, _, A, C, B) :-
        'voice/1__2__0'(A, C, B).
'voice/1__2__1'([H|K], E, A, B, D, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            nb_getval('$chr_store_global_ground_user:write_notes/0', J) ->
            'voice/1__2__2'(J, F, G, H, K, E, A, B, D, C)
        ;   'voice/1__2__1'(K, E, A, B, D, C)
        ).
'voice/1__2__2'([], _, _, _, A, F, B, C, E, D) :-
        'voice/1__2__1'(A, F, B, C, E, D).
'voice/1__2__2'([K|L], H, I, A, B, G, C, D, F, E) :-
        (   K=suspension(_,J,_,_),
            J=mutable(active),
            M=t(144,C,A,K,E),
            '$novel_production'(C, M),
            '$novel_production'(A, M),
            '$novel_production'(K, M),
            '$novel_production'(E, M) ->
            '$extend_history'(E, M),
            voice_header(F),
            write('\\time '),
            write(H),
            write(/),
            write(I),
            nl,
            show(F, 1, G),
            maybe_close_bracket,
            writeln('}'),
            'voice/1__2__2'(L, H, I, A, B, G, C, D, F, E)
        ;   'voice/1__2__2'(L, H, I, A, B, G, C, D, F, E)
        ).
'voice/1__2'(A, B) :-
        'voice/1__3'(A, B).
'voice/1__3'(A, B) :-
        nb_getval('$chr_store_global_ground_user:show_voice_footers/0', C), !,
        'voice/1__3__0'(C, A, B).
'voice/1__3__0'([], B, A) :-
        'voice/1__4'(B, A).
'voice/1__3__0'([D|E], B, A) :-
        (   D=suspension(_,C,_,_),
            C=mutable(active),
            F=t(175,D,A),
            '$novel_production'(D, F),
            '$novel_production'(A, F) ->
            '$extend_history'(A, F),
            voice_footer(B),
            'voice/1__3__0'(E, B, A)
        ;   'voice/1__3__0'(E, B, A)
        ).
'voice/1__3'(A, B) :-
        'voice/1__4'(A, B).
'voice/1__4'(_, A) :-
        '$activate_constraint_voice/1'(_, A).
range(A, B, C, D, E) :-
        '$insert_constraint_internal_range/5'(F, A, B, C, D, E),
        '$insert_in_store_range/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'range/5__0'(A, B, C, D, E, F).
'range/5__0'(A, B, C, D, E, F) :- !,
        '$activate_constraint_range/5'(_, F),
        G is(C+E)//2,
        octave(A, 1, 0, 0, G),
        (   F=suspension(_,H,_,_,_,_,_,_),
            H=mutable(active) ->
            'chr update_mutable'(inactive, H),
            'range/5__1'(A, B, C, D, E, F)
        ;   true
        ).
'range/5__1'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-1'(A, G), !,
        'range/5__1__0'(G, A, B, C, D, E, F).
'range/5__1__0'([], B, C, D, E, F, A) :-
        'range/5__2'(B, C, D, E, F, A).
'range/5__1__0'([I|K], A, B, C, D, E, F) :-
        (   I=suspension(_,J,_,G,_,_,_,H),
            J=mutable(active),
            G==A,
            H<C ->
            '$remove_constraint_internal_octave_rangecheck/5'(I, L),
            (   L=yes ->
                '$delete_from_store_octave_rangecheck/5'(I)
            ;   true
            ),
            '$activate_constraint_range/5'(_, F),
            wfail(lowO),
            (   F=suspension(_,M,_,_,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'range/5__1__0'(K, A, B, C, D, E, F)
            ;   true
            )
        ;   'range/5__1__0'(K, A, B, C, D, E, F)
        ).
'range/5__1'(A, B, C, D, E, F) :-
        'range/5__2'(A, B, C, D, E, F).
'range/5__2'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-1'(A, G), !,
        'range/5__2__0'(G, A, B, C, D, E, F).
'range/5__2__0'([], B, C, D, E, F, A) :-
        'range/5__3'(B, C, D, E, F, A).
'range/5__2__0'([I|K], A, B, C, D, E, F) :-
        (   I=suspension(_,J,_,G,_,_,_,H),
            J=mutable(active),
            G==A,
            H>E ->
            '$remove_constraint_internal_octave_rangecheck/5'(I, L),
            (   L=yes ->
                '$delete_from_store_octave_rangecheck/5'(I)
            ;   true
            ),
            '$activate_constraint_range/5'(_, F),
            wfail(highO),
            (   F=suspension(_,M,_,_,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'range/5__2__0'(K, A, B, C, D, E, F)
            ;   true
            )
        ;   'range/5__2__0'(K, A, B, C, D, E, F)
        ).
'range/5__2'(A, B, C, D, E, F) :-
        'range/5__3'(A, B, C, D, E, F).
'range/5__3'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-15'(k(A,C), G), !,
        'range/5__3__0'(G, A, B, C, D, E, F).
'range/5__3__0'([], B, C, D, E, F, A) :-
        'range/5__4'(B, C, D, E, F, A).
'range/5__3__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            K==C,
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,_,_,_,P),
            R=mutable(active),
            P\==r,
            note_below(P, B) ->
            '$remove_constraint_internal_octave_rangecheck/5'(L, S),
            (   S=yes ->
                '$delete_from_store_octave_rangecheck/5'(L)
            ;   true
            ),
            '$activate_constraint_range/5'(_, F),
            wfail(low),
            (   F=suspension(_,T,_,_,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'range/5__3__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'range/5__3__0'(N, A, B, C, D, E, F)
        ).
'range/5__3'(A, B, C, D, E, F) :-
        'range/5__4'(A, B, C, D, E, F).
'range/5__4'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-15'(k(A,E), G), !,
        'range/5__4__0'(G, A, B, C, D, E, F).
'range/5__4__0'([], B, C, D, E, F, A) :-
        'range/5__5'(B, C, D, E, F, A).
'range/5__4__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            K==E,
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,_,_,_,P),
            R=mutable(active),
            P\==r,
            note_above(P, D) ->
            '$remove_constraint_internal_octave_rangecheck/5'(L, S),
            (   S=yes ->
                '$delete_from_store_octave_rangecheck/5'(L)
            ;   true
            ),
            '$activate_constraint_range/5'(_, F),
            wfail(high),
            (   F=suspension(_,T,_,_,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'range/5__4__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'range/5__4__0'(N, A, B, C, D, E, F)
        ).
'range/5__4'(A, B, C, D, E, F) :-
        'range/5__5'(A, B, C, D, E, F).
'range/5__5'(A, B, C, D, E, F) :-
        '$via1_multi_hash_find_octave_d/5-1'(A, G), !,
        'range/5__5__0'(G, A, B, C, D, E, F).
'range/5__5__0'([], B, C, D, E, F, A) :-
        'range/5__6'(B, C, D, E, F, A).
'range/5__5__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A ->
            '$remove_constraint_internal_find_octave_d/5'(L, O),
            (   O=yes ->
                '$delete_from_store_find_octave_d/5'(L)
            ;   true
            ),
            '$activate_constraint_range/5'(_, F),
            octave_compare(C, K, E, P),
            soft_msw(octave_choice(P), Q),
            debugwriteln(octave_choice(P,Q)),
            octave_d(A, H, I, J, Q),
            (   F=suspension(_,R,_,_,_,_,_,_),
                R=mutable(active) ->
                'chr update_mutable'(inactive, R),
                'range/5__5__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'range/5__5__0'(N, A, B, C, D, E, F)
        ).
'range/5__5'(A, B, C, D, E, F) :-
        'range/5__6'(A, B, C, D, E, F).
'range/5__6'(_, _, _, _, _, A) :-
        '$activate_constraint_range/5'(_, A).
max_jump(A, B) :-
        '$insert_constraint_internal_max_jump/2'(C, A, B),
        '$insert_in_store_max_jump/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'max_jump/2__0'(A, B, C).
'max_jump/2__0'(A, B, C) :-
        '$via1_multi_hash_octave/5-1'(A, D), !,
        'max_jump/2__0__0'(D, A, B, C).
'max_jump/2__0__0'([], B, C, A) :-
        'max_jump/2__1'(B, C, A).
'max_jump/2__0__0'([I|K], A, B, C) :-
        (   I=suspension(_,J,_,_,D,E,F,G,H),
            J=mutable(active),
            D==A,
            '$via1_multi_hash_phase/1-1'(make_notes, M),
            'chr sbag_member'(L, M),
            L=suspension(_,N,_,_,_),
            N=mutable(active),
            '$via1_multi_hash_octave/5-1'(A, T),
            'chr sbag_member'(O, T),
            O=suspension(_,U,_,_,_,P,Q,R,S),
            U=mutable(active),
            O\==I,
            '$via1_multi_hash_note/5-1234'(k(A,P,Q,R), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,E,F,G), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(A,P,Q,R,E,F,G), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, S, A1, H, H1),
            H1>B ->
            '$remove_constraint_internal_octave/5'(I, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(I)
            ;   true
            ),
            wfail(jumpup(H1)),
            'max_jump/2__0__0'(K, A, B, C)
        ;   'max_jump/2__0__0'(K, A, B, C)
        ).
'max_jump/2__0'(A, B, C) :-
        'max_jump/2__1'(A, B, C).
'max_jump/2__1'(A, B, C) :-
        '$via1_multi_hash_octave/5-1'(A, D), !,
        'max_jump/2__1__0'(D, A, B, C).
'max_jump/2__1__0'([], B, C, A) :-
        'max_jump/2__2'(B, C, A).
'max_jump/2__1__0'([I|K], A, B, C) :-
        (   I=suspension(_,J,_,_,D,E,F,G,H),
            J=mutable(active),
            D==A,
            '$via1_multi_hash_phase/1-1'(make_notes, M),
            'chr sbag_member'(L, M),
            L=suspension(_,N,_,_,_),
            N=mutable(active),
            '$via1_multi_hash_octave/5-1'(A, T),
            'chr sbag_member'(O, T),
            O=suspension(_,U,_,_,_,P,Q,R,S),
            U=mutable(active),
            O\==I,
            '$via1_multi_hash_note/5-1234'(k(A,P,Q,R), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,E,F,G), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(A,P,Q,R,E,F,G), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, S, A1, H, H1),
            H1< -B ->
            '$remove_constraint_internal_octave/5'(I, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(I)
            ;   true
            ),
            wfail(jumpdown(H1)),
            'max_jump/2__1__0'(K, A, B, C)
        ;   'max_jump/2__1__0'(K, A, B, C)
        ).
'max_jump/2__1'(A, B, C) :-
        'max_jump/2__2'(A, B, C).
'max_jump/2__2'(_, _, A) :-
        '$activate_constraint_max_jump/2'(_, A).
instrument(A, B) :-
        '$insert_constraint_internal_instrument/2'(C, A, B),
        '$insert_in_store_instrument/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'instrument/2__0'(A, B, C).
'instrument/2__0'(melody, A, B) :-
        '$via1_multi_hash_voice_footer/1-1'(melody, C), !,
        'instrument/2__0__0'(C, melody, A, B).
'instrument/2__0__0'([], B, C, A) :-
        'instrument/2__1'(B, C, A).
'instrument/2__0__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,D),
            F=mutable(active),
            D=melody ->
            '$remove_constraint_internal_voice_footer/1'(E, H),
            (   H=yes ->
                '$delete_from_store_voice_footer/1'(E)
            ;   true
            ),
            write('    \\new Staff \\with {midiInstrument = #"'),
            write(B),
            writeln('"} \\Melody'),
            'instrument/2__0__0'(G, A, B, C)
        ;   'instrument/2__0__0'(G, A, B, C)
        ).
'instrument/2__0'(A, B, C) :-
        'instrument/2__1'(A, B, C).
'instrument/2__1'(chords, A, B) :-
        '$via1_multi_hash_voice_footer/1-1'(chords, C), !,
        'instrument/2__1__0'(C, chords, A, B).
'instrument/2__1__0'([], B, C, A) :-
        'instrument/2__2'(B, C, A).
'instrument/2__1__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,D),
            F=mutable(active),
            D=chords ->
            '$remove_constraint_internal_voice_footer/1'(E, H),
            (   H=yes ->
                '$delete_from_store_voice_footer/1'(E)
            ;   true
            ),
            write('    \\new Staff \\with {midiInstrument = #"'),
            write(B),
            writeln('"} \\Chords'),
            'instrument/2__1__0'(G, A, B, C)
        ;   'instrument/2__1__0'(G, A, B, C)
        ).
'instrument/2__1'(A, B, C) :-
        'instrument/2__2'(A, B, C).
'instrument/2__2'(bass, A, B) :-
        '$via1_multi_hash_voice_footer/1-1'(bass, C), !,
        'instrument/2__2__0'(C, bass, A, B).
'instrument/2__2__0'([], B, C, A) :-
        'instrument/2__3'(B, C, A).
'instrument/2__2__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,D),
            F=mutable(active),
            D=bass ->
            '$remove_constraint_internal_voice_footer/1'(E, H),
            (   H=yes ->
                '$delete_from_store_voice_footer/1'(E)
            ;   true
            ),
            write('    \\new Staff \\with {midiInstrument = #"'),
            write(B),
            writeln('"} \\Bass'),
            'instrument/2__2__0'(G, A, B, C)
        ;   'instrument/2__2__0'(G, A, B, C)
        ).
'instrument/2__2'(A, B, C) :-
        'instrument/2__3'(A, B, C).
'instrument/2__3'(_, _, A) :-
        '$activate_constraint_instrument/2'(_, A).
chord_style(A) :-
        '$insert_constraint_internal_chord_style/1'(B, A),
        '$insert_in_store_chord_style/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'chord_style/1__0'(A, B).
'chord_style/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(make_notes, C), !,
        'chord_style/1__0__0'(C, A, B).
'chord_style/1__0__0'([], B, A) :-
        'chord_style/1__1'(B, A).
'chord_style/1__0__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=make_notes,
            '$via1_multi_hash_beat/5-1'(chords, F) ->
            'chord_style/1__0__1'(F, D, G, B, A)
        ;   'chord_style/1__0__0'(G, B, A)
        ).
'chord_style/1__0__1'([], _, A, C, B) :-
        'chord_style/1__0__0'(A, C, B).
'chord_style/1__0__1'([I|L], A, B, D, C) :-
        (   I=suspension(_,J,_,_,E,F,G,H,_),
            J=mutable(active),
            E=chords,
            '$via1_multi_hash_mchord/2-1'(F, K) ->
            'chord_style/1__0__2'(K, F, G, H, I, L, A, B, D, C)
        ;   'chord_style/1__0__1'(L, A, B, D, C)
        ).
'chord_style/1__0__2'([], _, _, _, _, A, B, C, E, D) :-
        'chord_style/1__0__1'(A, B, C, E, D).
'chord_style/1__0__2'([L|O], G, H, I, A, B, C, D, F, E) :-
        (   L=suspension(_,M,_,_,J,K),
            M=mutable(active),
            J==G,
            '$via1_multi_hash_unspecified_measure/1-1'(G, N) ->
            'chord_style/1__0__3'(N, K, L, O, G, H, I, A, B, C, D, F, E)
        ;   'chord_style/1__0__2'(O, G, H, I, A, B, C, D, F, E)
        ).
'chord_style/1__0__3'([], _, _, A, H, I, J, B, C, D, E, G, F) :-
        'chord_style/1__0__2'(A, H, I, J, B, C, D, E, G, F).
'chord_style/1__0__3'([O|P], L, A, B, I, J, K, C, D, E, F, H, G) :-
        (   O=suspension(_,N,_,_,M),
            N=mutable(active),
            M==I,
            S=t(121,E,G,C,A,O),
            '$novel_production'(E, S),
            '$novel_production'(G, S),
            '$novel_production'(C, S),
            '$novel_production'(A, S),
            '$novel_production'(O, S) ->
            '$extend_history'(G, S),
            abstract_beat(I, J, K, Q),
            msw(chord_type(H,Q), R),
            debugwrite('DEBUG: making notes: '),
            debugwriteln(mchord(I,L)),
            debugwriteln(msw(chord_type(H,Q),R)),
            chord(L, I, J, K, R),
            'chord_style/1__0__3'(P, L, A, B, I, J, K, C, D, E, F, H, G)
        ;   'chord_style/1__0__3'(P, L, A, B, I, J, K, C, D, E, F, H, G)
        ).
'chord_style/1__0'(A, B) :-
        'chord_style/1__1'(A, B).
'chord_style/1__1'(_, A) :-
        '$activate_constraint_chord_style/1'(_, A).
max_repeat(A, B) :-
        '$insert_constraint_internal_max_repeat/2'(C, A, B),
        '$insert_in_store_max_repeat/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'max_repeat/2__0'(A, B, C).
'max_repeat/2__0'(A, B, C) :-
        '$via1_multi_hash_voice/1-1'(A, D), !,
        'max_repeat/2__0__0'(D, A, B, C).
'max_repeat/2__0__0'([], B, C, A) :-
        'max_repeat/2__1'(B, C, A).
'max_repeat/2__0__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D==B,
            I=t(100,A,F),
            '$novel_production'(A, I),
            '$novel_production'(F, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_max_repeat/2'(_, A),
            same_note_counter(B, 1, 0, 0, 0),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'max_repeat/2__0__0'(G, B, C, A)
            ;   true
            )
        ;   'max_repeat/2__0__0'(G, B, C, A)
        ).
'max_repeat/2__0'(A, B, C) :-
        'max_repeat/2__1'(A, B, C).
'max_repeat/2__1'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(make_notes, E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_),
        F=mutable(active),
        '$via1_multi_hash_same_note_counter/5-15'(k(A,B), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_phase/1'(D, J),
        (   J=yes ->
            '$delete_from_store_phase/1'(D)
        ;   true
        ),
        '$remove_constraint_internal_same_note_counter/5'(G, K),
        (   K=yes ->
            '$delete_from_store_same_note_counter/5'(G)
        ;   true
        ),
        '$remove_constraint_internal_max_repeat/2'(C, L),
        (   L=yes ->
            '$delete_from_store_max_repeat/2'(C)
        ;   true
        ),
        wfail(repeat(A,B)).
'max_repeat/2__1'(_, _, A) :-
        '$activate_constraint_max_repeat/2'(_, A).
measure(A) :-
        '$insert_constraint_internal_measure/1'(B, A),
        '$insert_in_store_measure/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'measure/1__0'(A, B).
'measure/1__0'(1, A) :-
        '$via1_multi_hash_chord_scheme/1-1'(a, B), !,
        'measure/1__0__0'(B, 1, A).
'measure/1__0__0'([], B, A) :-
        'measure/1__1'(B, A).
'measure/1__0__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,C),
            E=mutable(active),
            C=a,
            '$via1_multi_hash_key/1-1'(major, H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_chord_scheme/1'(D, J),
            (   J=yes ->
                '$delete_from_store_chord_scheme/1'(D)
            ;   true
            ),
            '$activate_constraint_measure/1'(_, B),
            debugwriteln('dDEBUG: using first major progression'),
            mchord(1, c),
            mchord(2, f),
            mchord(3, c),
            mchord(4, c),
            mchord(5, f),
            mchord(6, f),
            mchord(7, c),
            mchord(8, c),
            mchord(9, g),
            mchord(10, f),
            mchord(11, c),
            mchord(12, g),
            mchord(13, c),
            theme_boundary(u, 0),
            theme_boundary(a, 2),
            theme_boundary(a, 4),
            theme_boundary(a, 6),
            theme_boundary(u, 8),
            (   B=suspension(_,K,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'measure/1__0__0'(F, A, B)
            ;   true
            )
        ;   'measure/1__0__0'(F, A, B)
        ).
'measure/1__0'(A, B) :-
        'measure/1__1'(A, B).
'measure/1__1'(1, A) :-
        '$via1_multi_hash_chord_scheme/1-1'(a, B), !,
        'measure/1__1__0'(B, 1, A).
'measure/1__1__0'([], B, A) :-
        'measure/1__2'(B, A).
'measure/1__1__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,C),
            E=mutable(active),
            C=a,
            '$via1_multi_hash_key/1-1'(minor, H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_chord_scheme/1'(D, J),
            (   J=yes ->
                '$delete_from_store_chord_scheme/1'(D)
            ;   true
            ),
            '$activate_constraint_measure/1'(_, B),
            debugwriteln('DEBUG: using first minor progression'),
            theme_boundary(u, 0),
            theme_boundary(a, 2),
            theme_boundary(a, 4),
            theme_boundary(a, 6),
            theme_boundary(u, 8),
            mchord(1, am),
            mchord(2, dm),
            mchord(3, am),
            mchord(4, am),
            mchord(5, dm),
            mchord(6, dm),
            mchord(7, am),
            mchord(8, am),
            mchord(9, em),
            mchord(10, dm),
            mchord(11, am),
            mchord(12, am),
            mchord(13, am),
            (   B=suspension(_,K,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'measure/1__1__0'(F, A, B)
            ;   true
            )
        ;   'measure/1__1__0'(F, A, B)
        ).
'measure/1__1'(A, B) :-
        'measure/1__2'(A, B).
'measure/1__2'(A, B) :-
        nb_getval('$chr_store_global_ground_user:meter/2', C), !,
        'measure/1__2__0'(C, A, B).
'measure/1__2__0'([], B, A) :-
        'measure/1__3'(B, A).
'measure/1__2__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:voice/1', G) ->
            'measure/1__2__1'(G, C, D, E, H, B, A)
        ;   'measure/1__2__0'(H, B, A)
        ).
'measure/1__2__1'([], _, _, _, A, C, B) :-
        'measure/1__2__0'(A, C, B).
'measure/1__2__1'([H|K], E, F, A, B, D, C) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            '$via1_multi_hash_unspecified_measure/1-1'(D, J) ->
            'measure/1__2__2'(J, G, H, K, E, F, A, B, D, C)
        ;   'measure/1__2__1'(K, E, F, A, B, D, C)
        ).
'measure/1__2__2'([], _, _, A, F, G, B, C, E, D) :-
        'measure/1__2__1'(A, F, G, B, C, E, D).
'measure/1__2__2'([L|M], I, A, B, G, H, C, D, F, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J==F,
            O=t(92,C,A,E,L),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(E, O),
            '$novel_production'(L, O) ->
            '$extend_history'(E, O),
            '$activate_constraint_measure/1'(_, E),
            debugwriteln(make_beats(G,H,F,I)),
            make_beats(G, H, F, I),
            (   E=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'measure/1__2__2'(M, I, A, B, G, H, C, D, F, E)
            ;   true
            )
        ;   'measure/1__2__2'(M, I, A, B, G, H, C, D, F, E)
        ).
'measure/1__2'(A, B) :-
        'measure/1__3'(A, B).
'measure/1__3'(_, A) :-
        '$activate_constraint_measure/1'(_, A).
mchord(A, B) :-
        '$insert_constraint_internal_mchord/2'(C, A, B),
        '$insert_in_store_mchord/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'mchord/2__0'(A, B, C).
'mchord/2__0'(A, B, C) :-
        '$via1_multi_hash_failrules/1-1'(nr, D), !,
        'mchord/2__0__0'(D, A, B, C).
'mchord/2__0__0'([], B, C, A) :-
        'mchord/2__1'(B, C, A).
'mchord/2__0__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D=nr,
            I=t(24,F,A),
            '$novel_production'(F, I),
            '$novel_production'(A, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_mchord/2'(_, A),
            debugwrite('DEBUG: '),
            debugwriteln(check(mchordA,C)),
            check(mchord(B,C)),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'mchord/2__0__0'(G, B, C, A)
            ;   true
            )
        ;   'mchord/2__0__0'(G, B, C, A)
        ).
'mchord/2__0'(A, B, C) :-
        'mchord/2__1'(A, B, C).
'mchord/2__1'(1, A, B) :-
        '$via1_multi_hash_make_notes_measure/1-1'(1, C), !,
        'mchord/2__1__0'(C, 1, A, B).
'mchord/2__1__0'([], B, C, A) :-
        'mchord/2__2'(B, C, A).
'mchord/2__1__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=1,
            '$via1_multi_hash_beat/5-234'(k(1,0,0), G) ->
            'mchord/2__1__1'(G, E, H, B, C, A)
        ;   'mchord/2__1__0'(H, B, C, A)
        ).
'mchord/2__1__1'([], _, A, C, D, B) :-
        'mchord/2__1__0'(A, C, D, B).
'mchord/2__1__1'([K|L], A, B, D, E, C) :-
        (   K=suspension(_,J,_,_,F,G,H,I,_),
            J=mutable(active),
            G=1,
            H=0,
            I=0,
            Q=t(114,A,K,C),
            '$novel_production'(A, Q),
            '$novel_production'(K, Q),
            '$novel_production'(C, Q),
            F\==drums,
            F\==chords ->
            '$extend_history'(C, Q),
            '$activate_constraint_mchord/2'(_, C),
            debugwriteln('DEBUG: Making notes for first measure.'),
            abstract_beat(1, 0, 0, M),
            soft_msw(note_choice(F,M), N),
            debugwriteln(picked(note_choice(F,M),N)),
            pick_concrete_note(F, E, N, O),
            debugwriteln(concrete_note(F,E,N,O)),
            anote(F, 1, 0, 0, N),
            note(F, 1, 0, 0, O),
            (   C=suspension(_,P,_,_,_,_),
                P=mutable(active) ->
                'chr update_mutable'(inactive, P),
                'mchord/2__1__1'(L, A, B, D, E, C)
            ;   true
            )
        ;   'mchord/2__1__1'(L, A, B, D, E, C)
        ).
'mchord/2__1'(A, B, C) :-
        'mchord/2__2'(A, B, C).
'mchord/2__2'(A, B, C) :-
        '$via1_multi_hash_make_notes_measure/1-1'(A, D), !,
        'mchord/2__2__0'(D, A, B, C).
'mchord/2__2__0'([], B, C, A) :-
        'mchord/2__3'(B, C, A).
'mchord/2__2__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D==B,
            '$via1_multi_hash_beat/5-2'(B, G) ->
            'mchord/2__2__1'(G, E, H, B, C, A)
        ;   'mchord/2__2__0'(H, B, C, A)
        ).
'mchord/2__2__1'([], _, A, C, D, B) :-
        'mchord/2__2__0'(A, C, D, B).
'mchord/2__2__1'([J|M], A, B, D, E, C) :-
        (   J=suspension(_,K,_,_,F,G,H,I,_),
            K=mutable(active),
            G==D,
            '$via1_multi_hash_octave/5-1'(F, L) ->
            'mchord/2__2__2'(L, F, H, I, J, M, A, B, D, E, C)
        ;   'mchord/2__2__1'(M, A, B, D, E, C)
        ).
'mchord/2__2__2'([], _, _, _, _, A, B, C, E, F, D) :-
        'mchord/2__2__1'(A, B, C, E, F, D).
'mchord/2__2__2'([P|S], H, I, J, A, B, C, D, F, G, E) :-
        (   P=suspension(_,Q,_,_,K,L,M,N,O),
            Q=mutable(active),
            K==H,
            '$via1_multi_hash_next_beat/7-1234567'(k(H,L,M,N,F,I,J), R) ->
            'mchord/2__2__3'(R, L, M, N, O, P, S, H, I, J, A, B, C, D, F, G, E)
        ;   'mchord/2__2__2'(S, H, I, J, A, B, C, D, F, G, E)
        ).
'mchord/2__2__3'([], _, _, _, _, _, A, I, J, K, B, C, D, E, G, H, F) :-
        'mchord/2__2__2'(A, I, J, K, B, C, D, E, G, H, F).
'mchord/2__2__3'([Y|Z], M, N, O, P, A, B, J, K, L, C, D, E, F, H, I, G) :-
        (   Y=suspension(_,X,_,Q,R,S,T,U,V,W),
            X=mutable(active),
            Q==J,
            R==M,
            S==N,
            T==O,
            U==H,
            V==K,
            W==L,
            E1=t(115,E,C,G,A,Y),
            '$novel_production'(E, E1),
            '$novel_production'(C, E1),
            '$novel_production'(G, E1),
            '$novel_production'(A, E1),
            '$novel_production'(Y, E1),
            J\==drums,
            J\==chords ->
            '$extend_history'(G, E1),
            '$activate_constraint_mchord/2'(_, G),
            debugwriteln('DEBUG: Making notes for some measure'),
            abstract_beat(H, K, L, A1),
            soft_msw(note_choice(J,A1), B1),
            debugwriteln(picked(note_choice(J,A1),B1)),
            pick_concrete_note(J, I, B1, C1),
            debugwriteln(concrete_note(J,I,B1,C1)),
            anote(J, H, K, L, B1),
            note(J, H, K, L, C1),
            (   C1==r ->
                octave_d(J, H, K, L, 0)
            ;   find_octave_d(J, H, K, L, P)
            ),
            (   G=suspension(_,D1,_,_,_,_),
                D1=mutable(active) ->
                'chr update_mutable'(inactive, D1),
                'mchord/2__2__3'(Z, M, N, O, P, A, B, J, K, L, C, D, E, F, H, I, G)
            ;   true
            )
        ;   'mchord/2__2__3'(Z, M, N, O, P, A, B, J, K, L, C, D, E, F, H, I, G)
        ).
'mchord/2__2'(A, B, C) :-
        'mchord/2__3'(A, B, C).
'mchord/2__3'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(make_notes, D), !,
        'mchord/2__3__0'(D, A, B, C).
'mchord/2__3__0'([], B, C, A) :-
        'mchord/2__4'(B, C, A).
'mchord/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=make_notes,
            nb_getval('$chr_store_global_ground_user:chord_style/1', G) ->
            'mchord/2__3__1'(G, E, H, B, C, A)
        ;   'mchord/2__3__0'(H, B, C, A)
        ).
'mchord/2__3__1'([], _, A, C, D, B) :-
        'mchord/2__3__0'(A, C, D, B).
'mchord/2__3__1'([G|J], A, B, D, E, C) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            '$via1_multi_hash_beat/5-1'(chords, I) ->
            'mchord/2__3__2'(I, F, G, J, A, B, D, E, C)
        ;   'mchord/2__3__1'(J, A, B, D, E, C)
        ).
'mchord/2__3__2'([], _, _, A, B, C, E, F, D) :-
        'mchord/2__3__1'(A, B, C, E, F, D).
'mchord/2__3__2'([M|P], H, A, B, C, D, F, G, E) :-
        (   M=suspension(_,N,_,_,I,J,K,L,_),
            N=mutable(active),
            I=chords,
            J==F,
            '$via1_multi_hash_unspecified_measure/1-1'(F, O) ->
            'mchord/2__3__3'(O, K, L, M, P, H, A, B, C, D, F, G, E)
        ;   'mchord/2__3__2'(P, H, A, B, C, D, F, G, E)
        ).
'mchord/2__3__3'([], _, _, _, A, I, B, C, D, E, G, H, F) :-
        'mchord/2__3__2'(A, I, B, C, D, E, G, H, F).
'mchord/2__3__3'([O|P], K, L, A, B, J, C, D, E, F, H, I, G) :-
        (   O=suspension(_,N,_,_,M),
            N=mutable(active),
            M==H,
            T=t(121,E,C,A,G,O),
            '$novel_production'(E, T),
            '$novel_production'(C, T),
            '$novel_production'(A, T),
            '$novel_production'(G, T),
            '$novel_production'(O, T) ->
            '$extend_history'(G, T),
            '$activate_constraint_mchord/2'(_, G),
            abstract_beat(H, K, L, Q),
            msw(chord_type(J,Q), R),
            debugwrite('DEBUG: making notes: '),
            debugwriteln(mchord(H,I)),
            debugwriteln(msw(chord_type(J,Q),R)),
            chord(I, H, K, L, R),
            (   G=suspension(_,S,_,_,_,_),
                S=mutable(active) ->
                'chr update_mutable'(inactive, S),
                'mchord/2__3__3'(P, K, L, A, B, J, C, D, E, F, H, I, G)
            ;   true
            )
        ;   'mchord/2__3__3'(P, K, L, A, B, J, C, D, E, F, H, I, G)
        ).
'mchord/2__3'(A, B, C) :-
        'mchord/2__4'(A, B, C).
'mchord/2__4'(_, _, A) :-
        '$activate_constraint_mchord/2'(_, A).
beat(A, B, C, D, E) :-
        '$insert_constraint_internal_beat/5'(F, A, B, C, D, E),
        '$insert_in_store_beat/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'beat/5__0'(A, B, C, D, E, F).
'beat/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_failrules/1-1'(s, G), !,
        'beat/5__0__0'(G, A, B, C, D, E, F).
'beat/5__0__0'([], B, C, D, E, F, A) :-
        'beat/5__1'(B, C, D, E, F, A).
'beat/5__0__0'([I|J], B, C, D, E, F, A) :-
        (   I=suspension(_,H,_,_,G),
            H=mutable(active),
            G=s,
            L=t(31,I,A),
            '$novel_production'(I, L),
            '$novel_production'(A, L) ->
            '$extend_history'(A, L),
            '$activate_constraint_beat/5'(_, A),
            check2(beat(B,C,D,E,F)),
            (   A=suspension(_,K,_,_,_,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'beat/5__0__0'(J, B, C, D, E, F, A)
            ;   true
            )
        ;   'beat/5__0__0'(J, B, C, D, E, F, A)
        ).
'beat/5__0'(A, B, C, D, E, F) :-
        'beat/5__1'(A, B, C, D, E, F).
'beat/5__1'(A, B, C, D, E, F) :-
        '$via1_multi_hash_failrules/1-1'(u, G), !,
        'beat/5__1__0'(G, A, B, C, D, E, F).
'beat/5__1__0'([], B, C, D, E, F, A) :-
        'beat/5__2'(B, C, D, E, F, A).
'beat/5__1__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=u,
            nb_getval('$chr_store_global_ground_user:phase/1', J) ->
            'beat/5__1__1'(J, H, K, B, C, D, E, F, A)
        ;   'beat/5__1__0'(K, B, C, D, E, F, A)
        ).
'beat/5__1__1'([], _, A, C, D, E, F, G, B) :-
        'beat/5__1__0'(A, C, D, E, F, G, B).
'beat/5__1__1'([K|L], A, B, D, E, F, G, H, C) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            I=split_beats(M),
            O=t(34,A,K,C),
            '$novel_production'(A, O),
            '$novel_production'(K, O),
            '$novel_production'(C, O),
            E<M ->
            '$extend_history'(C, O),
            '$activate_constraint_beat/5'(_, C),
            check_resultbeat(D, E, F, G, H),
            (   C=suspension(_,N,_,_,_,_,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'beat/5__1__1'(L, A, B, D, E, F, G, H, C)
            ;   true
            )
        ;   'beat/5__1__1'(L, A, B, D, E, F, G, H, C)
        ).
'beat/5__1'(A, B, C, D, E, F) :-
        'beat/5__2'(A, B, C, D, E, F).
'beat/5__2'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:meter/2', G), !,
        'beat/5__2__0'(G, A, B, C, D, E, F).
'beat/5__2__0'([], B, C, D, E, F, A) :-
        'beat/5__3'(B, C, D, E, F, A).
'beat/5__2__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,_,G),
            I=mutable(active),
            nb_getval('$chr_store_global_ground_user:phase/1', J) ->
            'beat/5__2__1'(J, G, H, K, B, C, D, E, F, A)
        ;   'beat/5__2__0'(K, B, C, D, E, F, A)
        ).
'beat/5__2__1'([], _, _, A, C, D, E, F, G, B) :-
        'beat/5__2__0'(A, C, D, E, F, G, B).
'beat/5__2__1'([K|O], I, A, B, D, E, F, G, H, C) :-
        (   K=suspension(_,M,_,_,J),
            M=mutable(active),
            J=split_beats(L),
            L==E,
            '$via1_multi_hash_shortest_duration/2-1'(D, N) ->
            'beat/5__2__2'(N, K, O, I, A, B, D, E, F, G, H, C)
        ;   'beat/5__2__1'(O, I, A, B, D, E, F, G, H, C)
        ).
'beat/5__2__2'([], _, A, J, B, C, E, F, G, H, I, D) :-
        'beat/5__2__1'(A, J, B, C, E, F, G, H, I, D).
'beat/5__2__2'([N|Q], A, B, K, C, D, F, G, H, I, J, E) :-
        (   N=suspension(_,O,_,_,L,M),
            O=mutable(active),
            L==F,
            nb_getval('$chr_store_global_ground_user:measures/1', P) ->
            'beat/5__2__3'(P, M, N, Q, A, B, K, C, D, F, G, H, I, J, E)
        ;   'beat/5__2__2'(Q, A, B, K, C, D, F, G, H, I, J, E)
        ).
'beat/5__2__3'([], _, _, A, B, C, L, D, E, G, H, I, J, K, F) :-
        'beat/5__2__2'(A, B, C, L, D, E, G, H, I, J, K, F).
'beat/5__2__3'([P|S], N, A, B, C, D, M, E, F, H, I, J, K, L, G) :-
        (   P=suspension(_,Q,_,_,O),
            Q=mutable(active),
            '$via1_multi_hash_next_beat/7-1234'(k(H,I,J,K), R) ->
            'beat/5__2__4'(R, O, P, S, N, A, B, C, D, M, E, F, H, I, J, K, L, G)
        ;   'beat/5__2__3'(S, N, A, B, C, D, M, E, F, H, I, J, K, L, G)
        ).
'beat/5__2__4'([], _, _, A, O, B, C, D, E, N, F, G, I, J, K, L, M, H) :-
        'beat/5__2__3'(A, O, B, C, D, E, N, F, G, I, J, K, L, M, H).
'beat/5__2__4'([Z|A1], Q, A, B, P, C, D, E, F, O, G, H, J, K, L, M, N, I) :-
        (   Z=suspension(_,Y,_,R,S,T,U,V,W,X),
            Y=mutable(active),
            R==J,
            S==K,
            T==L,
            U==M,
            H1=t(96,G,E,C,A,I,Z),
            '$novel_production'(G, H1),
            '$novel_production'(E, H1),
            '$novel_production'(C, H1),
            '$novel_production'(A, H1),
            '$novel_production'(I, H1),
            '$novel_production'(Z, H1),
            N<P,
            K\==Q,
            'chr lock'(J),
            'chr lock'(K),
            'chr lock'(L),
            'chr lock'(M),
            'chr lock'(N),
            debugwriteln(considering_splitbeat(J,K,L,M,N)),
            'chr unlock'(J),
            'chr unlock'(K),
            'chr unlock'(L),
            'chr unlock'(M),
            'chr unlock'(N) ->
            '$extend_history'(I, H1),
            '$activate_constraint_beat/5'(_, I),
            msw(split_beat(J), B1),
            (   B1=1 ->
                (   '$remove_constraint_internal_beat/5'(I, E1),
                    (   E1=yes ->
                        '$delete_from_store_beat/5'(I)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(Z, F1),
                    (   F1=yes ->
                        '$delete_from_store_next_beat/7'(Z)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                C1 is N*2,
                D1 is M+1/(C1/O),
                debugwriteln(doing_splitbeat(J,K,L,M,N)),
                next_beat(J, K, L, M, K, L, D1),
                next_beat(J, K, L, D1, V, W, X),
                beat(J, K, L, M, C1),
                beat(J, K, L, D1, C1)
            ;   true
            ),
            (   I=suspension(_,G1,_,_,_,_,_,_,_),
                G1=mutable(active) ->
                'chr update_mutable'(inactive, G1),
                'beat/5__2__4'(A1, Q, A, B, P, C, D, E, F, O, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'beat/5__2__4'(A1, Q, A, B, P, C, D, E, F, O, G, H, J, K, L, M, N, I)
        ).
'beat/5__2'(A, B, C, D, E, F) :-
        'beat/5__3'(A, B, C, D, E, F).
'beat/5__3'(A, 1, 0, 0, B, C) :-
        '$via1_multi_hash_make_notes_measure/1-1'(1, D), !,
        'beat/5__3__0'(D, A, 1, 0, 0, B, C).
'beat/5__3__0'([], B, C, D, E, F, A) :-
        'beat/5__4'(B, C, D, E, F, A).
'beat/5__3__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=1,
            '$via1_multi_hash_mchord/2-1'(1, J) ->
            'beat/5__3__1'(J, H, K, B, C, D, E, F, A)
        ;   'beat/5__3__0'(K, B, C, D, E, F, A)
        ).
'beat/5__3__1'([], _, A, C, D, E, F, G, B) :-
        'beat/5__3__0'(A, C, D, E, F, G, B).
'beat/5__3__1'([L|M], A, B, D, E, F, G, H, C) :-
        (   L=suspension(_,K,_,_,I,J),
            K=mutable(active),
            I=1,
            R=t(114,A,C,L),
            '$novel_production'(A, R),
            '$novel_production'(C, R),
            '$novel_production'(L, R),
            D\==drums,
            D\==chords ->
            '$extend_history'(C, R),
            '$activate_constraint_beat/5'(_, C),
            debugwriteln('DEBUG: Making notes for first measure.'),
            abstract_beat(1, 0, 0, N),
            soft_msw(note_choice(D,N), O),
            debugwriteln(picked(note_choice(D,N),O)),
            pick_concrete_note(D, J, O, P),
            debugwriteln(concrete_note(D,J,O,P)),
            anote(D, 1, 0, 0, O),
            note(D, 1, 0, 0, P),
            (   C=suspension(_,Q,_,_,_,_,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'beat/5__3__1'(M, A, B, D, E, F, G, H, C)
            ;   true
            )
        ;   'beat/5__3__1'(M, A, B, D, E, F, G, H, C)
        ).
'beat/5__3'(A, B, C, D, E, F) :-
        'beat/5__4'(A, B, C, D, E, F).
'beat/5__4'(A, B, C, D, E, F) :-
        '$via1_multi_hash_make_notes_measure/1-1'(B, G), !,
        'beat/5__4__0'(G, A, B, C, D, E, F).
'beat/5__4__0'([], B, C, D, E, F, A) :-
        'beat/5__5'(B, C, D, E, F, A).
'beat/5__4__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G==C,
            '$via1_multi_hash_mchord/2-1'(C, J) ->
            'beat/5__4__1'(J, H, K, B, C, D, E, F, A)
        ;   'beat/5__4__0'(K, B, C, D, E, F, A)
        ).
'beat/5__4__1'([], _, A, C, D, E, F, G, B) :-
        'beat/5__4__0'(A, C, D, E, F, G, B).
'beat/5__4__1'([K|N], A, B, D, E, F, G, H, C) :-
        (   K=suspension(_,L,_,_,I,J),
            L=mutable(active),
            I==E,
            '$via1_multi_hash_octave/5-1'(D, M) ->
            'beat/5__4__2'(M, J, K, N, A, B, D, E, F, G, H, C)
        ;   'beat/5__4__1'(N, A, B, D, E, F, G, H, C)
        ).
'beat/5__4__2'([], _, _, A, B, C, E, F, G, H, I, D) :-
        'beat/5__4__1'(A, B, C, E, F, G, H, I, D).
'beat/5__4__2'([Q|T], K, A, B, C, D, F, G, H, I, J, E) :-
        (   Q=suspension(_,R,_,_,L,M,N,O,P),
            R=mutable(active),
            L==F,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,M,N,O,G,H,I), S) ->
            'beat/5__4__3'(S, M, N, O, P, Q, T, K, A, B, C, D, F, G, H, I, J, E)
        ;   'beat/5__4__2'(T, K, A, B, C, D, F, G, H, I, J, E)
        ).
'beat/5__4__3'([], _, _, _, _, _, A, L, B, C, D, E, G, H, I, J, K, F) :-
        'beat/5__4__2'(A, L, B, C, D, E, G, H, I, J, K, F).
'beat/5__4__3'([Z|A1], N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G) :-
        (   Z=suspension(_,Y,_,R,S,T,U,V,W,X),
            Y=mutable(active),
            R==H,
            S==N,
            T==O,
            U==P,
            V==I,
            W==J,
            X==K,
            F1=t(115,E,G,C,A,Z),
            '$novel_production'(E, F1),
            '$novel_production'(G, F1),
            '$novel_production'(C, F1),
            '$novel_production'(A, F1),
            '$novel_production'(Z, F1),
            H\==drums,
            H\==chords ->
            '$extend_history'(G, F1),
            '$activate_constraint_beat/5'(_, G),
            debugwriteln('DEBUG: Making notes for some measure'),
            abstract_beat(I, J, K, B1),
            soft_msw(note_choice(H,B1), C1),
            debugwriteln(picked(note_choice(H,B1),C1)),
            pick_concrete_note(H, M, C1, D1),
            debugwriteln(concrete_note(H,M,C1,D1)),
            anote(H, I, J, K, C1),
            note(H, I, J, K, D1),
            (   D1==r ->
                octave_d(H, I, J, K, 0)
            ;   find_octave_d(H, I, J, K, Q)
            ),
            (   G=suspension(_,E1,_,_,_,_,_,_,_),
                E1=mutable(active) ->
                'chr update_mutable'(inactive, E1),
                'beat/5__4__3'(A1, N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G)
            ;   true
            )
        ;   'beat/5__4__3'(A1, N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ).
'beat/5__4'(A, B, C, D, E, F) :-
        'beat/5__5'(A, B, C, D, E, F).
'beat/5__5'(drums, A, B, C, D, E) :-
        '$via1_multi_hash_phase/1-1'(make_notes, F), !,
        'beat/5__5__0'(F, drums, A, B, C, D, E).
'beat/5__5__0'([], B, C, D, E, F, A) :-
        'beat/5__6'(B, C, D, E, F, A).
'beat/5__5__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=make_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, J) ->
            'beat/5__5__1'(J, H, K, B, C, D, E, F, A)
        ;   'beat/5__5__0'(K, B, C, D, E, F, A)
        ).
'beat/5__5__1'([], _, A, C, D, E, F, G, B) :-
        'beat/5__5__0'(A, C, D, E, F, G, B).
'beat/5__5__1'([K|L], A, B, D, E, F, G, H, C) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            I==E,
            P=t(120,A,C,K),
            '$novel_production'(A, P),
            '$novel_production'(C, P),
            '$novel_production'(K, P) ->
            '$extend_history'(C, P),
            '$activate_constraint_beat/5'(_, C),
            abstract_beat(E, F, G, M),
            msw(drum_choice(M), N),
            debugwriteln(msw(drum_choice(M),N)),
            note(drums, E, F, G, N),
            (   C=suspension(_,O,_,_,_,_,_,_,_),
                O=mutable(active) ->
                'chr update_mutable'(inactive, O),
                'beat/5__5__1'(L, A, B, D, E, F, G, H, C)
            ;   true
            )
        ;   'beat/5__5__1'(L, A, B, D, E, F, G, H, C)
        ).
'beat/5__5'(A, B, C, D, E, F) :-
        'beat/5__6'(A, B, C, D, E, F).
'beat/5__6'(chords, A, B, C, D, E) :-
        '$via1_multi_hash_phase/1-1'(make_notes, F), !,
        'beat/5__6__0'(F, chords, A, B, C, D, E).
'beat/5__6__0'([], B, C, D, E, F, A) :-
        'beat/5__7'(B, C, D, E, F, A).
'beat/5__6__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=make_notes,
            nb_getval('$chr_store_global_ground_user:chord_style/1', J) ->
            'beat/5__6__1'(J, H, K, B, C, D, E, F, A)
        ;   'beat/5__6__0'(K, B, C, D, E, F, A)
        ).
'beat/5__6__1'([], _, A, C, D, E, F, G, B) :-
        'beat/5__6__0'(A, C, D, E, F, G, B).
'beat/5__6__1'([J|M], A, B, D, E, F, G, H, C) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            '$via1_multi_hash_mchord/2-1'(E, L) ->
            'beat/5__6__2'(L, I, J, M, A, B, D, E, F, G, H, C)
        ;   'beat/5__6__1'(M, A, B, D, E, F, G, H, C)
        ).
'beat/5__6__2'([], _, _, A, B, C, E, F, G, H, I, D) :-
        'beat/5__6__1'(A, B, C, E, F, G, H, I, D).
'beat/5__6__2'([N|Q], K, A, B, C, D, F, G, H, I, J, E) :-
        (   N=suspension(_,O,_,_,L,M),
            O=mutable(active),
            L==G,
            '$via1_multi_hash_unspecified_measure/1-1'(G, P) ->
            'beat/5__6__3'(P, M, N, Q, K, A, B, C, D, F, G, H, I, J, E)
        ;   'beat/5__6__2'(Q, K, A, B, C, D, F, G, H, I, J, E)
        ).
'beat/5__6__3'([], _, _, A, L, B, C, D, E, G, H, I, J, K, F) :-
        'beat/5__6__2'(A, L, B, C, D, E, G, H, I, J, K, F).
'beat/5__6__3'([Q|R], N, A, B, M, C, D, E, F, H, I, J, K, L, G) :-
        (   Q=suspension(_,P,_,_,O),
            P=mutable(active),
            O==I,
            V=t(121,E,C,G,A,Q),
            '$novel_production'(E, V),
            '$novel_production'(C, V),
            '$novel_production'(G, V),
            '$novel_production'(A, V),
            '$novel_production'(Q, V) ->
            '$extend_history'(G, V),
            '$activate_constraint_beat/5'(_, G),
            abstract_beat(I, J, K, S),
            msw(chord_type(M,S), T),
            debugwrite('DEBUG: making notes: '),
            debugwriteln(mchord(I,N)),
            debugwriteln(msw(chord_type(M,S),T)),
            chord(N, I, J, K, T),
            (   G=suspension(_,U,_,_,_,_,_,_,_),
                U=mutable(active) ->
                'chr update_mutable'(inactive, U),
                'beat/5__6__3'(R, N, A, B, M, C, D, E, F, H, I, J, K, L, G)
            ;   true
            )
        ;   'beat/5__6__3'(R, N, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ).
'beat/5__6'(A, B, C, D, E, F) :-
        'beat/5__7'(A, B, C, D, E, F).
'beat/5__7'(A, B, C, D, E, F) :-
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), G), !,
        'beat/5__7__0'(G, A, B, C, D, E, F).
'beat/5__7__0'([], B, C, D, E, F, A) :-
        'beat/5__8'(B, C, D, E, F, A).
'beat/5__7__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            H==C,
            I==D,
            J==E,
            '$via1_multi_hash_show_notes/4-1234'(k(B,C,D,E), N) ->
            'beat/5__7__1'(N, K, L, O, B, C, D, E, F, A)
        ;   'beat/5__7__0'(O, B, C, D, E, F, A)
        ).
'beat/5__7__1'([], _, _, A, C, D, E, F, G, B) :-
        'beat/5__7__0'(A, C, D, E, F, G, B).
'beat/5__7__1'([O|P], I, A, B, D, E, F, G, H, C) :-
        (   O=suspension(_,N,_,J,K,L,M),
            N=mutable(active),
            J==D,
            K==E,
            L==F,
            M==G,
            R=t(148,A,C,O),
            '$novel_production'(A, R),
            '$novel_production'(C, R),
            '$novel_production'(O, R) ->
            '$extend_history'(C, R),
            '$activate_constraint_beat/5'(_, C),
            show_note(I),
            maybe_show_octave(D, E, F, G),
            write(H),
            show_mods(I),
            write(' '),
            (   C=suspension(_,Q,_,_,_,_,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'beat/5__7__1'(P, I, A, B, D, E, F, G, H, C)
            ;   true
            )
        ;   'beat/5__7__1'(P, I, A, B, D, E, F, G, H, C)
        ).
'beat/5__7'(A, B, C, D, E, F) :-
        'beat/5__8'(A, B, C, D, E, F).
'beat/5__8'(_, _, _, _, _, A) :-
        '$activate_constraint_beat/5'(_, A).
note(A, B, C, D, E) :-
        '$insert_constraint_internal_note/5'(F, A, B, C, D, E),
        '$insert_in_store_note/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'note/5__0'(A, B, C, D, E, F).
'note/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_failrules/1-1'(nr, G), !,
        'note/5__0__0'(G, A, B, C, D, E, F).
'note/5__0__0'([], B, C, D, E, F, A) :-
        'note/5__1'(B, C, D, E, F, A).
'note/5__0__0'([I|J], B, C, D, E, F, A) :-
        (   I=suspension(_,H,_,_,G),
            H=mutable(active),
            G=nr,
            L=t(21,I,A),
            '$novel_production'(I, L),
            '$novel_production'(A, L) ->
            '$extend_history'(A, L),
            '$activate_constraint_note/5'(_, A),
            check(note(B,C,D,E,F)),
            (   A=suspension(_,K,_,_,_,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'note/5__0__0'(J, B, C, D, E, F, A)
            ;   true
            )
        ;   'note/5__0__0'(J, B, C, D, E, F, A)
        ).
'note/5__0'(A, B, C, D, E, F) :-
        'note/5__1'(A, B, C, D, E, F).
'note/5__1'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-1234'(k(A,B,C,D), G), !,
        'note/5__1__0'(G, A, B, C, D, E, F).
'note/5__1__0'([], B, C, D, E, F, A) :-
        'note/5__2'(B, C, D, E, F, A).
'note/5__1__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            E\==r,
            '$via1_multi_hash_range/5-13'(k(A,K), Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,P,_,_,_),
            R=mutable(active),
            note_below(E, P) ->
            '$remove_constraint_internal_octave_rangecheck/5'(L, S),
            (   S=yes ->
                '$delete_from_store_octave_rangecheck/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(low),
            (   F=suspension(_,T,_,_,_,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'note/5__1__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__1__0'(N, A, B, C, D, E, F)
        ).
'note/5__1'(A, B, C, D, E, F) :-
        'note/5__2'(A, B, C, D, E, F).
'note/5__2'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_rangecheck/5-1234'(k(A,B,C,D), G), !,
        'note/5__2__0'(G, A, B, C, D, E, F).
'note/5__2__0'([], B, C, D, E, F, A) :-
        'note/5__3'(B, C, D, E, F, A).
'note/5__2__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            E\==r,
            '$via1_multi_hash_range/5-15'(k(A,K), Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,_,P,_),
            R=mutable(active),
            note_above(E, P) ->
            '$remove_constraint_internal_octave_rangecheck/5'(L, S),
            (   S=yes ->
                '$delete_from_store_octave_rangecheck/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(high),
            (   F=suspension(_,T,_,_,_,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'note/5__2__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__2__0'(N, A, B, C, D, E, F)
        ).
'note/5__2'(A, B, C, D, E, F) :-
        'note/5__3'(A, B, C, D, E, F).
'note/5__3'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'note/5__3__0'(G, A, B, C, D, E, F).
'note/5__3__0'([], B, C, D, E, F, A) :-
        'note/5__4'(B, C, D, E, F, A).
'note/5__3__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            V\==L,
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,B,C,D,H,I,J), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(E, W, A1, K, H1),
            H1>S ->
            '$remove_constraint_internal_octave/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(jumpup(H1)),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'note/5__3__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__3__0'(N, A, B, C, D, E, F)
        ).
'note/5__3'(A, B, C, D, E, F) :-
        'note/5__4'(A, B, C, D, E, F).
'note/5__4'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), G), !,
        'note/5__4__0'(G, A, B, C, D, E, F).
'note/5__4__0'([], B, C, D, E, F, A) :-
        'note/5__5'(B, C, D, E, F, A).
'note/5__4__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_octave/5-1'(A, A1),
            'chr sbag_member'(V, A1),
            V=suspension(_,B1,_,_,_,W,X,Y,Z),
            B1=mutable(active),
            V\==L,
            '$via1_multi_hash_note/5-1234'(k(A,W,X,Y), E1),
            'chr sbag_member'(C1, E1),
            C1=suspension(_,F1,_,_,_,_,_,_,D1),
            F1=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,W,X,Y,B,C,D), H1),
            'chr sbag_member'(G1, H1),
            G1=suspension(_,I1,_,_,_,_,_,_,_,_),
            I1=mutable(active),
            interval(D1, Z, E, K, K1),
            K1>S ->
            '$remove_constraint_internal_octave/5'(L, J1),
            (   J1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(jumpup(K1)),
            (   F=suspension(_,L1,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'note/5__4__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__4__0'(N, A, B, C, D, E, F)
        ).
'note/5__4'(A, B, C, D, E, F) :-
        'note/5__5'(A, B, C, D, E, F).
'note/5__5'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'note/5__5__0'(G, A, B, C, D, E, F).
'note/5__5__0'([], B, C, D, E, F, A) :-
        'note/5__6'(B, C, D, E, F, A).
'note/5__5__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            V\==L,
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,B,C,D,H,I,J), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(E, W, A1, K, H1),
            H1< -S ->
            '$remove_constraint_internal_octave/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(jumpdown(H1)),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'note/5__5__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__5__0'(N, A, B, C, D, E, F)
        ).
'note/5__5'(A, B, C, D, E, F) :-
        'note/5__6'(A, B, C, D, E, F).
'note/5__6'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), G), !,
        'note/5__6__0'(G, A, B, C, D, E, F).
'note/5__6__0'([], B, C, D, E, F, A) :-
        'note/5__7'(B, C, D, E, F, A).
'note/5__6__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_octave/5-1'(A, A1),
            'chr sbag_member'(V, A1),
            V=suspension(_,B1,_,_,_,W,X,Y,Z),
            B1=mutable(active),
            V\==L,
            '$via1_multi_hash_note/5-1234'(k(A,W,X,Y), E1),
            'chr sbag_member'(C1, E1),
            C1=suspension(_,F1,_,_,_,_,_,_,D1),
            F1=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,W,X,Y,B,C,D), H1),
            'chr sbag_member'(G1, H1),
            G1=suspension(_,I1,_,_,_,_,_,_,_,_),
            I1=mutable(active),
            interval(D1, Z, E, K, K1),
            K1< -S ->
            '$remove_constraint_internal_octave/5'(L, J1),
            (   J1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            wfail(jumpdown(K1)),
            (   F=suspension(_,L1,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'note/5__6__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__6__0'(N, A, B, C, D, E, F)
        ).
'note/5__6'(A, B, C, D, E, F) :-
        'note/5__7'(A, B, C, D, E, F).
'note/5__7'(A, B, C, D, E, F) :-
        '$via1_multi_hash_same_note_counter/5-1234'(k(A,B,C,D), G), !,
        'note/5__7__0'(G, A, B, C, D, E, F).
'note/5__7__0'([], B, C, D, E, F, A) :-
        'note/5__8'(B, C, D, E, F, A).
'note/5__7__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,_,_,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_next_beat/7-1234'(k(A,B,C,D), Z),
            'chr sbag_member'(V, Z),
            V=suspension(_,A1,_,_,_,_,_,W,X,Y),
            A1=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,W,X,Y), D1),
            'chr sbag_member'(B1, D1),
            B1=suspension(_,E1,_,_,_,_,_,_,C1),
            E1=mutable(active),
            B1\==R,
            '$via1_multi_hash_note/5-1234'(k(A,W,X,Y), H1),
            'chr sbag_member'(F1, H1),
            F1=suspension(_,I1,_,_,_,_,_,_,G1),
            I1=mutable(active) ->
            '$remove_constraint_internal_same_note_counter/5'(L, J1),
            (   J1=yes ->
                '$delete_from_store_same_note_counter/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            (   S==C1,
                E==G1 ->
                K1 is K+1,
                same_note_counter(A, W, X, Y, K1)
            ;   same_note_counter(A, W, X, Y, 0)
            ),
            (   F=suspension(_,L1,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'note/5__7__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__7__0'(N, A, B, C, D, E, F)
        ).
'note/5__7'(A, B, C, D, E, F) :-
        'note/5__8'(A, B, C, D, E, F).
'note/5__8'(A, B, C, D, E, F) :-
        '$via1_multi_hash_same_note_counter/5-1'(A, G), !,
        'note/5__8__0'(G, A, B, C, D, E, F).
'note/5__8__0'([], B, C, D, E, F, A) :-
        'note/5__9'(B, C, D, E, F, A).
'note/5__8__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,H,I,J), T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,_,_,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,H,I,J,B,C,D), A1),
            'chr sbag_member'(Z, A1),
            Z=suspension(_,B1,_,_,_,_,_,_,_,_),
            B1=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), E1),
            'chr sbag_member'(C1, E1),
            C1=suspension(_,F1,_,_,_,_,_,_,D1),
            F1=mutable(active),
            C1\==R ->
            '$remove_constraint_internal_same_note_counter/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_same_note_counter/5'(L)
            ;   true
            ),
            '$activate_constraint_note/5'(_, F),
            (   S==D1,
                W==E ->
                H1 is K+1,
                same_note_counter(A, B, C, D, H1)
            ;   same_note_counter(A, B, C, D, 0)
            ),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'note/5__8__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'note/5__8__0'(N, A, B, C, D, E, F)
        ).
'note/5__8'(A, B, C, D, E, F) :-
        'note/5__9'(A, B, C, D, E, F).
'note/5__9'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), G), !,
        'note/5__9__0'(G, A, B, C, D, E, F).
'note/5__9__0'([], B, C, D, E, F, A) :-
        'note/5__10'(B, C, D, E, F, A).
'note/5__9__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            H==C,
            I==D,
            J==E,
            '$via1_multi_hash_anote/5-1234'(k(B,C,D,E), N) ->
            'note/5__9__1'(N, K, L, O, B, C, D, E, F, A)
        ;   'note/5__9__0'(O, B, C, D, E, F, A)
        ).
'note/5__9__1'([], _, _, A, C, D, E, F, G, B) :-
        'note/5__9__0'(A, C, D, E, F, G, B).
'note/5__9__1'([O|R], I, A, B, D, E, F, G, H, C) :-
        (   O=suspension(_,P,_,_,J,K,L,M,N),
            P=mutable(active),
            J==D,
            K==E,
            L==F,
            M==G,
            N=approach,
            '$via1_multi_hash_note/5-1'(D, Q) ->
            'note/5__9__2'(Q, O, R, I, A, B, D, E, F, G, H, C)
        ;   'note/5__9__1'(R, I, A, B, D, E, F, G, H, C)
        ).
'note/5__9__2'([], _, A, J, B, C, E, F, G, H, I, D) :-
        'note/5__9__1'(A, J, B, C, E, F, G, H, I, D).
'note/5__9__2'([Q|T], A, B, K, C, D, F, G, H, I, J, E) :-
        (   Q=suspension(_,R,_,_,L,M,N,O,P),
            R=mutable(active),
            L==F,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,G,H,I,M,N,O), S) ->
            'note/5__9__3'(S, M, N, O, P, Q, T, A, B, K, C, D, F, G, H, I, J, E)
        ;   'note/5__9__2'(T, A, B, K, C, D, F, G, H, I, J, E)
        ).
'note/5__9__3'([], _, _, _, _, _, A, B, C, L, D, E, G, H, I, J, K, F) :-
        'note/5__9__2'(A, B, C, L, D, E, G, H, I, J, K, F).
'note/5__9__3'([Y|B1], N, O, P, Q, A, B, C, D, M, E, F, H, I, J, K, L, G) :-
        (   Y=suspension(_,Z,_,R,S,T,U,V,W,X),
            Z=mutable(active),
            R==H,
            S==I,
            T==J,
            U==K,
            V==N,
            W==O,
            X==P,
            '$via1_multi_hash_octave/5-1234'(k(H,N,O,P), A1) ->
            'note/5__9__4'(A1, Y, B1, N, O, P, Q, A, B, C, D, M, E, F, H, I, J, K, L, G)
        ;   'note/5__9__3'(B1, N, O, P, Q, A, B, C, D, M, E, F, H, I, J, K, L, G)
        ).
'note/5__9__4'([], _, A, O, P, Q, R, B, C, D, E, N, F, G, I, J, K, L, M, H) :-
        'note/5__9__3'(A, O, P, Q, R, B, C, D, E, N, F, G, I, J, K, L, M, H).
'note/5__9__4'([Z|A1], A, B, P, Q, R, S, C, D, E, F, O, G, H, J, K, L, M, N, I) :-
        (   Z=suspension(_,Y,_,_,T,U,V,W,X),
            Y=mutable(active),
            Z\==G,
            T==J,
            U==P,
            V==Q,
            W==R,
            D1=t(111,G,E,I,C,A,Z),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(I, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(Z, D1) ->
            '$extend_history'(I, D1),
            '$activate_constraint_note/5'(_, I),
            interval(N, O, S, X, B1),
            B1>= -2,
            B1=<2,
            (   I=suspension(_,C1,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'note/5__9__4'(A1, A, B, P, Q, R, S, C, D, E, F, O, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'note/5__9__4'(A1, A, B, P, Q, R, S, C, D, E, F, O, G, H, J, K, L, M, N, I)
        ).
'note/5__9'(A, B, C, D, E, F) :-
        'note/5__10'(A, B, C, D, E, F).
'note/5__10'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'note/5__10__0'(G, A, B, C, D, E, F).
'note/5__10__0'([], B, C, D, E, F, A) :-
        'note/5__11'(B, C, D, E, F, A).
'note/5__10__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            '$via1_multi_hash_anote/5-1234'(k(B,H,I,J), N) ->
            'note/5__10__1'(N, H, I, J, K, L, O, B, C, D, E, F, A)
        ;   'note/5__10__0'(O, B, C, D, E, F, A)
        ).
'note/5__10__1'([], _, _, _, _, _, A, C, D, E, F, G, B) :-
        'note/5__10__0'(A, C, D, E, F, G, B).
'note/5__10__1'([R|U], I, J, K, L, A, B, D, E, F, G, H, C) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            M==D,
            N==I,
            O==J,
            P==K,
            Q=approach,
            '$via1_multi_hash_note/5-1234'(k(D,I,J,K), T) ->
            'note/5__10__2'(T, R, U, I, J, K, L, A, B, D, E, F, G, H, C)
        ;   'note/5__10__1'(U, I, J, K, L, A, B, D, E, F, G, H, C)
        ).
'note/5__10__2'([], _, A, J, K, L, M, B, C, E, F, G, H, I, D) :-
        'note/5__10__1'(A, J, K, L, M, B, C, E, F, G, H, I, D).
'note/5__10__2'([T|W], A, B, K, L, M, N, C, D, F, G, H, I, J, E) :-
        (   T=suspension(_,U,_,_,O,P,Q,R,S),
            U=mutable(active),
            O==F,
            P==K,
            Q==L,
            R==M,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,K,L,M,G,H,I), V) ->
            'note/5__10__3'(V, S, T, W, A, B, K, L, M, N, C, D, F, G, H, I, J, E)
        ;   'note/5__10__2'(W, A, B, K, L, M, N, C, D, F, G, H, I, J, E)
        ).
'note/5__10__3'([], _, _, A, B, C, L, M, N, O, D, E, G, H, I, J, K, F) :-
        'note/5__10__2'(A, B, C, L, M, N, O, D, E, G, H, I, J, K, F).
'note/5__10__3'([Y|B1], Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G) :-
        (   Y=suspension(_,Z,_,R,S,T,U,V,W,X),
            Z=mutable(active),
            R==H,
            S==M,
            T==N,
            U==O,
            V==I,
            W==J,
            X==K,
            '$via1_multi_hash_octave/5-1234'(k(H,I,J,K), A1) ->
            'note/5__10__4'(A1, Y, B1, Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G)
        ;   'note/5__10__3'(B1, Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G)
        ).
'note/5__10__4'([], _, A, R, B, C, D, E, N, O, P, Q, F, G, I, J, K, L, M, H) :-
        'note/5__10__3'(A, R, B, C, D, E, N, O, P, Q, F, G, I, J, K, L, M, H).
'note/5__10__4'([Z|A1], A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I) :-
        (   Z=suspension(_,Y,_,_,T,U,V,W,X),
            Y=mutable(active),
            Z\==G,
            T==J,
            U==K,
            V==L,
            W==M,
            D1=t(111,G,E,C,I,A,Z),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(I, D1),
            '$novel_production'(A, D1),
            '$novel_production'(Z, D1) ->
            '$extend_history'(I, D1),
            '$activate_constraint_note/5'(_, I),
            interval(S, R, N, X, B1),
            B1>= -2,
            B1=<2,
            (   I=suspension(_,C1,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'note/5__10__4'(A1, A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'note/5__10__4'(A1, A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I)
        ).
'note/5__10'(A, B, C, D, E, F) :-
        'note/5__11'(A, B, C, D, E, F).
'note/5__11'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(make_notes, G), !,
        'note/5__11__0'(G, A, B, C, D, E, F).
'note/5__11__0'([], B, C, D, E, F, A) :-
        'note/5__12'(B, C, D, E, F, A).
'note/5__11__0'([I|J], B, C, D, E, F, A) :-
        (   I=suspension(_,H,_,_,G),
            H=mutable(active),
            G=make_notes,
            L=t(112,I,A),
            '$novel_production'(I, L),
            '$novel_production'(A, L),
            B\==drums,
            B\==chords ->
            '$extend_history'(A, L),
            '$activate_constraint_note/5'(_, A),
            debugwriteln(checking_scale(B,C,D,E,F)),
            (   member(F, [r,c,d,e,f,g,a,b]) ->
                true
            ;   msw(scale(B), no)
            ),
            debugwriteln(ok),
            (   A=suspension(_,K,_,_,_,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'note/5__11__0'(J, B, C, D, E, F, A)
            ;   true
            )
        ;   'note/5__11__0'(J, B, C, D, E, F, A)
        ).
'note/5__11'(A, B, C, D, E, F) :-
        'note/5__12'(A, B, C, D, E, F).
'note/5__12'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(join_notes, G), !,
        'note/5__12__0'(G, A, B, C, D, E, F).
'note/5__12__0'([], B, C, D, E, F, A) :-
        'note/5__13'(B, C, D, E, F, A).
'note/5__12__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=join_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, J) ->
            'note/5__12__1'(J, H, K, B, C, D, E, F, A)
        ;   'note/5__12__0'(K, B, C, D, E, F, A)
        ).
'note/5__12__1'([], _, A, C, D, E, F, G, B) :-
        'note/5__12__0'(A, C, D, E, F, G, B).
'note/5__12__1'([J|M], A, B, D, E, F, G, H, C) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I==E,
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', L) ->
            'note/5__12__2'(L, J, M, A, B, D, E, F, G, H, C)
        ;   'note/5__12__1'(M, A, B, D, E, F, G, H, C)
        ).
'note/5__12__2'([], _, A, B, C, E, F, G, H, I, D) :-
        'note/5__12__1'(A, B, C, E, F, G, H, I, D).
'note/5__12__2'([L|O], A, B, C, D, F, G, H, I, J, E) :-
        (   L=suspension(_,M,_,_,K),
            M=mutable(active),
            L\==A,
            '$via1_multi_hash_next_beat/7-12345'(k(F,G,H,I,K), N) ->
            'note/5__12__3'(N, K, L, O, A, B, C, D, F, G, H, I, J, E)
        ;   'note/5__12__2'(O, A, B, C, D, F, G, H, I, J, E)
        ).
'note/5__12__3'([], _, _, A, B, C, D, E, G, H, I, J, K, F) :-
        'note/5__12__2'(A, B, C, D, E, G, H, I, J, K, F).
'note/5__12__3'([U|X], M, A, B, C, D, E, F, H, I, J, K, L, G) :-
        (   U=suspension(_,V,_,N,O,P,Q,R,S,T),
            V=mutable(active),
            N==H,
            O==I,
            P==J,
            Q==K,
            R==M,
            '$via1_multi_hash_note/5-12345'(k(H,M,S,T,L), W) ->
            'note/5__12__4'(W, S, T, U, X, M, A, B, C, D, E, F, H, I, J, K, L, G)
        ;   'note/5__12__3'(X, M, A, B, C, D, E, F, H, I, J, K, L, G)
        ).
'note/5__12__4'([], _, _, _, A, N, B, C, D, E, F, G, I, J, K, L, M, H) :-
        'note/5__12__3'(A, N, B, C, D, E, F, G, I, J, K, L, M, H).
'note/5__12__4'([X|Y], P, Q, A, B, O, C, D, E, F, G, H, J, K, L, M, N, I) :-
        (   X=suspension(_,W,_,_,R,S,T,U,V),
            W=mutable(active),
            R==J,
            S==O,
            T==P,
            U==Q,
            V==N,
            D1=t(136,G,E,C,I,A,X),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(I, D1),
            '$novel_production'(A, D1),
            '$novel_production'(X, D1),
            J\==drums ->
            '$extend_history'(I, D1),
            '$activate_constraint_note/5'(_, I),
            (   K=O ->
                Z=yes
            ;   Z=no
            ),
            (   L=P ->
                A1=yes
            ;   A1=no
            ),
            msw(join_notes(J,Z,A1), B1),
            (   B1=1 ->
                debugwriteln(join_notes(J,K,L,M,N,O,P,Q)),
                tied(J, K, L, M),
                debugwriteln(joined(N))
            ;   B1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,C1,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'note/5__12__4'(Y, P, Q, A, B, O, C, D, E, F, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'note/5__12__4'(Y, P, Q, A, B, O, C, D, E, F, G, H, J, K, L, M, N, I)
        ).
'note/5__12'(A, B, C, D, E, F) :-
        'note/5__13'(A, B, C, D, E, F).
'note/5__13'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(join_notes, G), !,
        'note/5__13__0'(G, A, B, C, D, E, F).
'note/5__13__0'([], B, C, D, E, F, A) :-
        'note/5__14'(B, C, D, E, F, A).
'note/5__13__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=join_notes,
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', J) ->
            'note/5__13__1'(J, H, K, B, C, D, E, F, A)
        ;   'note/5__13__0'(K, B, C, D, E, F, A)
        ).
'note/5__13__1'([], _, A, C, D, E, F, G, B) :-
        'note/5__13__0'(A, C, D, E, F, G, B).
'note/5__13__1'([J|M], A, B, D, E, F, G, H, C) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            '$via1_multi_hash_unspecified_measure/1-1'(E, L) ->
            'note/5__13__2'(L, I, J, M, A, B, D, E, F, G, H, C)
        ;   'note/5__13__1'(M, A, B, D, E, F, G, H, C)
        ).
'note/5__13__2'([], _, _, A, B, C, E, F, G, H, I, D) :-
        'note/5__13__1'(A, B, C, E, F, G, H, I, D).
'note/5__13__2'([M|P], K, A, B, C, D, F, G, H, I, J, E) :-
        (   M=suspension(_,N,_,_,L),
            N=mutable(active),
            M\==A,
            L==G,
            '$via1_multi_hash_note/5-125'(k(F,K,J), O) ->
            'note/5__13__3'(O, M, P, K, A, B, C, D, F, G, H, I, J, E)
        ;   'note/5__13__2'(P, K, A, B, C, D, F, G, H, I, J, E)
        ).
'note/5__13__3'([], _, A, L, B, C, D, E, G, H, I, J, K, F) :-
        'note/5__13__2'(A, L, B, C, D, E, G, H, I, J, K, F).
'note/5__13__3'([S|V], A, B, M, C, D, E, F, H, I, J, K, L, G) :-
        (   S=suspension(_,T,_,_,N,O,P,Q,R),
            T=mutable(active),
            N==H,
            O==M,
            R==L,
            '$via1_multi_hash_next_beat/7-1234567'(k(H,M,P,Q,I,J,K), U) ->
            'note/5__13__4'(U, P, Q, S, V, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ;   'note/5__13__3'(V, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ).
'note/5__13__4'([], _, _, _, A, B, C, N, D, E, F, G, I, J, K, L, M, H) :-
        'note/5__13__3'(A, B, C, N, D, E, F, G, I, J, K, L, M, H).
'note/5__13__4'([Z|A1], P, Q, A, B, C, D, O, E, F, G, H, J, K, L, M, N, I) :-
        (   Z=suspension(_,Y,_,R,S,T,U,V,W,X),
            Y=mutable(active),
            R==J,
            S==O,
            T==P,
            U==Q,
            V==K,
            W==L,
            X==M,
            F1=t(136,G,E,C,A,Z,I),
            '$novel_production'(G, F1),
            '$novel_production'(E, F1),
            '$novel_production'(C, F1),
            '$novel_production'(A, F1),
            '$novel_production'(Z, F1),
            '$novel_production'(I, F1),
            J\==drums ->
            '$extend_history'(I, F1),
            '$activate_constraint_note/5'(_, I),
            (   O=K ->
                B1=yes
            ;   B1=no
            ),
            (   P=L ->
                C1=yes
            ;   C1=no
            ),
            msw(join_notes(J,B1,C1), D1),
            (   D1=1 ->
                debugwriteln(join_notes(J,O,P,Q,N,K,L,M)),
                tied(J, O, P, Q),
                debugwriteln(joined(N))
            ;   D1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,E1,_,_,_,_,_,_,_),
                E1=mutable(active) ->
                'chr update_mutable'(inactive, E1),
                'note/5__13__4'(A1, P, Q, A, B, C, D, O, E, F, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'note/5__13__4'(A1, P, Q, A, B, C, D, O, E, F, G, H, J, K, L, M, N, I)
        ).
'note/5__13'(A, B, C, D, E, F) :-
        'note/5__14'(A, B, C, D, E, F).
'note/5__14'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(join_notes, G), !,
        'note/5__14__0'(G, A, B, C, D, E, F).
'note/5__14__0'([], B, C, D, E, F, A) :-
        'note/5__15'(B, C, D, E, F, A).
'note/5__14__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=join_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, J) ->
            'note/5__14__1'(J, H, K, B, C, D, E, F, A)
        ;   'note/5__14__0'(K, B, C, D, E, F, A)
        ).
'note/5__14__1'([], _, A, C, D, E, F, G, B) :-
        'note/5__14__0'(A, C, D, E, F, G, B).
'note/5__14__1'([J|M], A, B, D, E, F, G, H, C) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I==E,
            '$via1_multi_hash_next_beat/7-12345'(k(D,E,F,G,E), L) ->
            'note/5__14__2'(L, J, M, A, B, D, E, F, G, H, C)
        ;   'note/5__14__1'(M, A, B, D, E, F, G, H, C)
        ).
'note/5__14__2'([], _, A, B, C, E, F, G, H, I, D) :-
        'note/5__14__1'(A, B, C, E, F, G, H, I, D).
'note/5__14__2'([R|U], A, B, C, D, F, G, H, I, J, E) :-
        (   R=suspension(_,S,_,K,L,M,N,O,P,Q),
            S=mutable(active),
            K==F,
            L==G,
            M==H,
            N==I,
            O=G,
            '$via1_multi_hash_note/5-12345'(k(F,G,P,Q,J), T) ->
            'note/5__14__3'(T, P, Q, R, U, A, B, C, D, F, G, H, I, J, E)
        ;   'note/5__14__2'(U, A, B, C, D, F, G, H, I, J, E)
        ).
'note/5__14__3'([], _, _, _, A, B, C, D, E, G, H, I, J, K, F) :-
        'note/5__14__2'(A, B, C, D, E, G, H, I, J, K, F).
'note/5__14__3'([U|V], M, N, A, B, C, D, E, F, H, I, J, K, L, G) :-
        (   U=suspension(_,T,_,_,O,P,Q,R,S),
            T=mutable(active),
            O==H,
            P==I,
            Q==M,
            R==N,
            S==L,
            A1=t(137,E,C,G,A,U),
            '$novel_production'(E, A1),
            '$novel_production'(C, A1),
            '$novel_production'(G, A1),
            '$novel_production'(A, A1),
            '$novel_production'(U, A1),
            H\==drums ->
            '$extend_history'(G, A1),
            '$activate_constraint_note/5'(_, G),
            (   I=_ ->
                W=yes
            ;   W=no
            ),
            (   J=M ->
                X=yes
            ;   X=no
            ),
            msw(join_notes(H,W,X), Y),
            (   Y=1 ->
                debugwriteln(join_notes(H,I,J,K,L,I,M,N)),
                tied(H, I, J, K),
                debugwriteln(joined(L))
            ;   Y=2 ->
                true
            ;   fail
            ),
            (   G=suspension(_,Z,_,_,_,_,_,_,_),
                Z=mutable(active) ->
                'chr update_mutable'(inactive, Z),
                'note/5__14__3'(V, M, N, A, B, C, D, E, F, H, I, J, K, L, G)
            ;   true
            )
        ;   'note/5__14__3'(V, M, N, A, B, C, D, E, F, H, I, J, K, L, G)
        ).
'note/5__14'(A, B, C, D, E, F) :-
        'note/5__15'(A, B, C, D, E, F).
'note/5__15'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(join_notes, G), !,
        'note/5__15__0'(G, A, B, C, D, E, F).
'note/5__15__0'([], B, C, D, E, F, A) :-
        'note/5__16'(B, C, D, E, F, A).
'note/5__15__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            G=join_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, J) ->
            'note/5__15__1'(J, H, K, B, C, D, E, F, A)
        ;   'note/5__15__0'(K, B, C, D, E, F, A)
        ).
'note/5__15__1'([], _, A, C, D, E, F, G, B) :-
        'note/5__15__0'(A, C, D, E, F, G, B).
'note/5__15__1'([J|M], A, B, D, E, F, G, H, C) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I==E,
            '$via1_multi_hash_note/5-125'(k(D,E,H), L) ->
            'note/5__15__2'(L, J, M, A, B, D, E, F, G, H, C)
        ;   'note/5__15__1'(M, A, B, D, E, F, G, H, C)
        ).
'note/5__15__2'([], _, A, B, C, E, F, G, H, I, D) :-
        'note/5__15__1'(A, B, C, E, F, G, H, I, D).
'note/5__15__2'([P|S], A, B, C, D, F, G, H, I, J, E) :-
        (   P=suspension(_,Q,_,_,K,L,M,N,O),
            Q=mutable(active),
            K==F,
            L==G,
            O==J,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,G,M,N,G,H,I), R) ->
            'note/5__15__3'(R, M, N, P, S, A, B, C, D, F, G, H, I, J, E)
        ;   'note/5__15__2'(S, A, B, C, D, F, G, H, I, J, E)
        ).
'note/5__15__3'([], _, _, _, A, B, C, D, E, G, H, I, J, K, F) :-
        'note/5__15__2'(A, B, C, D, E, G, H, I, J, K, F).
'note/5__15__3'([W|X], M, N, A, B, C, D, E, F, H, I, J, K, L, G) :-
        (   W=suspension(_,V,_,O,P,Q,R,S,T,U),
            V=mutable(active),
            O==H,
            P==I,
            Q==M,
            R==N,
            S=I,
            T==J,
            U==K,
            C1=t(137,E,C,A,W,G),
            '$novel_production'(E, C1),
            '$novel_production'(C, C1),
            '$novel_production'(A, C1),
            '$novel_production'(W, C1),
            '$novel_production'(G, C1),
            H\==drums ->
            '$extend_history'(G, C1),
            '$activate_constraint_note/5'(_, G),
            (   I=_ ->
                Y=yes
            ;   Y=no
            ),
            (   M=J ->
                Z=yes
            ;   Z=no
            ),
            msw(join_notes(H,Y,Z), A1),
            (   A1=1 ->
                debugwriteln(join_notes(H,I,M,N,L,I,J,K)),
                tied(H, I, M, N),
                debugwriteln(joined(L))
            ;   A1=2 ->
                true
            ;   fail
            ),
            (   G=suspension(_,B1,_,_,_,_,_,_,_),
                B1=mutable(active) ->
                'chr update_mutable'(inactive, B1),
                'note/5__15__3'(X, M, N, A, B, C, D, E, F, H, I, J, K, L, G)
            ;   true
            )
        ;   'note/5__15__3'(X, M, N, A, B, C, D, E, F, H, I, J, K, L, G)
        ).
'note/5__15'(A, B, C, D, E, F) :-
        'note/5__16'(A, B, C, D, E, F).
'note/5__16'(A, B, C, D, E, F) :-
        '$via1_multi_hash_beat/5-1234'(k(A,B,C,D), G), !,
        'note/5__16__0'(G, A, B, C, D, E, F).
'note/5__16__0'([], B, C, D, E, F, A) :-
        'note/5__17'(B, C, D, E, F, A).
'note/5__16__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            H==C,
            I==D,
            J==E,
            '$via1_multi_hash_show_notes/4-1234'(k(B,C,D,E), N) ->
            'note/5__16__1'(N, K, L, O, B, C, D, E, F, A)
        ;   'note/5__16__0'(O, B, C, D, E, F, A)
        ).
'note/5__16__1'([], _, _, A, C, D, E, F, G, B) :-
        'note/5__16__0'(A, C, D, E, F, G, B).
'note/5__16__1'([O|P], I, A, B, D, E, F, G, H, C) :-
        (   O=suspension(_,N,_,J,K,L,M),
            N=mutable(active),
            J==D,
            K==E,
            L==F,
            M==G,
            R=t(148,C,A,O),
            '$novel_production'(C, R),
            '$novel_production'(A, R),
            '$novel_production'(O, R) ->
            '$extend_history'(C, R),
            '$activate_constraint_note/5'(_, C),
            show_note(H),
            maybe_show_octave(D, E, F, G),
            write(I),
            show_mods(H),
            write(' '),
            (   C=suspension(_,Q,_,_,_,_,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'note/5__16__1'(P, I, A, B, D, E, F, G, H, C)
            ;   true
            )
        ;   'note/5__16__1'(P, I, A, B, D, E, F, G, H, C)
        ).
'note/5__16'(A, B, C, D, E, F) :-
        'note/5__17'(A, B, C, D, E, F).
'note/5__17'(A, B, C, D, E, F) :-
        '$via1_multi_hash_maybe_show_octave/4-1234'(k(A,B,C,D), G), !,
        'note/5__17__0'(G, A, B, C, D, E, F).
'note/5__17__0'([], B, C, D, E, F, A) :-
        'note/5__18'(B, C, D, E, F, A).
'note/5__17__0'([K|M], A, B, C, D, E, F) :-
        (   K=suspension(_,L,_,G,H,I,J),
            L=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            is_rest(E) ->
            '$remove_constraint_internal_maybe_show_octave/4'(K, N),
            (   N=yes ->
                '$delete_from_store_maybe_show_octave/4'(K)
            ;   true
            ),
            'note/5__17__0'(M, A, B, C, D, E, F)
        ;   'note/5__17__0'(M, A, B, C, D, E, F)
        ).
'note/5__17'(A, B, C, D, E, F) :-
        'note/5__18'(A, B, C, D, E, F).
'note/5__18'(_, _, _, _, _, A) :-
        '$activate_constraint_note/5'(_, A).
octave(A, B, C, D, E) :-
        '$insert_constraint_internal_octave/5'(F, A, B, C, D, E),
        '$insert_in_store_octave/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'octave/5__0'(A, B, C, D, E, F).
'octave/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_failrules/1-1'(nr, G), !,
        'octave/5__0__0'(G, A, B, C, D, E, F).
'octave/5__0__0'([], A, B, C, D, E, F) :-
        'octave/5__1'(A, B, C, D, E, F).
'octave/5__0__0'([I|J], B, C, D, E, F, A) :-
        (   I=suspension(_,H,_,_,G),
            H=mutable(active),
            G=nr,
            L=t(23,I,A),
            '$novel_production'(I, L),
            '$novel_production'(A, L) ->
            '$extend_history'(A, L),
            '$activate_constraint_octave/5'(_, A),
            check(octave(B,C,D,E,F)),
            (   A=suspension(_,K,_,_,_,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'octave/5__0__0'(J, B, C, D, E, F, A)
            ;   true
            )
        ;   'octave/5__0__0'(J, B, C, D, E, F, A)
        ).
'octave/5__0'(A, B, C, D, E, F) :-
        'octave/5__1'(A, B, C, D, E, F).
'octave/5__1'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave_d/5-1'(A, G), !,
        'octave/5__1__0'(G, A, B, C, D, E, F).
'octave/5__1__0'([], B, C, D, E, F, A) :-
        'octave/5__2'(B, C, D, E, F, A).
'octave/5__1__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_next_beat/7-1234567'(k(A,B,C,D,H,I,J), P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_,_,_,_,_,_),
            Q=mutable(active) ->
            '$remove_constraint_internal_octave_d/5'(L, R),
            (   R=yes ->
                '$delete_from_store_octave_d/5'(L)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            S is E+K,
            octave_rangecheck(A, H, I, J, S),
            (   F=suspension(_,T,_,_,_,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'octave/5__1__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__1__0'(N, A, B, C, D, E, F)
        ).
'octave/5__1'(A, B, C, D, E, F) :-
        'octave/5__2'(A, B, C, D, E, F).
'octave/5__2'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(make_notes, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active),
        '$via1_multi_hash_max_jump/2-1'(A, L),
        'chr sbag_member'(J, L),
        J=suspension(_,M,_,_,K),
        M=mutable(active),
        '$via1_multi_hash_octave/5-1'(A, S),
        'chr sbag_member'(N, S),
        N=suspension(_,T,_,_,_,O,P,Q,R),
        T=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,O,P,Q), W),
        'chr sbag_member'(U, W),
        U=suspension(_,X,_,_,_,_,_,_,V),
        X=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), A1),
        'chr sbag_member'(Y, A1),
        Y=suspension(_,B1,_,_,_,_,_,_,Z),
        B1=mutable(active),
        Y\==U,
        '$via1_multi_hash_next_beat/7-1234567'(k(A,O,P,Q,B,C,D), D1),
        'chr sbag_member'(C1, D1),
        C1=suspension(_,E1,_,_,_,_,_,_,_,_),
        E1=mutable(active),
        interval(V, R, Z, E, F1),
        F1>K, !,
        '$remove_constraint_internal_octave/5'(F, G1),
        (   G1=yes ->
            '$delete_from_store_octave/5'(F)
        ;   true
        ),
        wfail(jumpup(F1)).
'octave/5__2'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'octave/5__2__0'(G, A, B, C, D, E, F).
'octave/5__2__0'([], B, C, D, E, F, A) :-
        'octave/5__3'(B, C, D, E, F, A).
'octave/5__2__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(A,B,C,D,H,I,J), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, E, A1, K, H1),
            H1>S ->
            '$remove_constraint_internal_octave/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            wfail(jumpup(H1)),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'octave/5__2__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__2__0'(N, A, B, C, D, E, F)
        ).
'octave/5__2'(A, B, C, D, E, F) :-
        'octave/5__3'(A, B, C, D, E, F).
'octave/5__3'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(make_notes, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active),
        '$via1_multi_hash_max_jump/2-1'(A, L),
        'chr sbag_member'(J, L),
        J=suspension(_,M,_,_,K),
        M=mutable(active),
        '$via1_multi_hash_octave/5-1'(A, S),
        'chr sbag_member'(N, S),
        N=suspension(_,T,_,_,_,O,P,Q,R),
        T=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,O,P,Q), W),
        'chr sbag_member'(U, W),
        U=suspension(_,X,_,_,_,_,_,_,V),
        X=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), A1),
        'chr sbag_member'(Y, A1),
        Y=suspension(_,B1,_,_,_,_,_,_,Z),
        B1=mutable(active),
        Y\==U,
        '$via1_multi_hash_next_beat/7-1234567'(k(A,O,P,Q,B,C,D), D1),
        'chr sbag_member'(C1, D1),
        C1=suspension(_,E1,_,_,_,_,_,_,_,_),
        E1=mutable(active),
        interval(V, R, Z, E, F1),
        F1< -K, !,
        '$remove_constraint_internal_octave/5'(F, G1),
        (   G1=yes ->
            '$delete_from_store_octave/5'(F)
        ;   true
        ),
        wfail(jumpdown(F1)).
'octave/5__3'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'octave/5__3__0'(G, A, B, C, D, E, F).
'octave/5__3__0'([], B, C, D, E, F, A) :-
        'octave/5__4'(B, C, D, E, F, A).
'octave/5__3__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(A,B,C,D,H,I,J), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, E, A1, K, H1),
            H1< -S ->
            '$remove_constraint_internal_octave/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(L)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            wfail(jumpdown(H1)),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'octave/5__3__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__3__0'(N, A, B, C, D, E, F)
        ).
'octave/5__3'(A, B, C, D, E, F) :-
        'octave/5__4'(A, B, C, D, E, F).
'octave/5__4'(A, B, C, D, E, F) :-
        '$via1_multi_hash_same_note_counter/5-1234'(k(A,B,C,D), G), !,
        'octave/5__4__0'(G, A, B, C, D, E, F).
'octave/5__4__0'([], B, C, D, E, F, A) :-
        'octave/5__5'(B, C, D, E, F, A).
'octave/5__4__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,_,_,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_next_beat/7-1234'(k(A,B,C,D), Z),
            'chr sbag_member'(V, Z),
            V=suspension(_,A1,_,_,_,_,_,W,X,Y),
            A1=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,W,X,Y), D1),
            'chr sbag_member'(B1, D1),
            B1=suspension(_,E1,_,_,_,_,_,_,C1),
            E1=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,W,X,Y), H1),
            'chr sbag_member'(F1, H1),
            F1=suspension(_,I1,_,_,_,_,_,_,G1),
            I1=mutable(active),
            F1\==R ->
            '$remove_constraint_internal_same_note_counter/5'(L, J1),
            (   J1=yes ->
                '$delete_from_store_same_note_counter/5'(L)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            (   E==C1,
                S==G1 ->
                K1 is K+1,
                same_note_counter(A, W, X, Y, K1)
            ;   same_note_counter(A, W, X, Y, 0)
            ),
            (   F=suspension(_,L1,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'octave/5__4__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__4__0'(N, A, B, C, D, E, F)
        ).
'octave/5__4'(A, B, C, D, E, F) :-
        'octave/5__5'(A, B, C, D, E, F).
'octave/5__5'(A, B, C, D, E, F) :-
        '$via1_multi_hash_same_note_counter/5-1'(A, G), !,
        'octave/5__5__0'(G, A, B, C, D, E, F).
'octave/5__5__0'([], B, C, D, E, F, A) :-
        'octave/5__6'(B, C, D, E, F, A).
'octave/5__5__0'([L|N], A, B, C, D, E, F) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==A,
            '$via1_multi_hash_phase/1-1'(make_notes, P),
            'chr sbag_member'(O, P),
            O=suspension(_,Q,_,_,_),
            Q=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,H,I,J), T),
            'chr sbag_member'(R, T),
            R=suspension(_,U,_,_,_,_,_,_,S),
            U=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,H,I,J), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_next_beat/7-1234567'(k(A,H,I,J,B,C,D), A1),
            'chr sbag_member'(Z, A1),
            Z=suspension(_,B1,_,_,_,_,_,_,_,_),
            B1=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), E1),
            'chr sbag_member'(C1, E1),
            C1=suspension(_,F1,_,_,_,_,_,_,D1),
            F1=mutable(active),
            C1\==V ->
            '$remove_constraint_internal_same_note_counter/5'(L, G1),
            (   G1=yes ->
                '$delete_from_store_same_note_counter/5'(L)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            (   S==E,
                W==D1 ->
                H1 is K+1,
                same_note_counter(A, B, C, D, H1)
            ;   same_note_counter(A, B, C, D, 0)
            ),
            (   F=suspension(_,I1,_,_,_,_,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'octave/5__5__0'(N, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__5__0'(N, A, B, C, D, E, F)
        ).
'octave/5__5'(A, B, C, D, E, F) :-
        'octave/5__6'(A, B, C, D, E, F).
'octave/5__6'(A, B, C, D, E, F) :-
        '$via1_multi_hash_anote/5-1234'(k(A,B,C,D), G), !,
        'octave/5__6__0'(G, A, B, C, D, E, F).
'octave/5__6__0'([], B, C, D, E, F, A) :-
        'octave/5__7'(B, C, D, E, F, A).
'octave/5__6__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            H==C,
            I==D,
            J==E,
            K=approach,
            '$via1_multi_hash_note/5-1234'(k(B,C,D,E), N) ->
            'octave/5__6__1'(N, L, O, B, C, D, E, F, A)
        ;   'octave/5__6__0'(O, B, C, D, E, F, A)
        ).
'octave/5__6__1'([], _, A, C, D, E, F, G, B) :-
        'octave/5__6__0'(A, C, D, E, F, G, B).
'octave/5__6__1'([N|Q], A, B, D, E, F, G, H, C) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            I==D,
            J==E,
            K==F,
            L==G,
            '$via1_multi_hash_note/5-1'(D, P) ->
            'octave/5__6__2'(P, M, N, Q, A, B, D, E, F, G, H, C)
        ;   'octave/5__6__1'(Q, A, B, D, E, F, G, H, C)
        ).
'octave/5__6__2'([], _, _, A, B, C, E, F, G, H, I, D) :-
        'octave/5__6__1'(A, B, C, E, F, G, H, I, D).
'octave/5__6__2'([Q|T], K, A, B, C, D, F, G, H, I, J, E) :-
        (   Q=suspension(_,R,_,_,L,M,N,O,P),
            R=mutable(active),
            Q\==A,
            L==F,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,G,H,I,M,N,O), S) ->
            'octave/5__6__3'(S, M, N, O, P, Q, T, K, A, B, C, D, F, G, H, I, J, E)
        ;   'octave/5__6__2'(T, K, A, B, C, D, F, G, H, I, J, E)
        ).
'octave/5__6__3'([], _, _, _, _, _, A, L, B, C, D, E, G, H, I, J, K, F) :-
        'octave/5__6__2'(A, L, B, C, D, E, G, H, I, J, K, F).
'octave/5__6__3'([Y|B1], N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G) :-
        (   Y=suspension(_,Z,_,R,S,T,U,V,W,X),
            Z=mutable(active),
            R==H,
            S==I,
            T==J,
            U==K,
            V==N,
            W==O,
            X==P,
            '$via1_multi_hash_octave/5-1234'(k(H,N,O,P), A1) ->
            'octave/5__6__4'(A1, Y, B1, N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ;   'octave/5__6__3'(B1, N, O, P, Q, A, B, M, C, D, E, F, H, I, J, K, L, G)
        ).
'octave/5__6__4'([], _, A, O, P, Q, R, B, C, N, D, E, F, G, I, J, K, L, M, H) :-
        'octave/5__6__3'(A, O, P, Q, R, B, C, N, D, E, F, G, I, J, K, L, M, H).
'octave/5__6__4'([Z|A1], A, B, P, Q, R, S, C, D, O, E, F, G, H, J, K, L, M, N, I) :-
        (   Z=suspension(_,Y,_,_,T,U,V,W,X),
            Y=mutable(active),
            T==J,
            U==P,
            V==Q,
            W==R,
            D1=t(111,I,G,E,C,A,Z),
            '$novel_production'(I, D1),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(Z, D1) ->
            '$extend_history'(I, D1),
            '$activate_constraint_octave/5'(_, I),
            interval(O, N, S, X, B1),
            B1>= -2,
            B1=<2,
            (   I=suspension(_,C1,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'octave/5__6__4'(A1, A, B, P, Q, R, S, C, D, O, E, F, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'octave/5__6__4'(A1, A, B, P, Q, R, S, C, D, O, E, F, G, H, J, K, L, M, N, I)
        ).
'octave/5__6'(A, B, C, D, E, F) :-
        'octave/5__7'(A, B, C, D, E, F).
'octave/5__7'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, G), !,
        'octave/5__7__0'(G, A, B, C, D, E, F).
'octave/5__7__0'([], B, C, D, E, F, A) :-
        'octave/5__8'(B, C, D, E, F, A).
'octave/5__7__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            '$via1_multi_hash_anote/5-1234'(k(B,H,I,J), N) ->
            'octave/5__7__1'(N, H, I, J, K, L, O, B, C, D, E, F, A)
        ;   'octave/5__7__0'(O, B, C, D, E, F, A)
        ).
'octave/5__7__1'([], _, _, _, _, _, A, C, D, E, F, G, B) :-
        'octave/5__7__0'(A, C, D, E, F, G, B).
'octave/5__7__1'([R|U], I, J, K, L, A, B, D, E, F, G, H, C) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            M==D,
            N==I,
            O==J,
            P==K,
            Q=approach,
            '$via1_multi_hash_note/5-1234'(k(D,I,J,K), T) ->
            'octave/5__7__2'(T, R, U, I, J, K, L, A, B, D, E, F, G, H, C)
        ;   'octave/5__7__1'(U, I, J, K, L, A, B, D, E, F, G, H, C)
        ).
'octave/5__7__2'([], _, A, J, K, L, M, B, C, E, F, G, H, I, D) :-
        'octave/5__7__1'(A, J, K, L, M, B, C, E, F, G, H, I, D).
'octave/5__7__2'([T|W], A, B, K, L, M, N, C, D, F, G, H, I, J, E) :-
        (   T=suspension(_,U,_,_,O,P,Q,R,S),
            U=mutable(active),
            O==F,
            P==K,
            Q==L,
            R==M,
            '$via1_multi_hash_note/5-1234'(k(F,G,H,I), V) ->
            'octave/5__7__3'(V, S, T, W, A, B, K, L, M, N, C, D, F, G, H, I, J, E)
        ;   'octave/5__7__2'(W, A, B, K, L, M, N, C, D, F, G, H, I, J, E)
        ).
'octave/5__7__3'([], _, _, A, B, C, L, M, N, O, D, E, G, H, I, J, K, F) :-
        'octave/5__7__2'(A, B, C, L, M, N, O, D, E, G, H, I, J, K, F).
'octave/5__7__3'([W|Z], Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G) :-
        (   W=suspension(_,X,_,_,R,S,T,U,V),
            X=mutable(active),
            W\==A,
            R==H,
            S==I,
            T==J,
            U==K,
            '$via1_multi_hash_next_beat/7-1234567'(k(H,M,N,O,I,J,K), Y) ->
            'octave/5__7__4'(Y, V, W, Z, Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G)
        ;   'octave/5__7__3'(Z, Q, A, B, C, D, M, N, O, P, E, F, H, I, J, K, L, G)
        ).
'octave/5__7__4'([], _, _, A, R, B, C, D, E, N, O, P, Q, F, G, I, J, K, L, M, H) :-
        'octave/5__7__3'(A, R, B, C, D, E, N, O, P, Q, F, G, I, J, K, L, M, H).
'octave/5__7__4'([C1|D1], T, A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I) :-
        (   C1=suspension(_,B1,_,U,V,W,X,Y,Z,A1),
            B1=mutable(active),
            U==J,
            V==O,
            W==P,
            X==Q,
            Y==K,
            Z==L,
            A1==M,
            G1=t(111,G,E,C,A,C1,I),
            '$novel_production'(G, G1),
            '$novel_production'(E, G1),
            '$novel_production'(C, G1),
            '$novel_production'(A, G1),
            '$novel_production'(C1, G1),
            '$novel_production'(I, G1) ->
            '$extend_history'(I, G1),
            '$activate_constraint_octave/5'(_, I),
            interval(S, R, T, N, E1),
            E1>= -2,
            E1=<2,
            (   I=suspension(_,F1,_,_,_,_,_,_,_),
                F1=mutable(active) ->
                'chr update_mutable'(inactive, F1),
                'octave/5__7__4'(D1, T, A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I)
            ;   true
            )
        ;   'octave/5__7__4'(D1, T, A, B, S, C, D, E, F, O, P, Q, R, G, H, J, K, L, M, N, I)
        ).
'octave/5__7'(A, B, C, D, E, F) :-
        'octave/5__8'(A, B, C, D, E, F).
'octave/5__8'(A, B, C, D, E, F) :-
        nb_getval('$chr_store_global_ground_user:make_notes_measure/1', G), !,
        'octave/5__8__0'(G, A, B, C, D, E, F).
'octave/5__8__0'([], B, C, D, E, F, A) :-
        'octave/5__9'(B, C, D, E, F, A).
'octave/5__8__0'([H|K], B, C, D, E, F, A) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            '$via1_multi_hash_beat/5-12'(k(B,G), J) ->
            'octave/5__8__1'(J, G, H, K, B, C, D, E, F, A)
        ;   'octave/5__8__0'(K, B, C, D, E, F, A)
        ).
'octave/5__8__1'([], _, _, A, C, D, E, F, G, B) :-
        'octave/5__8__0'(A, C, D, E, F, G, B).
'octave/5__8__1'([N|Q], I, A, B, D, E, F, G, H, C) :-
        (   N=suspension(_,O,_,_,J,K,L,M,_),
            O=mutable(active),
            J==D,
            K==I,
            '$via1_multi_hash_mchord/2-1'(I, P) ->
            'octave/5__8__2'(P, L, M, N, Q, I, A, B, D, E, F, G, H, C)
        ;   'octave/5__8__1'(Q, I, A, B, D, E, F, G, H, C)
        ).
'octave/5__8__2'([], _, _, _, A, J, B, C, E, F, G, H, I, D) :-
        'octave/5__8__1'(A, J, B, C, E, F, G, H, I, D).
'octave/5__8__2'([P|S], L, M, A, B, K, C, D, F, G, H, I, J, E) :-
        (   P=suspension(_,Q,_,_,N,O),
            Q=mutable(active),
            N==K,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,G,H,I,K,L,M), R) ->
            'octave/5__8__3'(R, O, P, S, L, M, A, B, K, C, D, F, G, H, I, J, E)
        ;   'octave/5__8__2'(S, L, M, A, B, K, C, D, F, G, H, I, J, E)
        ).
'octave/5__8__3'([], _, _, A, M, N, B, C, L, D, E, G, H, I, J, K, F) :-
        'octave/5__8__2'(A, M, N, B, C, L, D, E, G, H, I, J, K, F).
'octave/5__8__3'([Y|Z], P, A, B, N, O, C, D, M, E, F, H, I, J, K, L, G) :-
        (   Y=suspension(_,X,_,Q,R,S,T,U,V,W),
            X=mutable(active),
            Q==H,
            R==I,
            S==J,
            T==K,
            U==M,
            V==N,
            W==O,
            E1=t(115,E,C,A,G,Y),
            '$novel_production'(E, E1),
            '$novel_production'(C, E1),
            '$novel_production'(A, E1),
            '$novel_production'(G, E1),
            '$novel_production'(Y, E1),
            H\==drums,
            H\==chords ->
            '$extend_history'(G, E1),
            '$activate_constraint_octave/5'(_, G),
            debugwriteln('DEBUG: Making notes for some measure'),
            abstract_beat(M, N, O, A1),
            soft_msw(note_choice(H,A1), B1),
            debugwriteln(picked(note_choice(H,A1),B1)),
            pick_concrete_note(H, P, B1, C1),
            debugwriteln(concrete_note(H,P,B1,C1)),
            anote(H, M, N, O, B1),
            note(H, M, N, O, C1),
            (   C1==r ->
                octave_d(H, M, N, O, 0)
            ;   find_octave_d(H, M, N, O, L)
            ),
            (   G=suspension(_,D1,_,_,_,_,_,_,_),
                D1=mutable(active) ->
                'chr update_mutable'(inactive, D1),
                'octave/5__8__3'(Z, P, A, B, N, O, C, D, M, E, F, H, I, J, K, L, G)
            ;   true
            )
        ;   'octave/5__8__3'(Z, P, A, B, N, O, C, D, M, E, F, H, I, J, K, L, G)
        ).
'octave/5__8'(A, B, C, D, E, F) :-
        'octave/5__9'(A, B, C, D, E, F).
'octave/5__9'(A, B, C, D, E, F) :-
        '$via1_multi_hash_maybe_show_octave/4-1234'(k(A,B,C,D), G), !,
        'octave/5__9__0'(G, A, B, C, D, E, F).
'octave/5__9__0'([], B, C, D, E, F, A) :-
        'octave/5__10'(B, C, D, E, F, A).
'octave/5__9__0'([K|M], A, B, C, D, E, F) :-
        (   K=suspension(_,L,_,G,H,I,J),
            L=mutable(active),
            G==A,
            H==B,
            I==C,
            J==D ->
            '$remove_constraint_internal_maybe_show_octave/4'(K, N),
            (   N=yes ->
                '$delete_from_store_maybe_show_octave/4'(K)
            ;   true
            ),
            '$activate_constraint_octave/5'(_, F),
            octave_notation(E, O),
            write(O),
            (   F=suspension(_,P,_,_,_,_,_,_,_),
                P=mutable(active) ->
                'chr update_mutable'(inactive, P),
                'octave/5__9__0'(M, A, B, C, D, E, F)
            ;   true
            )
        ;   'octave/5__9__0'(M, A, B, C, D, E, F)
        ).
'octave/5__9'(A, B, C, D, E, F) :-
        'octave/5__10'(A, B, C, D, E, F).
'octave/5__10'(_, _, _, _, _, A) :-
        '$activate_constraint_octave/5'(_, A).
tied(A, B, C, D) :-
        '$insert_constraint_internal_tied/4'(E, A, B, C, D),
        '$insert_in_store_tied/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'tied/4__0'(A, B, C, D, E).
'tied/4__0'(A, B, C, D, E) :-
        '$via1_multi_hash_failrules/1-1'(nr, F), !,
        'tied/4__0__0'(F, A, B, C, D, E).
'tied/4__0__0'([], B, C, D, E, A) :-
        'tied/4__1'(B, C, D, E, A).
'tied/4__0__0'([H|I], B, C, D, E, A) :-
        (   H=suspension(_,G,_,_,F),
            G=mutable(active),
            F=nr,
            J=t(25,H,A),
            '$novel_production'(H, J),
            '$novel_production'(A, J) ->
            '$extend_history'(A, J),
            check(tied(B,C,D,E)),
            'tied/4__0__0'(I, B, C, D, E, A)
        ;   'tied/4__0__0'(I, B, C, D, E, A)
        ).
'tied/4__0'(A, B, C, D, E) :-
        'tied/4__1'(A, B, C, D, E).
'tied/4__1'(A, B, C, D, E) :-
        '$via1_multi_hash_show_notes/4-1234'(k(A,B,C,D), F), !,
        'tied/4__1__0'(F, A, B, C, D, E).
'tied/4__1__0'([], B, C, D, E, A) :-
        'tied/4__2'(B, C, D, E, A).
'tied/4__1__0'([K|L], B, C, D, E, A) :-
        (   K=suspension(_,J,_,F,G,H,I),
            J=mutable(active),
            F==B,
            G==C,
            H==D,
            I==E,
            M=t(149,A,K),
            '$novel_production'(A, M),
            '$novel_production'(K, M) ->
            '$extend_history'(A, M),
            write(' ~ '),
            'tied/4__1__0'(L, B, C, D, E, A)
        ;   'tied/4__1__0'(L, B, C, D, E, A)
        ).
'tied/4__1'(A, B, C, D, E) :-
        'tied/4__2'(A, B, C, D, E).
'tied/4__2'(_, _, _, _, A) :-
        '$activate_constraint_tied/4'(_, A).
make_measures(A) :-
        '$insert_constraint_internal_make_measures/1'(B, A),
        '$insert_in_store_make_measures/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'make_measures/1__0'(A, B).
'make_measures/1__0'(0, A) :-
        '$via1_multi_hash_unspecified_successor/2-1'(0, D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,_,C),
        E=mutable(active), !,
        '$remove_constraint_internal_make_measures/1'(A, F),
        (   F=yes ->
            '$delete_from_store_make_measures/1'(A)
        ;   true
        ),
        phase(split_beats(C)).
'make_measures/1__0'(A, B) :-
        A>0, !,
        '$remove_constraint_internal_make_measures/1'(B, D),
        (   D=yes ->
            '$delete_from_store_make_measures/1'(B)
        ;   true
        ),
        debugwrite('DEBUG: '),
        debugwriteln(measure(A)),
        measure(A),
        C is A-1,
        debugwrite('DEBUG: '),
        debugwriteln(next_measure(C,A)),
        next_measure(C, A),
        debugwrite('DEBUG: '),
        debugwriteln(make_measures(C)),
        make_measures(C).
'make_measures/1__0'(_, A) :-
        '$activate_constraint_make_measures/1'(_, A).
next_measure(A, B) :-
        '$insert_constraint_internal_next_measure/2'(C, A, B),
        '$insert_in_store_next_measure/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'next_measure/2__0'(A, B, C).
'next_measure/2__0'(A, B, C) :-
        '$via1_multi_hash_next_beat/7-5'(A, D), !,
        'next_measure/2__0__0'(D, A, B, C).
'next_measure/2__0__0'([], B, C, A) :-
        'next_measure/2__1'(B, C, A).
'next_measure/2__0__0'([J|L], A, B, C) :-
        (   J=suspension(_,K,_,D,E,F,G,H,I,_),
            K=mutable(active),
            H==A,
            '$via1_multi_hash_meter/2-1'(I, N),
            'chr sbag_member'(M, N),
            M=suspension(_,O,_,_,_,_),
            O=mutable(active) ->
            '$remove_constraint_internal_next_beat/7'(J, P),
            (   P=yes ->
                '$delete_from_store_next_beat/7'(J)
            ;   true
            ),
            '$activate_constraint_next_measure/2'(_, C),
            next_beat(D, E, F, G, B, 0, 0),
            (   C=suspension(_,Q,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'next_measure/2__0__0'(L, A, B, C)
            ;   true
            )
        ;   'next_measure/2__0__0'(L, A, B, C)
        ).
'next_measure/2__0'(A, B, C) :-
        'next_measure/2__1'(A, B, C).
'next_measure/2__1'(_, _, A) :-
        '$activate_constraint_next_measure/2'(_, A).
make_beats(A, B, C, D) :-
        '$insert_constraint_internal_make_beats/4'(E, A, B, C, D),
        '$insert_in_store_make_beats/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'make_beats/4__0'(A, B, C, D, E).
'make_beats/4__0'(0, _, _, _, A) :- !,
        '$remove_constraint_internal_make_beats/4'(A, B),
        (   B=yes ->
            '$delete_from_store_make_beats/4'(A)
        ;   true
        ).
'make_beats/4__0'(A, B, C, D, E) :-
        A>0, !,
        '$remove_constraint_internal_make_beats/4'(E, G),
        (   G=yes ->
            '$delete_from_store_make_beats/4'(E)
        ;   true
        ),
        F is A-1,
        next_beat(D, C, F, 0, C, A, 0),
        beat(D, C, F, 0, B),
        make_beats(F, B, C, D).
'make_beats/4__0'(_, _, _, _, A) :-
        '$activate_constraint_make_beats/4'(_, A).
next_beat(A, B, C, D, E, F, G) :-
        '$insert_constraint_internal_next_beat/7'(H, A, B, C, D, E, F, G),
        '$insert_in_store_next_beat/7'(H),
        arg(2, H, I),
        'chr update_mutable'(inactive, I),
        'next_beat/7__0'(A, B, C, D, E, F, G, H).
'next_beat/7__0'(A, B, C, D, E, F, _, G) :-
        '$via1_multi_hash_meter/2-1'(F, I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_,_,_),
        J=mutable(active),
        '$via1_multi_hash_next_measure/2-1'(E, M),
        'chr sbag_member'(K, M),
        K=suspension(_,N,_,_,L),
        N=mutable(active), !,
        '$remove_constraint_internal_next_beat/7'(G, O),
        (   O=yes ->
            '$delete_from_store_next_beat/7'(G)
        ;   true
        ),
        next_beat(A, B, C, D, L, 0, 0).
'next_beat/7__0'(A, B, C, D, E, F, G, H) :-
        nb_getval('$chr_store_global_ground_user:meter/2', I), !,
        'next_beat/7__0__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__0__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__1'(B, C, D, E, F, G, H, A).
'next_beat/7__0__0'([J|M], B, C, D, E, F, G, H, A) :-
        (   J=suspension(_,K,_,_,_,I),
            K=mutable(active),
            nb_getval('$chr_store_global_ground_user:phase/1', L) ->
            'next_beat/7__0__1'(L, I, J, M, B, C, D, E, F, G, H, A)
        ;   'next_beat/7__0__0'(M, B, C, D, E, F, G, H, A)
        ).
'next_beat/7__0__1'([], _, _, A, C, D, E, F, G, H, I, B) :-
        'next_beat/7__0__0'(A, C, D, E, F, G, H, I, B).
'next_beat/7__0__1'([M|Q], K, A, B, D, E, F, G, H, I, J, C) :-
        (   M=suspension(_,O,_,_,L),
            O=mutable(active),
            L=split_beats(N),
            N==E,
            '$via1_multi_hash_shortest_duration/2-1'(D, P) ->
            'next_beat/7__0__2'(P, M, Q, K, A, B, D, E, F, G, H, I, J, C)
        ;   'next_beat/7__0__1'(Q, K, A, B, D, E, F, G, H, I, J, C)
        ).
'next_beat/7__0__2'([], _, A, L, B, C, E, F, G, H, I, J, K, D) :-
        'next_beat/7__0__1'(A, L, B, C, E, F, G, H, I, J, K, D).
'next_beat/7__0__2'([P|S], A, B, M, C, D, F, G, H, I, J, K, L, E) :-
        (   P=suspension(_,Q,_,_,N,O),
            Q=mutable(active),
            N==F,
            nb_getval('$chr_store_global_ground_user:measures/1', R) ->
            'next_beat/7__0__3'(R, O, P, S, A, B, M, C, D, F, G, H, I, J, K, L, E)
        ;   'next_beat/7__0__2'(S, A, B, M, C, D, F, G, H, I, J, K, L, E)
        ).
'next_beat/7__0__3'([], _, _, A, B, C, N, D, E, G, H, I, J, K, L, M, F) :-
        'next_beat/7__0__2'(A, B, C, N, D, E, G, H, I, J, K, L, M, F).
'next_beat/7__0__3'([R|U], P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G) :-
        (   R=suspension(_,S,_,_,Q),
            S=mutable(active),
            '$via1_multi_hash_beat/5-1234'(k(H,I,J,K), T) ->
            'next_beat/7__0__4'(T, Q, R, U, P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G)
        ;   'next_beat/7__0__3'(U, P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G)
        ).
'next_beat/7__0__4'([], _, _, A, Q, B, C, D, E, P, F, G, I, J, K, L, M, N, O, H) :-
        'next_beat/7__0__3'(A, Q, B, C, D, E, P, F, G, I, J, K, L, M, N, O, H).
'next_beat/7__0__4'([Z|A1], S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I) :-
        (   Z=suspension(_,Y,_,_,T,U,V,W,X),
            Y=mutable(active),
            T==J,
            U==K,
            V==L,
            W==M,
            H1=t(96,G,E,C,A,Z,I),
            '$novel_production'(G, H1),
            '$novel_production'(E, H1),
            '$novel_production'(C, H1),
            '$novel_production'(A, H1),
            '$novel_production'(Z, H1),
            '$novel_production'(I, H1),
            X<R,
            K\==S,
            'chr lock'(J),
            'chr lock'(K),
            'chr lock'(L),
            'chr lock'(M),
            'chr lock'(X),
            debugwriteln(considering_splitbeat(J,K,L,M,X)),
            'chr unlock'(J),
            'chr unlock'(K),
            'chr unlock'(L),
            'chr unlock'(M),
            'chr unlock'(X) ->
            '$extend_history'(I, H1),
            '$activate_constraint_next_beat/7'(_, I),
            msw(split_beat(J), B1),
            (   B1=1 ->
                (   '$remove_constraint_internal_beat/5'(Z, E1),
                    (   E1=yes ->
                        '$delete_from_store_beat/5'(Z)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(I, F1),
                    (   F1=yes ->
                        '$delete_from_store_next_beat/7'(I)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                C1 is X*2,
                D1 is M+1/(C1/Q),
                debugwriteln(doing_splitbeat(J,K,L,M,X)),
                next_beat(J, K, L, M, K, L, D1),
                next_beat(J, K, L, D1, N, O, P),
                beat(J, K, L, M, C1),
                beat(J, K, L, D1, C1)
            ;   true
            ),
            (   I=suspension(_,G1,_,_,_,_,_,_,_,_),
                G1=mutable(active) ->
                'chr update_mutable'(inactive, G1),
                'next_beat/7__0__4'(A1, S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I)
            ;   true
            )
        ;   'next_beat/7__0__4'(A1, S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I)
        ).
'next_beat/7__0'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__1'(A, B, C, D, E, F, G, H).
'next_beat/7__1'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_octave_d/5-1234'(k(A,E,F,G), I), !,
        'next_beat/7__1__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__1__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__2'(B, C, D, E, F, G, H, A).
'next_beat/7__1__0'([N|P], A, B, C, D, E, F, G, H) :-
        (   N=suspension(_,O,_,I,J,K,L,M),
            O=mutable(active),
            I==A,
            J==E,
            K==F,
            L==G,
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), S),
            'chr sbag_member'(Q, S),
            Q=suspension(_,T,_,_,_,_,_,_,R),
            T=mutable(active) ->
            '$remove_constraint_internal_octave_d/5'(N, U),
            (   U=yes ->
                '$delete_from_store_octave_d/5'(N)
            ;   true
            ),
            '$activate_constraint_next_beat/7'(_, H),
            V is R+M,
            octave_rangecheck(A, E, F, G, V),
            (   H=suspension(_,W,_,_,_,_,_,_,_,_),
                W=mutable(active) ->
                'chr update_mutable'(inactive, W),
                'next_beat/7__1__0'(P, A, B, C, D, E, F, G, H)
            ;   true
            )
        ;   'next_beat/7__1__0'(P, A, B, C, D, E, F, G, H)
        ).
'next_beat/7__1'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__2'(A, B, C, D, E, F, G, H).
'next_beat/7__2'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_octave/5-1234'(k(A,E,F,G), I), !,
        'next_beat/7__2__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__2__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__3'(B, C, D, E, F, G, H, A).
'next_beat/7__2__0'([N|P], A, B, C, D, E, F, G, H) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            I==A,
            J==E,
            K==F,
            L==G,
            '$via1_multi_hash_phase/1-1'(make_notes, R),
            'chr sbag_member'(Q, R),
            Q=suspension(_,S,_,_,_),
            S=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, V),
            'chr sbag_member'(T, V),
            T=suspension(_,W,_,_,U),
            W=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), Z),
            'chr sbag_member'(X, Z),
            X=suspension(_,A1,_,_,_,_,_,_,Y),
            A1=mutable(active),
            X\==N,
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), D1),
            'chr sbag_member'(B1, D1),
            B1=suspension(_,E1,_,_,_,_,_,_,C1),
            E1=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,E,F,G), H1),
            'chr sbag_member'(F1, H1),
            F1=suspension(_,I1,_,_,_,_,_,_,G1),
            I1=mutable(active),
            F1\==B1,
            interval(C1, Y, G1, M, K1),
            K1>U ->
            '$remove_constraint_internal_octave/5'(N, J1),
            (   J1=yes ->
                '$delete_from_store_octave/5'(N)
            ;   true
            ),
            '$activate_constraint_next_beat/7'(_, H),
            wfail(jumpup(K1)),
            (   H=suspension(_,L1,_,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'next_beat/7__2__0'(P, A, B, C, D, E, F, G, H)
            ;   true
            )
        ;   'next_beat/7__2__0'(P, A, B, C, D, E, F, G, H)
        ).
'next_beat/7__2'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__3'(A, B, C, D, E, F, G, H).
'next_beat/7__3'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_octave/5-1234'(k(A,E,F,G), I), !,
        'next_beat/7__3__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__3__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__4'(B, C, D, E, F, G, H, A).
'next_beat/7__3__0'([N|P], A, B, C, D, E, F, G, H) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            I==A,
            J==E,
            K==F,
            L==G,
            '$via1_multi_hash_phase/1-1'(make_notes, R),
            'chr sbag_member'(Q, R),
            Q=suspension(_,S,_,_,_),
            S=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(A, V),
            'chr sbag_member'(T, V),
            T=suspension(_,W,_,_,U),
            W=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), Z),
            'chr sbag_member'(X, Z),
            X=suspension(_,A1,_,_,_,_,_,_,Y),
            A1=mutable(active),
            X\==N,
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), D1),
            'chr sbag_member'(B1, D1),
            B1=suspension(_,E1,_,_,_,_,_,_,C1),
            E1=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,E,F,G), H1),
            'chr sbag_member'(F1, H1),
            F1=suspension(_,I1,_,_,_,_,_,_,G1),
            I1=mutable(active),
            F1\==B1,
            interval(C1, Y, G1, M, K1),
            K1< -U ->
            '$remove_constraint_internal_octave/5'(N, J1),
            (   J1=yes ->
                '$delete_from_store_octave/5'(N)
            ;   true
            ),
            '$activate_constraint_next_beat/7'(_, H),
            wfail(jumpdown(K1)),
            (   H=suspension(_,L1,_,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'next_beat/7__3__0'(P, A, B, C, D, E, F, G, H)
            ;   true
            )
        ;   'next_beat/7__3__0'(P, A, B, C, D, E, F, G, H)
        ).
'next_beat/7__3'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__4'(A, B, C, D, E, F, G, H).
'next_beat/7__4'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_same_note_counter/5-1234'(k(A,B,C,D), I), !,
        'next_beat/7__4__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__4__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__5'(B, C, D, E, F, G, H, A).
'next_beat/7__4__0'([N|P], A, B, C, D, E, F, G, H) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            I==A,
            J==B,
            K==C,
            L==D,
            '$via1_multi_hash_phase/1-1'(make_notes, R),
            'chr sbag_member'(Q, R),
            Q=suspension(_,S,_,_,_),
            S=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), V),
            'chr sbag_member'(T, V),
            T=suspension(_,W,_,_,_,_,_,_,U),
            W=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(A,B,C,D), Z),
            'chr sbag_member'(X, Z),
            X=suspension(_,A1,_,_,_,_,_,_,Y),
            A1=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(A,E,F,G), D1),
            'chr sbag_member'(B1, D1),
            B1=suspension(_,E1,_,_,_,_,_,_,C1),
            E1=mutable(active),
            B1\==T,
            '$via1_multi_hash_note/5-1234'(k(A,E,F,G), H1),
            'chr sbag_member'(F1, H1),
            F1=suspension(_,I1,_,_,_,_,_,_,G1),
            I1=mutable(active),
            F1\==X ->
            '$remove_constraint_internal_same_note_counter/5'(N, J1),
            (   J1=yes ->
                '$delete_from_store_same_note_counter/5'(N)
            ;   true
            ),
            '$activate_constraint_next_beat/7'(_, H),
            (   U==C1,
                Y==G1 ->
                K1 is M+1,
                same_note_counter(A, E, F, G, K1)
            ;   same_note_counter(A, E, F, G, 0)
            ),
            (   H=suspension(_,L1,_,_,_,_,_,_,_,_),
                L1=mutable(active) ->
                'chr update_mutable'(inactive, L1),
                'next_beat/7__4__0'(P, A, B, C, D, E, F, G, H)
            ;   true
            )
        ;   'next_beat/7__4__0'(P, A, B, C, D, E, F, G, H)
        ).
'next_beat/7__4'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__5'(A, B, C, D, E, F, G, H).
'next_beat/7__5'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), I), !,
        'next_beat/7__5__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__5__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__6'(B, C, D, E, F, G, H, A).
'next_beat/7__5__0'([N|Q], B, C, D, E, F, G, H, A) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            I==B,
            J==C,
            K==D,
            L==E,
            '$via1_multi_hash_anote/5-1234'(k(B,C,D,E), P) ->
            'next_beat/7__5__1'(P, M, N, Q, B, C, D, E, F, G, H, A)
        ;   'next_beat/7__5__0'(Q, B, C, D, E, F, G, H, A)
        ).
'next_beat/7__5__1'([], _, _, A, C, D, E, F, G, H, I, B) :-
        'next_beat/7__5__0'(A, C, D, E, F, G, H, I, B).
'next_beat/7__5__1'([Q|T], K, A, B, D, E, F, G, H, I, J, C) :-
        (   Q=suspension(_,R,_,_,L,M,N,O,P),
            R=mutable(active),
            L==D,
            M==E,
            N==F,
            O==G,
            P=approach,
            '$via1_multi_hash_note/5-1234'(k(D,E,F,G), S) ->
            'next_beat/7__5__2'(S, Q, T, K, A, B, D, E, F, G, H, I, J, C)
        ;   'next_beat/7__5__1'(T, K, A, B, D, E, F, G, H, I, J, C)
        ).
'next_beat/7__5__2'([], _, A, L, B, C, E, F, G, H, I, J, K, D) :-
        'next_beat/7__5__1'(A, L, B, C, E, F, G, H, I, J, K, D).
'next_beat/7__5__2'([S|V], A, B, M, C, D, F, G, H, I, J, K, L, E) :-
        (   S=suspension(_,T,_,_,N,O,P,Q,R),
            T=mutable(active),
            N==F,
            O==G,
            P==H,
            Q==I,
            '$via1_multi_hash_note/5-1234'(k(F,J,K,L), U) ->
            'next_beat/7__5__3'(U, R, S, V, A, B, M, C, D, F, G, H, I, J, K, L, E)
        ;   'next_beat/7__5__2'(V, A, B, M, C, D, F, G, H, I, J, K, L, E)
        ).
'next_beat/7__5__3'([], _, _, A, B, C, N, D, E, G, H, I, J, K, L, M, F) :-
        'next_beat/7__5__2'(A, B, C, N, D, E, G, H, I, J, K, L, M, F).
'next_beat/7__5__3'([V|Y], P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G) :-
        (   V=suspension(_,W,_,_,Q,R,S,T,U),
            W=mutable(active),
            V\==A,
            Q==H,
            R==L,
            S==M,
            T==N,
            '$via1_multi_hash_octave/5-1234'(k(H,L,M,N), X) ->
            'next_beat/7__5__4'(X, U, V, Y, P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G)
        ;   'next_beat/7__5__3'(Y, P, A, B, C, D, O, E, F, H, I, J, K, L, M, N, G)
        ).
'next_beat/7__5__4'([], _, _, A, Q, B, C, D, E, P, F, G, I, J, K, L, M, N, O, H) :-
        'next_beat/7__5__3'(A, Q, B, C, D, E, P, F, G, I, J, K, L, M, N, O, H).
'next_beat/7__5__4'([Z|A1], S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I) :-
        (   Z=suspension(_,Y,_,_,T,U,V,W,X),
            Y=mutable(active),
            Z\==G,
            T==J,
            U==N,
            V==O,
            W==P,
            D1=t(111,G,E,C,A,I,Z),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(I, D1),
            '$novel_production'(Z, D1) ->
            '$extend_history'(I, D1),
            '$activate_constraint_next_beat/7'(_, I),
            interval(R, Q, S, X, B1),
            B1>= -2,
            B1=<2,
            (   I=suspension(_,C1,_,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'next_beat/7__5__4'(A1, S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I)
            ;   true
            )
        ;   'next_beat/7__5__4'(A1, S, A, B, R, C, D, E, F, Q, G, H, J, K, L, M, N, O, P, I)
        ).
'next_beat/7__5'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__6'(A, B, C, D, E, F, G, H).
'next_beat/7__6'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_make_notes_measure/1-1'(E, I), !,
        'next_beat/7__6__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__6__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__7'(B, C, D, E, F, G, H, A).
'next_beat/7__6__0'([J|M], B, C, D, E, F, G, H, A) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I==F,
            '$via1_multi_hash_beat/5-1234'(k(B,F,G,H), L) ->
            'next_beat/7__6__1'(L, J, M, B, C, D, E, F, G, H, A)
        ;   'next_beat/7__6__0'(M, B, C, D, E, F, G, H, A)
        ).
'next_beat/7__6__1'([], _, A, C, D, E, F, G, H, I, B) :-
        'next_beat/7__6__0'(A, C, D, E, F, G, H, I, B).
'next_beat/7__6__1'([O|R], A, B, D, E, F, G, H, I, J, C) :-
        (   O=suspension(_,P,_,_,K,L,M,N,_),
            P=mutable(active),
            K==D,
            L==H,
            M==I,
            N==J,
            '$via1_multi_hash_mchord/2-1'(H, Q) ->
            'next_beat/7__6__2'(Q, O, R, A, B, D, E, F, G, H, I, J, C)
        ;   'next_beat/7__6__1'(R, A, B, D, E, F, G, H, I, J, C)
        ).
'next_beat/7__6__2'([], _, A, B, C, E, F, G, H, I, J, K, D) :-
        'next_beat/7__6__1'(A, B, C, E, F, G, H, I, J, K, D).
'next_beat/7__6__2'([O|R], A, B, C, D, F, G, H, I, J, K, L, E) :-
        (   O=suspension(_,P,_,_,M,N),
            P=mutable(active),
            M==J,
            '$via1_multi_hash_octave/5-1234'(k(F,G,H,I), Q) ->
            'next_beat/7__6__3'(Q, N, O, R, A, B, C, D, F, G, H, I, J, K, L, E)
        ;   'next_beat/7__6__2'(R, A, B, C, D, F, G, H, I, J, K, L, E)
        ).
'next_beat/7__6__3'([], _, _, A, B, C, D, E, G, H, I, J, K, L, M, F) :-
        'next_beat/7__6__2'(A, B, C, D, E, G, H, I, J, K, L, M, F).
'next_beat/7__6__3'([V|W], O, A, B, C, D, E, F, H, I, J, K, L, M, N, G) :-
        (   V=suspension(_,U,_,_,P,Q,R,S,T),
            U=mutable(active),
            P==H,
            Q==I,
            R==J,
            S==K,
            B1=t(115,E,C,A,V,G),
            '$novel_production'(E, B1),
            '$novel_production'(C, B1),
            '$novel_production'(A, B1),
            '$novel_production'(V, B1),
            '$novel_production'(G, B1),
            H\==drums,
            H\==chords ->
            '$extend_history'(G, B1),
            '$activate_constraint_next_beat/7'(_, G),
            debugwriteln('DEBUG: Making notes for some measure'),
            abstract_beat(L, M, N, X),
            soft_msw(note_choice(H,X), Y),
            debugwriteln(picked(note_choice(H,X),Y)),
            pick_concrete_note(H, O, Y, Z),
            debugwriteln(concrete_note(H,O,Y,Z)),
            anote(H, L, M, N, Y),
            note(H, L, M, N, Z),
            (   Z==r ->
                octave_d(H, L, M, N, 0)
            ;   find_octave_d(H, L, M, N, T)
            ),
            (   G=suspension(_,A1,_,_,_,_,_,_,_,_),
                A1=mutable(active) ->
                'chr update_mutable'(inactive, A1),
                'next_beat/7__6__3'(W, O, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
            ;   true
            )
        ;   'next_beat/7__6__3'(W, O, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
        ).
'next_beat/7__6'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__7'(A, B, C, D, E, F, G, H).
'next_beat/7__7'(A, B, C, D, E, F, G, H) :-
        '$via1_multi_hash_phase/1-1'(join_notes, I), !,
        'next_beat/7__7__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__7__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__8'(B, C, D, E, F, G, H, A).
'next_beat/7__7__0'([J|M], B, C, D, E, F, G, H, A) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I=join_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, L) ->
            'next_beat/7__7__1'(L, J, M, B, C, D, E, F, G, H, A)
        ;   'next_beat/7__7__0'(M, B, C, D, E, F, G, H, A)
        ).
'next_beat/7__7__1'([], _, A, C, D, E, F, G, H, I, B) :-
        'next_beat/7__7__0'(A, C, D, E, F, G, H, I, B).
'next_beat/7__7__1'([L|O], A, B, D, E, F, G, H, I, J, C) :-
        (   L=suspension(_,M,_,_,K),
            M=mutable(active),
            K==E,
            '$via1_multi_hash_unspecified_measure/1-1'(H, N) ->
            'next_beat/7__7__2'(N, L, O, A, B, D, E, F, G, H, I, J, C)
        ;   'next_beat/7__7__1'(O, A, B, D, E, F, G, H, I, J, C)
        ).
'next_beat/7__7__2'([], _, A, B, C, E, F, G, H, I, J, K, D) :-
        'next_beat/7__7__1'(A, B, C, E, F, G, H, I, J, K, D).
'next_beat/7__7__2'([N|Q], A, B, C, D, F, G, H, I, J, K, L, E) :-
        (   N=suspension(_,O,_,_,M),
            O=mutable(active),
            N\==A,
            M==J,
            '$via1_multi_hash_note/5-1234'(k(F,G,H,I), P) ->
            'next_beat/7__7__3'(P, N, Q, A, B, C, D, F, G, H, I, J, K, L, E)
        ;   'next_beat/7__7__2'(Q, A, B, C, D, F, G, H, I, J, K, L, E)
        ).
'next_beat/7__7__3'([], _, A, B, C, D, E, G, H, I, J, K, L, M, F) :-
        'next_beat/7__7__2'(A, B, C, D, E, G, H, I, J, K, L, M, F).
'next_beat/7__7__3'([T|W], A, B, C, D, E, F, H, I, J, K, L, M, N, G) :-
        (   T=suspension(_,U,_,_,O,P,Q,R,S),
            U=mutable(active),
            O==H,
            P==I,
            Q==J,
            R==K,
            '$via1_multi_hash_note/5-12345'(k(H,L,M,N,S), V) ->
            'next_beat/7__7__4'(V, S, T, W, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
        ;   'next_beat/7__7__3'(W, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
        ).
'next_beat/7__7__4'([], _, _, A, B, C, D, E, F, G, I, J, K, L, M, N, O, H) :-
        'next_beat/7__7__3'(A, B, C, D, E, F, G, I, J, K, L, M, N, O, H).
'next_beat/7__7__4'([X|Y], Q, A, B, C, D, E, F, G, H, J, K, L, M, N, O, P, I) :-
        (   X=suspension(_,W,_,_,R,S,T,U,V),
            W=mutable(active),
            X\==A,
            R==J,
            S==N,
            T==O,
            U==P,
            V==Q,
            D1=t(136,G,E,C,A,I,X),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(I, D1),
            '$novel_production'(X, D1),
            J\==drums ->
            '$extend_history'(I, D1),
            '$activate_constraint_next_beat/7'(_, I),
            (   K=N ->
                Z=yes
            ;   Z=no
            ),
            (   L=O ->
                A1=yes
            ;   A1=no
            ),
            msw(join_notes(J,Z,A1), B1),
            (   B1=1 ->
                debugwriteln(join_notes(J,K,L,M,Q,N,O,P)),
                tied(J, K, L, M),
                debugwriteln(joined(Q))
            ;   B1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,C1,_,_,_,_,_,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'next_beat/7__7__4'(Y, Q, A, B, C, D, E, F, G, H, J, K, L, M, N, O, P, I)
            ;   true
            )
        ;   'next_beat/7__7__4'(Y, Q, A, B, C, D, E, F, G, H, J, K, L, M, N, O, P, I)
        ).
'next_beat/7__7'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__8'(A, B, C, D, E, F, G, H).
'next_beat/7__8'(A, B, C, D, E, F, G, H) :-
        E=B,
        '$via1_multi_hash_phase/1-1'(join_notes, I), !,
        'next_beat/7__8__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__8__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__9'(B, C, D, E, F, G, H, A).
'next_beat/7__8__0'([J|M], B, C, D, E, F, G, H, A) :-
        (   J=suspension(_,K,_,_,I),
            K=mutable(active),
            I=join_notes,
            '$via1_multi_hash_unspecified_measure/1-1'(C, L) ->
            'next_beat/7__8__1'(L, J, M, B, C, D, E, F, G, H, A)
        ;   'next_beat/7__8__0'(M, B, C, D, E, F, G, H, A)
        ).
'next_beat/7__8__1'([], _, A, C, D, E, F, G, H, I, B) :-
        'next_beat/7__8__0'(A, C, D, E, F, G, H, I, B).
'next_beat/7__8__1'([L|O], A, B, D, E, F, G, H, I, J, C) :-
        (   L=suspension(_,M,_,_,K),
            M=mutable(active),
            K==E,
            '$via1_multi_hash_note/5-1234'(k(D,E,F,G), N) ->
            'next_beat/7__8__2'(N, L, O, A, B, D, E, F, G, H, I, J, C)
        ;   'next_beat/7__8__1'(O, A, B, D, E, F, G, H, I, J, C)
        ).
'next_beat/7__8__2'([], _, A, B, C, E, F, G, H, I, J, K, D) :-
        'next_beat/7__8__1'(A, B, C, E, F, G, H, I, J, K, D).
'next_beat/7__8__2'([R|U], A, B, C, D, F, G, H, I, J, K, L, E) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            M==F,
            N==G,
            O==H,
            P==I,
            '$via1_multi_hash_note/5-12345'(k(F,G,K,L,Q), T) ->
            'next_beat/7__8__3'(T, Q, R, U, A, B, C, D, F, G, H, I, J, K, L, E)
        ;   'next_beat/7__8__2'(U, A, B, C, D, F, G, H, I, J, K, L, E)
        ).
'next_beat/7__8__3'([], _, _, A, B, C, D, E, G, H, I, J, K, L, M, F) :-
        'next_beat/7__8__2'(A, B, C, D, E, G, H, I, J, K, L, M, F).
'next_beat/7__8__3'([V|W], O, A, B, C, D, E, F, H, I, J, K, L, M, N, G) :-
        (   V=suspension(_,U,_,_,P,Q,R,S,T),
            U=mutable(active),
            V\==A,
            P==H,
            Q==I,
            R==M,
            S==N,
            T==O,
            B1=t(137,E,C,A,G,V),
            '$novel_production'(E, B1),
            '$novel_production'(C, B1),
            '$novel_production'(A, B1),
            '$novel_production'(G, B1),
            '$novel_production'(V, B1),
            H\==drums ->
            '$extend_history'(G, B1),
            '$activate_constraint_next_beat/7'(_, G),
            (   I=_ ->
                X=yes
            ;   X=no
            ),
            (   J=M ->
                Y=yes
            ;   Y=no
            ),
            msw(join_notes(H,X,Y), Z),
            (   Z=1 ->
                debugwriteln(join_notes(H,I,J,K,O,I,M,N)),
                tied(H, I, J, K),
                debugwriteln(joined(O))
            ;   Z=2 ->
                true
            ;   fail
            ),
            (   G=suspension(_,A1,_,_,_,_,_,_,_,_),
                A1=mutable(active) ->
                'chr update_mutable'(inactive, A1),
                'next_beat/7__8__3'(W, O, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
            ;   true
            )
        ;   'next_beat/7__8__3'(W, O, A, B, C, D, E, F, H, I, J, K, L, M, N, G)
        ).
'next_beat/7__8'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__9'(A, B, C, D, E, F, G, H).
'next_beat/7__9'(A, B, C, D, E, F, G, H) :-
        E=B,
        '$via1_multi_hash_show_notes/4-1234'(k(A,B,C,D), I), !,
        'next_beat/7__9__0'(I, A, B, C, D, E, F, G, H).
'next_beat/7__9__0'([], B, C, D, E, F, G, H, A) :-
        'next_beat/7__10'(B, C, D, E, F, G, H, A).
'next_beat/7__9__0'([M|O], A, B, C, D, E, F, G, H) :-
        (   M=suspension(_,N,_,I,J,K,L),
            N=mutable(active),
            I==A,
            J==B,
            K==C,
            L==D ->
            '$remove_constraint_internal_show_notes/4'(M, P),
            (   P=yes ->
                '$delete_from_store_show_notes/4'(M)
            ;   true
            ),
            '$activate_constraint_next_beat/7'(_, H),
            show_notes(A, B, F, G),
            (   H=suspension(_,Q,_,_,_,_,_,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'next_beat/7__9__0'(O, A, B, C, D, E, F, G, H)
            ;   true
            )
        ;   'next_beat/7__9__0'(O, A, B, C, D, E, F, G, H)
        ).
'next_beat/7__9'(A, B, C, D, E, F, G, H) :-
        'next_beat/7__10'(A, B, C, D, E, F, G, H).
'next_beat/7__10'(_, _, _, _, _, _, _, A) :-
        '$activate_constraint_next_beat/7'(_, A).
anote(A, B, C, D, E) :-
        '$insert_constraint_internal_anote/5'(F, A, B, C, D, E),
        '$insert_in_store_anote/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'anote/5__0'(A, B, C, D, E, F).
'anote/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_failrules/1-1'(nr, G), !,
        'anote/5__0__0'(G, A, B, C, D, E, F).
'anote/5__0__0'([], B, C, D, E, F, A) :-
        'anote/5__1'(B, C, D, E, F, A).
'anote/5__0__0'([I|J], B, C, D, E, F, A) :-
        (   I=suspension(_,H,_,_,G),
            H=mutable(active),
            G=nr,
            K=t(22,I,A),
            '$novel_production'(I, K),
            '$novel_production'(A, K) ->
            '$extend_history'(A, K),
            check(anote(B,C,D,E,F)),
            'anote/5__0__0'(J, B, C, D, E, F, A)
        ;   'anote/5__0__0'(J, B, C, D, E, F, A)
        ).
'anote/5__0'(A, B, C, D, E, F) :-
        'anote/5__1'(A, B, C, D, E, F).
'anote/5__1'(A, B, C, D, approach, E) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), F), !,
        'anote/5__1__0'(F, A, B, C, D, approach, E).
'anote/5__1__0'([], B, C, D, E, F, A) :-
        'anote/5__2'(B, C, D, E, F, A).
'anote/5__1__0'([L|O], B, C, D, E, F, A) :-
        (   L=suspension(_,M,_,_,G,H,I,J,K),
            M=mutable(active),
            G==B,
            H==C,
            I==D,
            J==E,
            '$via1_multi_hash_note/5-1234'(k(B,C,D,E), N) ->
            'anote/5__1__1'(N, K, L, O, B, C, D, E, F, A)
        ;   'anote/5__1__0'(O, B, C, D, E, F, A)
        ).
'anote/5__1__1'([], _, _, A, C, D, E, F, G, B) :-
        'anote/5__1__0'(A, C, D, E, F, G, B).
'anote/5__1__1'([O|R], I, A, B, D, E, F, G, H, C) :-
        (   O=suspension(_,P,_,_,J,K,L,M,N),
            P=mutable(active),
            J==D,
            K==E,
            L==F,
            M==G,
            '$via1_multi_hash_note/5-1'(D, Q) ->
            'anote/5__1__2'(Q, N, O, R, I, A, B, D, E, F, G, H, C)
        ;   'anote/5__1__1'(R, I, A, B, D, E, F, G, H, C)
        ).
'anote/5__1__2'([], _, _, A, J, B, C, E, F, G, H, I, D) :-
        'anote/5__1__1'(A, J, B, C, E, F, G, H, I, D).
'anote/5__1__2'([R|U], L, A, B, K, C, D, F, G, H, I, J, E) :-
        (   R=suspension(_,S,_,_,M,N,O,P,Q),
            S=mutable(active),
            R\==A,
            M==F,
            '$via1_multi_hash_next_beat/7-1234567'(k(F,G,H,I,N,O,P), T) ->
            'anote/5__1__3'(T, N, O, P, Q, R, U, L, A, B, K, C, D, F, G, H, I, J, E)
        ;   'anote/5__1__2'(U, L, A, B, K, C, D, F, G, H, I, J, E)
        ).
'anote/5__1__3'([], _, _, _, _, _, A, M, B, C, L, D, E, G, H, I, J, K, F) :-
        'anote/5__1__2'(A, M, B, C, L, D, E, G, H, I, J, K, F).
'anote/5__1__3'([Z|C1], O, P, Q, R, A, B, N, C, D, M, E, F, H, I, J, K, L, G) :-
        (   Z=suspension(_,A1,_,S,T,U,V,W,X,Y),
            A1=mutable(active),
            S==H,
            T==I,
            U==J,
            V==K,
            W==O,
            X==P,
            Y==Q,
            '$via1_multi_hash_octave/5-1234'(k(H,O,P,Q), B1) ->
            'anote/5__1__4'(B1, Z, C1, O, P, Q, R, A, B, N, C, D, M, E, F, H, I, J, K, L, G)
        ;   'anote/5__1__3'(C1, O, P, Q, R, A, B, N, C, D, M, E, F, H, I, J, K, L, G)
        ).
'anote/5__1__4'([], _, A, P, Q, R, S, B, C, O, D, E, N, F, G, I, J, K, L, M, H) :-
        'anote/5__1__3'(A, P, Q, R, S, B, C, O, D, E, N, F, G, I, J, K, L, M, H).
'anote/5__1__4'([A1|B1], A, B, Q, R, S, T, C, D, P, E, F, O, G, H, J, K, L, M, N, I) :-
        (   A1=suspension(_,Z,_,_,U,V,W,X,Y),
            Z=mutable(active),
            A1\==G,
            U==J,
            V==Q,
            W==R,
            X==S,
            D1=t(111,G,I,E,C,A,A1),
            '$novel_production'(G, D1),
            '$novel_production'(I, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(A1, D1) ->
            '$extend_history'(I, D1),
            interval(P, O, T, Y, C1),
            C1>= -2,
            C1=<2,
            'anote/5__1__4'(B1, A, B, Q, R, S, T, C, D, P, E, F, O, G, H, J, K, L, M, N, I)
        ;   'anote/5__1__4'(B1, A, B, Q, R, S, T, C, D, P, E, F, O, G, H, J, K, L, M, N, I)
        ).
'anote/5__1'(A, B, C, D, E, F) :-
        'anote/5__2'(A, B, C, D, E, F).
'anote/5__2'(_, _, _, _, _, A) :-
        '$activate_constraint_anote/5'(_, A).
phase(A) :-
        '$insert_constraint_internal_phase/1'(B, A),
        '$insert_in_store_phase/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'phase/1__0'(A, B).
'phase/1__0'(A, B) :- !,
        '$activate_constraint_phase/1'(_, B),
        debugwriteln(''),
        debugwrite('NEW PHASE: '),
        debugwrite(A),
        debugwriteln(''),
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            'chr update_mutable'(inactive, C),
            'phase/1__1'(A, B)
        ;   true
        ).
'phase/1__1'(A, B) :-
        A=split_beats(C),
        '$via1_multi_hash_failrules/1-1'(u, D), !,
        'phase/1__1__0'(D, A, B, C).
'phase/1__1__0'([], B, A, _) :-
        'phase/1__2'(B, A).
'phase/1__1__0'([E|H], B, A, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=u,
            nb_getval('$chr_store_global_ground_user:beat/5', G) ->
            'phase/1__1__1'(G, E, H, B, A, C)
        ;   'phase/1__1__0'(H, B, A, C)
        ).
'phase/1__1__1'([], _, A, C, B, D) :-
        'phase/1__1__0'(A, C, B, D).
'phase/1__1__1'([L|M], A, B, D, C, E) :-
        (   L=suspension(_,K,_,_,F,G,H,I,J),
            K=mutable(active),
            O=t(34,A,C,L),
            '$novel_production'(A, O),
            '$novel_production'(C, O),
            '$novel_production'(L, O),
            G<E ->
            '$extend_history'(C, O),
            '$activate_constraint_phase/1'(_, C),
            check_resultbeat(F, G, H, I, J),
            (   C=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'phase/1__1__1'(M, A, B, D, C, E)
            ;   true
            )
        ;   'phase/1__1__1'(M, A, B, D, C, E)
        ).
'phase/1__1'(A, B) :-
        'phase/1__2'(A, B).
'phase/1__2'(select_chords, A) :- !,
        '$remove_constraint_internal_phase/1'(A, B),
        (   B=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        chord_scheme(a).
'phase/1__2'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:theme_boundary/2', B), !,
        'phase/1__2__0'(B, length_succession, A).
'phase/1__2__0'([], B, A) :-
        'phase/1__3'(B, A).
'phase/1__2__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C,_),
            D=mutable(active),
            H=t(56,A,E),
            '$novel_production'(A, H),
            '$novel_production'(E, H) ->
            '$extend_history'(A, H),
            '$activate_constraint_phase/1'(_, A),
            theme_boundaries(C),
            (   A=suspension(_,G,_,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'phase/1__2__0'(F, B, A)
            ;   true
            )
        ;   'phase/1__2__0'(F, B, A)
        ).
'phase/1__2'(A, B) :-
        'phase/1__3'(A, B).
'phase/1__3'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:theme_boundary/2', B), !,
        'phase/1__3__0'(B, length_succession, A).
'phase/1__3__0'([], B, A) :-
        'phase/1__4'(B, A).
'phase/1__3__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', G) ->
            'phase/1__3__1'(G, C, D, E, H, B, A)
        ;   'phase/1__3__0'(H, B, A)
        ).
'phase/1__3__1'([], _, _, _, A, C, B) :-
        'phase/1__3__0'(A, C, B).
'phase/1__3__1'([I|J], E, F, A, B, D, C) :-
        (   I=suspension(_,H,_,_,_,G),
            H=mutable(active),
            I\==A,
            M=t(59,C,A,I),
            '$novel_production'(C, M),
            '$novel_production'(A, M),
            '$novel_production'(I, M),
            E\==u,
            G>F,
            K is G-F ->
            '$extend_history'(C, M),
            '$activate_constraint_phase/1'(_, C),
            theme_length(E, K),
            (   C=suspension(_,L,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'phase/1__3__1'(J, E, F, A, B, D, C)
            ;   true
            )
        ;   'phase/1__3__1'(J, E, F, A, B, D, C)
        ).
'phase/1__3'(A, B) :-
        'phase/1__4'(A, B).
'phase/1__4'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:theme_length/2', B), !,
        'phase/1__4__0'(B, length_succession, A).
'phase/1__4__0'([], B, A) :-
        'phase/1__5'(B, A).
'phase/1__4__0'([E|G], A, B) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(C, J),
            'chr sbag_member'(H, J),
            H=suspension(_,K,_,_,_,I),
            K=mutable(active),
            H\==E,
            I=<D ->
            '$remove_constraint_internal_theme_length/2'(E, L),
            (   L=yes ->
                '$delete_from_store_theme_length/2'(E)
            ;   true
            ),
            'phase/1__4__0'(G, A, B)
        ;   'phase/1__4__0'(G, A, B)
        ).
'phase/1__4'(A, B) :-
        'phase/1__5'(A, B).
'phase/1__5'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:theme_boundary/2', B), !,
        'phase/1__5__0'(B, length_succession, A).
'phase/1__5__0'([], B, A) :-
        'phase/1__6'(B, A).
'phase/1__5__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            '$via1_multi_hash_theme_boundary/2-1'(C, G) ->
            'phase/1__5__1'(G, C, D, E, H, B, A)
        ;   'phase/1__5__0'(H, B, A)
        ).
'phase/1__5__1'([], _, _, _, A, C, B) :-
        'phase/1__5__0'(A, C, B).
'phase/1__5__1'([J|K], E, F, A, B, D, C) :-
        (   J=suspension(_,I,_,_,G,H),
            I=mutable(active),
            J\==A,
            G==E,
            M=t(61,C,A,J),
            '$novel_production'(C, M),
            '$novel_production'(A, M),
            '$novel_production'(J, M),
            H>F ->
            '$extend_history'(C, M),
            '$activate_constraint_phase/1'(_, C),
            next_theme_instance(E, F, H),
            (   C=suspension(_,L,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'phase/1__5__1'(K, E, F, A, B, D, C)
            ;   true
            )
        ;   'phase/1__5__1'(K, E, F, A, B, D, C)
        ).
'phase/1__5'(A, B) :-
        'phase/1__6'(A, B).
'phase/1__6'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:next_theme_instance/3', B), !,
        'phase/1__6__0'(B, length_succession, A).
'phase/1__6__0'([], B, A) :-
        'phase/1__7'(B, A).
'phase/1__6__0'([F|H], A, B) :-
        (   F=suspension(_,G,_,_,C,D,E),
            G=mutable(active),
            '$via1_multi_hash_next_theme_instance/3-12'(k(C,D), K),
            'chr sbag_member'(I, K),
            I=suspension(_,L,_,_,_,_,J),
            L=mutable(active),
            I\==F,
            E>J ->
            '$remove_constraint_internal_next_theme_instance/3'(F, M),
            (   M=yes ->
                '$delete_from_store_next_theme_instance/3'(F)
            ;   true
            ),
            'phase/1__6__0'(H, A, B)
        ;   'phase/1__6__0'(H, A, B)
        ).
'phase/1__6'(A, B) :-
        'phase/1__7'(A, B).
'phase/1__7'(length_succession, A) :-
        nb_getval('$chr_store_global_ground_user:max_unspecified/1', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, E),
        (   E=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(count_and_start).
'phase/1__7'(count_and_start, A) :-
        '$via1_multi_hash_unspecified_successor/2-1'(0, B), !,
        'phase/1__7__0'(B, count_and_start, A).
'phase/1__7__0'([], B, A) :-
        'phase/1__8'(B, A).
'phase/1__7__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            C=0,
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', G) ->
            'phase/1__7__1'(G, D, E, H, B, A)
        ;   'phase/1__7__0'(H, B, A)
        ).
'phase/1__7__1'([], _, _, A, C, B) :-
        'phase/1__7__0'(A, C, B).
'phase/1__7__1'([H|K], E, A, B, D, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            nb_getval('$chr_store_global_ground_user:boundary_list/1', J) ->
            'phase/1__7__2'(J, F, G, H, K, E, A, B, D, C)
        ;   'phase/1__7__1'(K, E, A, B, D, C)
        ).
'phase/1__7__2'([], _, _, _, A, F, B, C, E, D) :-
        'phase/1__7__1'(A, F, B, C, E, D).
'phase/1__7__2'([L|M], H, I, A, B, G, C, D, F, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J=[N|O],
            N=[P|Q],
            P==H,
            Q=[R|S],
            S= [],
            V=t(64,E,C,A,L),
            '$novel_production'(E, V),
            '$novel_production'(C, V),
            '$novel_production'(A, V),
            '$novel_production'(L, V),
            H\==u,
            'chr lock'(I),
            'chr lock'(G),
            'chr lock'(H),
            'chr lock'(R),
            'chr lock'(O),
            I is G-1,
            length([[H,R]|O], T),
            'chr unlock'(I),
            'chr unlock'(G),
            'chr unlock'(H),
            'chr unlock'(R),
            'chr unlock'(O) ->
            '$extend_history'(E, V),
            '$activate_constraint_phase/1'(_, E),
            theme_boundary_count(H, T),
            (   E=suspension(_,U,_,_,_),
                U=mutable(active) ->
                'chr update_mutable'(inactive, U),
                'phase/1__7__2'(M, H, I, A, B, G, C, D, F, E)
            ;   true
            )
        ;   'phase/1__7__2'(M, H, I, A, B, G, C, D, F, E)
        ).
'phase/1__7'(A, B) :-
        'phase/1__8'(A, B).
'phase/1__8'(count_and_start, A) :-
        nb_getval('$chr_store_global_ground_user:theme_boundary_count/2', B), !,
        'phase/1__8__0'(B, count_and_start, A).
'phase/1__8__0'([], B, A) :-
        'phase/1__9'(B, A).
'phase/1__8__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C,_),
            E=mutable(active),
            '$via1_multi_hash_unspecified_successor/2-1'(0, F) ->
            'phase/1__8__1'(F, C, D, G, B, A)
        ;   'phase/1__8__0'(G, B, A)
        ).
'phase/1__8__1'([], _, _, A, C, B) :-
        'phase/1__8__0'(A, C, B).
'phase/1__8__1'([I|J], E, A, B, D, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            F=0,
            L=t(65,C,A,I),
            '$novel_production'(C, L),
            '$novel_production'(A, L),
            '$novel_production'(I, L) ->
            '$extend_history'(C, L),
            '$activate_constraint_phase/1'(_, C),
            first_theme_start(E, G),
            (   C=suspension(_,K,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'phase/1__8__1'(J, E, A, B, D, C)
            ;   true
            )
        ;   'phase/1__8__1'(J, E, A, B, D, C)
        ).
'phase/1__8'(A, B) :-
        'phase/1__9'(A, B).
'phase/1__9'(count_and_start, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme_start/2', B), !,
        'phase/1__9__0'(B, count_and_start, A).
'phase/1__9__0'([], B, A) :-
        'phase/1__10'(B, A).
'phase/1__9__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C,_),
            D=mutable(active),
            H=t(66,A,E),
            '$novel_production'(A, H),
            '$novel_production'(E, H) ->
            '$extend_history'(A, H),
            '$activate_constraint_phase/1'(_, A),
            first_theme(C),
            (   A=suspension(_,G,_,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'phase/1__9__0'(F, B, A)
            ;   true
            )
        ;   'phase/1__9__0'(F, B, A)
        ).
'phase/1__9'(A, B) :-
        'phase/1__10'(A, B).
'phase/1__10'(count_and_start, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme/1', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, E),
        (   E=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(first_theme_repetitions).
'phase/1__10'(first_theme_repetitions, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme_start/2', B), !,
        'phase/1__10__0'(B, first_theme_repetitions, A).
'phase/1__10__0'([], B, A) :-
        'phase/1__11'(B, A).
'phase/1__10__0'([F|G], B, A) :-
        (   F=suspension(_,E,_,_,C,D),
            E=mutable(active),
            I=t(68,A,F),
            '$novel_production'(A, I),
            '$novel_production'(F, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_phase/1'(_, A),
            num_first_theme_repeats(C, 0),
            first_theme_repetition(C, 0, D),
            (   A=suspension(_,H,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'phase/1__10__0'(G, B, A)
            ;   true
            )
        ;   'phase/1__10__0'(G, B, A)
        ).
'phase/1__10'(A, B) :-
        'phase/1__11'(A, B).
'phase/1__11'(first_theme_repetitions, A) :-
        nb_getval('$chr_store_global_ground_user:theme_boundary/2', B), !,
        'phase/1__11__0'(B, first_theme_repetitions, A).
'phase/1__11__0'([], B, A) :-
        'phase/1__12'(B, A).
'phase/1__11__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            '$via1_multi_hash_first_theme_repetition/3-1'(C, G) ->
            'phase/1__11__1'(G, C, D, E, H, B, A)
        ;   'phase/1__11__0'(H, B, A)
        ).
'phase/1__11__1'([], _, _, _, A, C, B) :-
        'phase/1__11__0'(A, C, B).
'phase/1__11__1'([J|M], E, F, A, B, D, C) :-
        (   J=suspension(_,K,_,_,G,H,I),
            K=mutable(active),
            G==E,
            '$via1_multi_hash_next_theme_instance/3-13'(k(E,F), L) ->
            'phase/1__11__2'(L, H, I, J, M, E, F, A, B, D, C)
        ;   'phase/1__11__1'(M, E, F, A, B, D, C)
        ).
'phase/1__11__2'([], _, _, _, A, F, G, B, C, E, D) :-
        'phase/1__11__1'(A, F, G, B, C, E, D).
'phase/1__11__2'([O|P], I, J, A, B, G, H, C, D, F, E) :-
        (   O=suspension(_,N,_,_,K,L,M),
            N=mutable(active),
            K==G,
            M==H,
            T=t(69,E,C,A,O),
            '$novel_production'(E, T),
            '$novel_production'(C, T),
            '$novel_production'(A, T),
            '$novel_production'(O, T),
            'chr lock'(L),
            'chr lock'(J),
            'chr lock'(H),
            'chr lock'(I),
            L is J-1,
            Q is H+1,
            R is I+1,
            'chr unlock'(L),
            'chr unlock'(J),
            'chr unlock'(H),
            'chr unlock'(I) ->
            '$extend_history'(E, T),
            '$activate_constraint_phase/1'(_, E),
            first_theme_repetition(G, R, Q),
            increment_first_theme_rep,
            (   E=suspension(_,S,_,_,_),
                S=mutable(active) ->
                'chr update_mutable'(inactive, S),
                'phase/1__11__2'(P, I, J, A, B, G, H, C, D, F, E)
            ;   true
            )
        ;   'phase/1__11__2'(P, I, J, A, B, G, H, C, D, F, E)
        ).
'phase/1__11'(A, B) :-
        'phase/1__12'(A, B).
'phase/1__12'(first_theme_repetitions, A) :-
        nb_getval('$chr_store_global_ground_user:num_first_theme_repeats/2', B), !,
        'phase/1__12__0'(B, first_theme_repetitions, A).
'phase/1__12__0'([], B, A) :-
        'phase/1__13'(B, A).
'phase/1__12__0'([E|G], A, B) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            M is D+1,
            nb_getval('$chr_store_global_ground_user:increment_first_theme_rep/0', I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_),
            J=mutable(active) ->
            '$remove_constraint_internal_num_first_theme_repeats/2'(E, K),
            (   K=yes ->
                '$delete_from_store_num_first_theme_repeats/2'(E)
            ;   true
            ),
            '$remove_constraint_internal_increment_first_theme_rep/0'(H, L),
            (   L=yes ->
                '$delete_from_store_increment_first_theme_rep/0'(H)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            num_first_theme_repeats(C, M),
            (   B=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'phase/1__12__0'(G, A, B)
            ;   true
            )
        ;   'phase/1__12__0'(G, A, B)
        ).
'phase/1__12'(A, B) :-
        'phase/1__13'(A, B).
'phase/1__13'(first_theme_repetitions, A) :-
        nb_getval('$chr_store_global_ground_user:num_first_theme_repeats/2', E),
        'chr sbag_member'(B, E),
        B=suspension(_,F,_,_,C,D),
        F=mutable(active),
        '$via1_multi_hash_theme_boundary_count/2-1'(C, I),
        'chr sbag_member'(G, I),
        G=suspension(_,J,_,_,_,H),
        J=mutable(active),
        D is H-1, !,
        '$remove_constraint_internal_phase/1'(A, K),
        (   K=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(first_theme_occurrences).
'phase/1__13'(first_theme_occurrences, A) :- !,
        '$activate_constraint_phase/1'(_, A),
        occurrence_count(0),
        (   A=suspension(_,B,_,_,_),
            B=mutable(active) ->
            'chr update_mutable'(inactive, B),
            'phase/1__14'(first_theme_occurrences, A)
        ;   true
        ).
'phase/1__13'(A, B) :-
        'phase/1__14'(A, B).
'phase/1__14'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme_repetition/3', B), !,
        'phase/1__14__0'(B, first_theme_occurrences, A).
'phase/1__14__0'([], B, A) :-
        'phase/1__15'(B, A).
'phase/1__14__0'([G|H], B, A) :-
        (   G=suspension(_,F,_,_,C,D,E),
            F=mutable(active),
            J=t(73,A,G),
            '$novel_production'(A, J),
            '$novel_production'(G, J) ->
            '$extend_history'(A, J),
            '$activate_constraint_phase/1'(_, A),
            first_theme_occurrence(1, C, D, E),
            increment_occurrences,
            (   A=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'phase/1__14__0'(H, B, A)
            ;   true
            )
        ;   'phase/1__14__0'(H, B, A)
        ).
'phase/1__14'(A, B) :-
        'phase/1__15'(A, B).
'phase/1__15'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme_occurrence/4', B), !,
        'phase/1__15__0'(B, first_theme_occurrences, A).
'phase/1__15__0'([], B, A) :-
        'phase/1__16'(B, A).
'phase/1__15__0'([G|J], B, A) :-
        (   G=suspension(_,H,_,_,C,D,E,F),
            H=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(D, I) ->
            'phase/1__15__1'(I, C, D, E, F, G, J, B, A)
        ;   'phase/1__15__0'(J, B, A)
        ).
'phase/1__15__1'([], _, _, _, _, _, A, C, B) :-
        'phase/1__15__0'(A, C, B).
'phase/1__15__1'([L|M], E, F, G, H, A, B, D, C) :-
        (   L=suspension(_,K,_,_,I,J),
            K=mutable(active),
            I==F,
            Q=t(74,C,A,L),
            '$novel_production'(C, Q),
            '$novel_production'(A, Q),
            '$novel_production'(L, Q),
            E<J,
            N is E+1,
            O is H+1 ->
            '$extend_history'(C, Q),
            '$activate_constraint_phase/1'(_, C),
            first_theme_occurrence(N, F, G, O),
            increment_occurrences,
            (   C=suspension(_,P,_,_,_),
                P=mutable(active) ->
                'chr update_mutable'(inactive, P),
                'phase/1__15__1'(M, E, F, G, H, A, B, D, C)
            ;   true
            )
        ;   'phase/1__15__1'(M, E, F, G, H, A, B, D, C)
        ).
'phase/1__15'(A, B) :-
        'phase/1__16'(A, B).
'phase/1__16'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', B), !,
        'phase/1__16__0'(B, first_theme_occurrences, A).
'phase/1__16__0'([], B, A) :-
        'phase/1__17'(B, A).
'phase/1__16__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            L is C+1,
            nb_getval('$chr_store_global_ground_user:increment_occurrences/0', H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_occurrence_count/1'(D, J),
            (   J=yes ->
                '$delete_from_store_occurrence_count/1'(D)
            ;   true
            ),
            '$remove_constraint_internal_increment_occurrences/0'(G, K),
            (   K=yes ->
                '$delete_from_store_increment_occurrences/0'(G)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            occurrence_count(L),
            (   B=suspension(_,M,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'phase/1__16__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__16__0'(F, A, B)
        ).
'phase/1__16'(A, B) :-
        'phase/1__17'(A, B).
'phase/1__17'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', B), !,
        'phase/1__17__0'(B, first_theme_occurrences, A).
'phase/1__17__0'([], B, A) :-
        'phase/1__18'(B, A).
'phase/1__17__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            nb_getval('$chr_store_global_ground_user:first_theme_start/2', I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,H,_),
            J=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(H, M),
            'chr sbag_member'(K, M),
            K=suspension(_,N,_,_,_,L),
            N=mutable(active),
            '$via1_multi_hash_theme_boundary_count/2-1'(H, Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,P),
            R=mutable(active),
            C is L*P ->
            '$remove_constraint_internal_occurrence_count/1'(D, S),
            (   S=yes ->
                '$delete_from_store_occurrence_count/1'(D)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            all_occurrences,
            (   B=suspension(_,T,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'phase/1__17__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__17__0'(F, A, B)
        ).
'phase/1__17'(A, B) :-
        'phase/1__18'(A, B).
'phase/1__18'(first_theme_occurrences, A) :-
        '$via1_multi_hash_first_theme_occurrence/4-3'(0, B), !,
        'phase/1__18__0'(B, first_theme_occurrences, A).
'phase/1__18__0'([], B, A) :-
        'phase/1__19'(B, A).
'phase/1__18__0'([G|J], B, A) :-
        (   G=suspension(_,H,_,_,C,D,E,F),
            H=mutable(active),
            E=0,
            '$via1_multi_hash_theme_length/2-12'(k(D,C), I) ->
            'phase/1__18__1'(I, C, D, F, G, J, B, A)
        ;   'phase/1__18__0'(J, B, A)
        ).
'phase/1__18__1'([], _, _, _, _, A, C, B) :-
        'phase/1__18__0'(A, C, B).
'phase/1__18__1'([K|L], E, F, G, A, B, D, C) :-
        (   K=suspension(_,J,_,_,H,I),
            J=mutable(active),
            H==F,
            I==E,
            N=t(77,C,A,K),
            '$novel_production'(C, N),
            '$novel_production'(A, N),
            '$novel_production'(K, N) ->
            '$extend_history'(C, N),
            '$activate_constraint_phase/1'(_, C),
            first_theme_end(F, G),
            (   C=suspension(_,M,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'phase/1__18__1'(L, E, F, G, A, B, D, C)
            ;   true
            )
        ;   'phase/1__18__1'(L, E, F, G, A, B, D, C)
        ).
'phase/1__18'(A, B) :-
        'phase/1__19'(A, B).
'phase/1__19'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:first_theme_start/2', B), !,
        'phase/1__19__0'(B, first_theme_occurrences, A).
'phase/1__19__0'([], B, A) :-
        'phase/1__20'(B, A).
'phase/1__19__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C,_),
            E=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(C, F) ->
            'phase/1__19__1'(F, C, D, G, B, A)
        ;   'phase/1__19__0'(G, B, A)
        ).
'phase/1__19__1'([], _, _, A, C, B) :-
        'phase/1__19__0'(A, C, B).
'phase/1__19__1'([H|K], E, A, B, D, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            F==E,
            '$via1_multi_hash_theme_boundary_count/2-1'(E, J) ->
            'phase/1__19__2'(J, G, H, K, E, A, B, D, C)
        ;   'phase/1__19__1'(K, E, A, B, D, C)
        ).
'phase/1__19__2'([], _, _, A, F, B, C, E, D) :-
        'phase/1__19__1'(A, F, B, C, E, D).
'phase/1__19__2'([L|M], H, A, B, G, C, D, F, E) :-
        (   L=suspension(_,K,_,_,I,J),
            K=mutable(active),
            I==G,
            P=t(78,E,C,A,L),
            '$novel_production'(E, P),
            '$novel_production'(C, P),
            '$novel_production'(A, P),
            '$novel_production'(L, P),
            N is H*(J-1) ->
            '$extend_history'(E, P),
            '$activate_constraint_phase/1'(_, E),
            number_duplicates(N),
            (   E=suspension(_,O,_,_,_),
                O=mutable(active) ->
                'chr update_mutable'(inactive, O),
                'phase/1__19__2'(M, H, A, B, G, C, D, F, E)
            ;   true
            )
        ;   'phase/1__19__2'(M, H, A, B, G, C, D, F, E)
        ).
'phase/1__19'(A, B) :-
        'phase/1__20'(A, B).
'phase/1__20'(first_theme_occurrences, A) :- !,
        '$activate_constraint_phase/1'(_, A),
        number_duplicated_measures(0),
        (   A=suspension(_,B,_,_,_),
            B=mutable(active) ->
            'chr update_mutable'(inactive, B),
            'phase/1__21'(first_theme_occurrences, A)
        ;   true
        ).
'phase/1__20'(A, B) :-
        'phase/1__21'(A, B).
'phase/1__21'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', B), !,
        'phase/1__21__0'(B, first_theme_occurrences, A).
'phase/1__21__0'([], B, A) :-
        'phase/1__22'(B, A).
'phase/1__21__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_first_theme_occurrence/4-4'(C, I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,_,_,H,_),
            J=mutable(active),
            H>0 ->
            '$remove_constraint_internal_unspecified_measure/1'(D, K),
            (   K=yes ->
                '$delete_from_store_unspecified_measure/1'(D)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            duplicated_measure(C),
            increment_duplicates,
            (   B=suspension(_,L,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'phase/1__21__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__21__0'(F, A, B)
        ).
'phase/1__21'(A, B) :-
        'phase/1__22'(A, B).
'phase/1__22'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:number_duplicated_measures/1', B), !,
        'phase/1__22__0'(B, first_theme_occurrences, A).
'phase/1__22__0'([], B, A) :-
        'phase/1__23'(B, A).
'phase/1__22__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            L is C+1,
            nb_getval('$chr_store_global_ground_user:increment_duplicates/0', H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_number_duplicated_measures/1'(D, J),
            (   J=yes ->
                '$delete_from_store_number_duplicated_measures/1'(D)
            ;   true
            ),
            '$remove_constraint_internal_increment_duplicates/0'(G, K),
            (   K=yes ->
                '$delete_from_store_increment_duplicates/0'(G)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            number_duplicated_measures(L),
            (   B=suspension(_,M,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'phase/1__22__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__22__0'(F, A, B)
        ).
'phase/1__22'(A, B) :-
        'phase/1__23'(A, B).
'phase/1__23'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:number_duplicates/1', B), !,
        'phase/1__23__0'(B, first_theme_occurrences, A).
'phase/1__23__0'([], B, A) :-
        'phase/1__24'(B, A).
'phase/1__23__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_number_duplicated_measures/1-1'(C, F) ->
            'phase/1__23__1'(F, C, D, G, B, A)
        ;   'phase/1__23__0'(G, B, A)
        ).
'phase/1__23__1'([], _, _, A, C, B) :-
        'phase/1__23__0'(A, C, B).
'phase/1__23__1'([H|I], E, A, B, D, C) :-
        (   H=suspension(_,G,_,_,F),
            G=mutable(active),
            F==E,
            K=t(82,C,A,H),
            '$novel_production'(C, K),
            '$novel_production'(A, K),
            '$novel_production'(H, K) ->
            '$extend_history'(C, K),
            '$activate_constraint_phase/1'(_, C),
            all_duplicates,
            (   C=suspension(_,J,_,_,_),
                J=mutable(active) ->
                'chr update_mutable'(inactive, J),
                'phase/1__23__1'(I, E, A, B, D, C)
            ;   true
            )
        ;   'phase/1__23__1'(I, E, A, B, D, C)
        ).
'phase/1__23'(A, B) :-
        'phase/1__24'(A, B).
'phase/1__24'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:unspecified_successor/2', B), !,
        'phase/1__24__0'(B, first_theme_occurrences, A).
'phase/1__24__0'([], B, A) :-
        'phase/1__25'(B, A).
'phase/1__24__0'([E|G], A, B) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            '$via1_multi_hash_unspecified_successor/2-1'(D, J),
            'chr sbag_member'(H, J),
            H=suspension(_,K,_,_,_,I),
            K=mutable(active),
            H\==E,
            '$via1_multi_hash_duplicated_measure/1-1'(D, M),
            'chr sbag_member'(L, M),
            L=suspension(_,N,_,_),
            N=mutable(active) ->
            '$remove_constraint_internal_unspecified_successor/2'(E, O),
            (   O=yes ->
                '$delete_from_store_unspecified_successor/2'(E)
            ;   true
            ),
            '$remove_constraint_internal_unspecified_successor/2'(H, P),
            (   P=yes ->
                '$delete_from_store_unspecified_successor/2'(H)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            unspec_successor(C, I),
            removed_unspec_successor,
            (   B=suspension(_,Q,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'phase/1__24__0'(G, A, B)
            ;   true
            )
        ;   'phase/1__24__0'(G, A, B)
        ).
'phase/1__24'(A, B) :-
        'phase/1__25'(A, B).
'phase/1__25'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:max_unspecified/1', B), !,
        'phase/1__25__0'(B, first_theme_occurrences, A).
'phase/1__25__0'([], B, A) :-
        'phase/1__26'(B, A).
'phase/1__25__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_unspecified_successor/2-2'(C, I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,H,_),
            J=mutable(active),
            '$via1_multi_hash_duplicated_measure/1-1'(C, L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_),
            M=mutable(active) ->
            '$remove_constraint_internal_max_unspecified/1'(D, N),
            (   N=yes ->
                '$delete_from_store_max_unspecified/1'(D)
            ;   true
            ),
            '$remove_constraint_internal_unspecified_successor/2'(G, O),
            (   O=yes ->
                '$delete_from_store_unspecified_successor/2'(G)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            removed_unspecified_successor,
            max_unspecified(H),
            (   B=suspension(_,P,_,_,_),
                P=mutable(active) ->
                'chr update_mutable'(inactive, P),
                'phase/1__25__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__25__0'(F, A, B)
        ).
'phase/1__25'(A, B) :-
        'phase/1__26'(A, B).
'phase/1__26'(first_theme_occurrences, A) :- !,
        '$activate_constraint_phase/1'(_, A),
        number_removed_unspecified_successors(0),
        (   A=suspension(_,B,_,_,_),
            B=mutable(active) ->
            'chr update_mutable'(inactive, B),
            'phase/1__27'(first_theme_occurrences, A)
        ;   true
        ).
'phase/1__26'(A, B) :-
        'phase/1__27'(A, B).
'phase/1__27'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', B), !,
        'phase/1__27__0'(B, first_theme_occurrences, A).
'phase/1__27__0'([], B, A) :-
        'phase/1__28'(B, A).
'phase/1__27__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            L is C+1,
            nb_getval('$chr_store_global_ground_user:removed_unspecified_successor/0', H),
            'chr sbag_member'(G, H),
            G=suspension(_,I,_,_),
            I=mutable(active) ->
            '$remove_constraint_internal_number_removed_unspecified_successors/1'(D, J),
            (   J=yes ->
                '$delete_from_store_number_removed_unspecified_successors/1'(D)
            ;   true
            ),
            '$remove_constraint_internal_removed_unspecified_successor/0'(G, K),
            (   K=yes ->
                '$delete_from_store_removed_unspecified_successor/0'(G)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            number_removed_unspec_successors(L),
            (   B=suspension(_,M,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'phase/1__27__0'(F, A, B)
            ;   true
            )
        ;   'phase/1__27__0'(F, A, B)
        ).
'phase/1__27'(A, B) :-
        'phase/1__28'(A, B).
'phase/1__28'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', B), !,
        'phase/1__28__0'(B, first_theme_occurrences, A).
'phase/1__28__0'([], B, A) :-
        'phase/1__29'(B, A).
'phase/1__28__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_number_duplicates/1-1'(C, F) ->
            'phase/1__28__1'(F, C, D, G, B, A)
        ;   'phase/1__28__0'(G, B, A)
        ).
'phase/1__28__1'([], _, _, A, C, B) :-
        'phase/1__28__0'(A, C, B).
'phase/1__28__1'([H|I], E, A, B, D, C) :-
        (   H=suspension(_,G,_,_,F),
            G=mutable(active),
            F==E,
            K=t(87,C,A,H),
            '$novel_production'(C, K),
            '$novel_production'(A, K),
            '$novel_production'(H, K) ->
            '$extend_history'(C, K),
            '$activate_constraint_phase/1'(_, C),
            restored_unspec,
            (   C=suspension(_,J,_,_,_),
                J=mutable(active) ->
                'chr update_mutable'(inactive, J),
                'phase/1__28__1'(I, E, A, B, D, C)
            ;   true
            )
        ;   'phase/1__28__1'(I, E, A, B, D, C)
        ).
'phase/1__28'(A, B) :-
        'phase/1__29'(A, B).
'phase/1__29'(first_theme_occurrences, A) :-
        nb_getval('$chr_store_global_ground_user:all_occurrences/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active),
        nb_getval('$chr_store_global_ground_user:all_duplicates/0', F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active),
        nb_getval('$chr_store_global_ground_user:restored_unspec/0', I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_),
        J=mutable(active),
        nb_getval('$chr_store_global_ground_user:first_theme_end/2', L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_all_occurrences/0'(B, N),
        (   N=yes ->
            '$delete_from_store_all_occurrences/0'(B)
        ;   true
        ),
        '$remove_constraint_internal_all_duplicates/0'(E, O),
        (   O=yes ->
            '$delete_from_store_all_duplicates/0'(E)
        ;   true
        ),
        '$remove_constraint_internal_restored_unspec/0'(H, P),
        (   P=yes ->
            '$delete_from_store_restored_unspec/0'(H)
        ;   true
        ),
        '$remove_constraint_internal_phase/1'(A, Q),
        (   Q=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(ready_to_copy).
'phase/1__29'(A, B) :-
        A=split_beats(C),
        nb_getval('$chr_store_global_ground_user:meter/2', D), !,
        'phase/1__29__0'(D, A, B, C).
'phase/1__29__0'([], B, A, _) :-
        'phase/1__30'(B, A).
'phase/1__29__0'([E|H], B, A, C) :-
        (   E=suspension(_,F,_,_,_,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:shortest_duration/2', G) ->
            'phase/1__29__1'(G, D, E, H, B, A, C)
        ;   'phase/1__29__0'(H, B, A, C)
        ).
'phase/1__29__1'([], _, _, A, C, B, D) :-
        'phase/1__29__0'(A, C, B, D).
'phase/1__29__1'([I|L], F, A, B, D, C, E) :-
        (   I=suspension(_,J,_,_,G,H),
            J=mutable(active),
            nb_getval('$chr_store_global_ground_user:measures/1', K) ->
            'phase/1__29__2'(K, G, H, I, L, F, A, B, D, C, E)
        ;   'phase/1__29__1'(L, F, A, B, D, C, E)
        ).
'phase/1__29__2'([], _, _, _, A, G, B, C, E, D, F) :-
        'phase/1__29__1'(A, G, B, C, E, D, F).
'phase/1__29__2'([L|O], I, J, A, B, H, C, D, F, E, G) :-
        (   L=suspension(_,M,_,_,K),
            M=mutable(active),
            '$via1_multi_hash_beat/5-12'(k(I,G), N) ->
            'phase/1__29__3'(N, K, L, O, I, J, A, B, H, C, D, F, E, G)
        ;   'phase/1__29__2'(O, I, J, A, B, H, C, D, F, E, G)
        ).
'phase/1__29__3'([], _, _, A, J, K, B, C, I, D, E, G, F, H) :-
        'phase/1__29__2'(A, J, K, B, C, I, D, E, G, F, H).
'phase/1__29__3'([S|V], M, A, B, K, L, C, D, J, E, F, H, G, I) :-
        (   S=suspension(_,T,_,_,N,O,P,Q,R),
            T=mutable(active),
            N==K,
            O==I,
            '$via1_multi_hash_next_beat/7-1234'(k(K,I,P,Q), U) ->
            'phase/1__29__4'(U, P, Q, R, S, V, M, A, B, K, L, C, D, J, E, F, H, G, I)
        ;   'phase/1__29__3'(V, M, A, B, K, L, C, D, J, E, F, H, G, I)
        ).
'phase/1__29__4'([], _, _, _, _, A, N, B, C, L, M, D, E, K, F, G, I, H, J) :-
        'phase/1__29__3'(A, N, B, C, L, M, D, E, K, F, G, I, H, J).
'phase/1__29__4'([A1|B1], P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, I, K) :-
        (   A1=suspension(_,Z,_,S,T,U,V,W,X,Y),
            Z=mutable(active),
            S==M,
            T==K,
            U==P,
            V==Q,
            I1=t(96,G,I,E,C,A,A1),
            '$novel_production'(G, I1),
            '$novel_production'(I, I1),
            '$novel_production'(E, I1),
            '$novel_production'(C, I1),
            '$novel_production'(A, I1),
            '$novel_production'(A1, I1),
            R<N,
            K\==O,
            'chr lock'(M),
            'chr lock'(K),
            'chr lock'(P),
            'chr lock'(Q),
            'chr lock'(R),
            debugwriteln(considering_splitbeat(M,K,P,Q,R)),
            'chr unlock'(M),
            'chr unlock'(K),
            'chr unlock'(P),
            'chr unlock'(Q),
            'chr unlock'(R) ->
            '$extend_history'(I, I1),
            '$activate_constraint_phase/1'(_, I),
            msw(split_beat(M), C1),
            (   C1=1 ->
                (   '$remove_constraint_internal_beat/5'(A, F1),
                    (   F1=yes ->
                        '$delete_from_store_beat/5'(A)
                    ;   true
                    ),
                    '$remove_constraint_internal_next_beat/7'(A1, G1),
                    (   G1=yes ->
                        '$delete_from_store_next_beat/7'(A1)
                    ;   true
                    ) ->
                    true
                ;   writeln(error_internal),
                    halt
                ),
                D1 is R*2,
                E1 is Q+1/(D1/L),
                debugwriteln(doing_splitbeat(M,K,P,Q,R)),
                next_beat(M, K, P, Q, K, P, E1),
                next_beat(M, K, P, E1, W, X, Y),
                beat(M, K, P, Q, D1),
                beat(M, K, P, E1, D1)
            ;   true
            ),
            (   I=suspension(_,H1,_,_,_),
                H1=mutable(active) ->
                'chr update_mutable'(inactive, H1),
                'phase/1__29__4'(B1, P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, I, K)
            ;   true
            )
        ;   'phase/1__29__4'(B1, P, Q, R, A, B, O, C, D, M, N, E, F, L, G, H, J, I, K)
        ).
'phase/1__29'(A, B) :-
        'phase/1__30'(A, B).
'phase/1__30'(split_beats(B), A) :-
        '$via1_multi_hash_max_unspecified/1-1'(B, D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, F),
        (   F=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(make_notes).
'phase/1__30'(split_beats(B), A) :-
        '$via1_multi_hash_unspecified_successor/2-1'(B, E),
        'chr sbag_member'(C, E),
        C=suspension(_,F,_,_,_,D),
        F=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, G),
        (   G=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(split_beats(D)).
'phase/1__30'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:octave/5', B), !,
        'phase/1__30__0'(B, make_notes, A).
'phase/1__30__0'([], B, A) :-
        'phase/1__31'(B, A).
'phase/1__30__0'([H|J], A, B) :-
        (   H=suspension(_,I,_,_,C,D,E,F,G),
            I=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(C, M),
            'chr sbag_member'(K, M),
            K=suspension(_,N,_,_,L),
            N=mutable(active),
            '$via1_multi_hash_octave/5-1'(C, T),
            'chr sbag_member'(O, T),
            O=suspension(_,U,_,_,_,P,Q,R,S),
            U=mutable(active),
            O\==H,
            '$via1_multi_hash_note/5-1234'(k(C,P,Q,R), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(C,D,E,F), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(C,P,Q,R,D,E,F), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, S, A1, G, H1),
            H1>L ->
            '$remove_constraint_internal_octave/5'(H, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(H)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            wfail(jumpup(H1)),
            (   B=suspension(_,I1,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'phase/1__30__0'(J, A, B)
            ;   true
            )
        ;   'phase/1__30__0'(J, A, B)
        ).
'phase/1__30'(A, B) :-
        'phase/1__31'(A, B).
'phase/1__31'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:octave/5', B), !,
        'phase/1__31__0'(B, make_notes, A).
'phase/1__31__0'([], B, A) :-
        'phase/1__32'(B, A).
'phase/1__31__0'([H|J], A, B) :-
        (   H=suspension(_,I,_,_,C,D,E,F,G),
            I=mutable(active),
            '$via1_multi_hash_max_jump/2-1'(C, M),
            'chr sbag_member'(K, M),
            K=suspension(_,N,_,_,L),
            N=mutable(active),
            '$via1_multi_hash_octave/5-1'(C, T),
            'chr sbag_member'(O, T),
            O=suspension(_,U,_,_,_,P,Q,R,S),
            U=mutable(active),
            O\==H,
            '$via1_multi_hash_note/5-1234'(k(C,P,Q,R), X),
            'chr sbag_member'(V, X),
            V=suspension(_,Y,_,_,_,_,_,_,W),
            Y=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(C,D,E,F), B1),
            'chr sbag_member'(Z, B1),
            Z=suspension(_,C1,_,_,_,_,_,_,A1),
            C1=mutable(active),
            Z\==V,
            '$via1_multi_hash_next_beat/7-1234567'(k(C,P,Q,R,D,E,F), E1),
            'chr sbag_member'(D1, E1),
            D1=suspension(_,F1,_,_,_,_,_,_,_,_),
            F1=mutable(active),
            interval(W, S, A1, G, H1),
            H1< -L ->
            '$remove_constraint_internal_octave/5'(H, G1),
            (   G1=yes ->
                '$delete_from_store_octave/5'(H)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            wfail(jumpdown(H1)),
            (   B=suspension(_,I1,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'phase/1__31__0'(J, A, B)
            ;   true
            )
        ;   'phase/1__31__0'(J, A, B)
        ).
'phase/1__31'(A, B) :-
        'phase/1__32'(A, B).
'phase/1__32'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:same_note_counter/5', B), !,
        'phase/1__32__0'(B, make_notes, A).
'phase/1__32__0'([], B, A) :-
        'phase/1__33'(B, A).
'phase/1__32__0'([H|J], A, B) :-
        (   H=suspension(_,I,_,_,C,D,E,F,G),
            I=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(C,D,E,F), M),
            'chr sbag_member'(K, M),
            K=suspension(_,N,_,_,_,_,_,_,L),
            N=mutable(active),
            '$via1_multi_hash_note/5-1234'(k(C,D,E,F), Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,_,_,_,P),
            R=mutable(active),
            '$via1_multi_hash_next_beat/7-1234'(k(C,D,E,F), W),
            'chr sbag_member'(S, W),
            S=suspension(_,X,_,_,_,_,_,T,U,V),
            X=mutable(active),
            '$via1_multi_hash_octave/5-1234'(k(C,T,U,V), A1),
            'chr sbag_member'(Y, A1),
            Y=suspension(_,B1,_,_,_,_,_,_,Z),
            B1=mutable(active),
            Y\==K,
            '$via1_multi_hash_note/5-1234'(k(C,T,U,V), E1),
            'chr sbag_member'(C1, E1),
            C1=suspension(_,F1,_,_,_,_,_,_,D1),
            F1=mutable(active),
            C1\==O ->
            '$remove_constraint_internal_same_note_counter/5'(H, G1),
            (   G1=yes ->
                '$delete_from_store_same_note_counter/5'(H)
            ;   true
            ),
            '$activate_constraint_phase/1'(_, B),
            (   L==Z,
                P==D1 ->
                H1 is G+1,
                same_note_counter(C, T, U, V, H1)
            ;   same_note_counter(C, T, U, V, 0)
            ),
            (   B=suspension(_,I1,_,_,_),
                I1=mutable(active) ->
                'chr update_mutable'(inactive, I1),
                'phase/1__32__0'(J, A, B)
            ;   true
            )
        ;   'phase/1__32__0'(J, A, B)
        ).
'phase/1__32'(A, B) :-
        'phase/1__33'(A, B).
'phase/1__33'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:max_repeat/2', E),
        'chr sbag_member'(B, E),
        B=suspension(_,F,_,_,C,D),
        F=mutable(active),
        '$via1_multi_hash_same_note_counter/5-15'(k(C,D), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_max_repeat/2'(B, J),
        (   J=yes ->
            '$delete_from_store_max_repeat/2'(B)
        ;   true
        ),
        '$remove_constraint_internal_same_note_counter/5'(G, K),
        (   K=yes ->
            '$delete_from_store_same_note_counter/5'(G)
        ;   true
        ),
        '$remove_constraint_internal_phase/1'(A, L),
        (   L=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        wfail(repeat(C,D)).
'phase/1__33'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:note/5', B), !,
        'phase/1__33__0'(B, make_notes, A).
'phase/1__33__0'([], B, A) :-
        'phase/1__34'(B, A).
'phase/1__33__0'([I|J], B, A) :-
        (   I=suspension(_,H,_,_,C,D,E,F,G),
            H=mutable(active),
            L=t(112,A,I),
            '$novel_production'(A, L),
            '$novel_production'(I, L),
            C\==drums,
            C\==chords ->
            '$extend_history'(A, L),
            '$activate_constraint_phase/1'(_, A),
            debugwriteln(checking_scale(C,D,E,F,G)),
            (   member(G, [r,c,d,e,f,g,a,b]) ->
                true
            ;   msw(scale(C), no)
            ),
            debugwriteln(ok),
            (   A=suspension(_,K,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'phase/1__33__0'(J, B, A)
            ;   true
            )
        ;   'phase/1__33__0'(J, B, A)
        ).
'phase/1__33'(A, B) :-
        'phase/1__34'(A, B).
'phase/1__34'(make_notes, A) :-
        '$via1_multi_hash_unspecified_successor/2-1'(0, B), !,
        'phase/1__34__0'(B, make_notes, A).
'phase/1__34__0'([], B, A) :-
        'phase/1__35'(B, A).
'phase/1__34__0'([F|G], B, A) :-
        (   F=suspension(_,E,_,_,C,D),
            E=mutable(active),
            C=0,
            I=t(113,A,F),
            '$novel_production'(A, I),
            '$novel_production'(F, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_phase/1'(_, A),
            make_notes_measure(D),
            (   A=suspension(_,H,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'phase/1__34__0'(G, B, A)
            ;   true
            )
        ;   'phase/1__34__0'(G, B, A)
        ).
'phase/1__34'(A, B) :-
        'phase/1__35'(A, B).
'phase/1__35'(make_notes, A) :-
        '$via1_multi_hash_beat/5-1'(drums, B), !,
        'phase/1__35__0'(B, make_notes, A).
'phase/1__35__0'([], B, A) :-
        'phase/1__36'(B, A).
'phase/1__35__0'([G|J], B, A) :-
        (   G=suspension(_,H,_,_,C,D,E,F,_),
            H=mutable(active),
            C=drums,
            '$via1_multi_hash_unspecified_measure/1-1'(D, I) ->
            'phase/1__35__1'(I, D, E, F, G, J, B, A)
        ;   'phase/1__35__0'(J, B, A)
        ).
'phase/1__35__1'([], _, _, _, _, A, C, B) :-
        'phase/1__35__0'(A, C, B).
'phase/1__35__1'([J|K], E, F, G, A, B, D, C) :-
        (   J=suspension(_,I,_,_,H),
            I=mutable(active),
            H==E,
            O=t(120,C,A,J),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(J, O) ->
            '$extend_history'(C, O),
            '$activate_constraint_phase/1'(_, C),
            abstract_beat(E, F, G, L),
            msw(drum_choice(L), M),
            debugwriteln(msw(drum_choice(L),M)),
            note(drums, E, F, G, M),
            (   C=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'phase/1__35__1'(K, E, F, G, A, B, D, C)
            ;   true
            )
        ;   'phase/1__35__1'(K, E, F, G, A, B, D, C)
        ).
'phase/1__35'(A, B) :-
        'phase/1__36'(A, B).
'phase/1__36'(make_notes, A) :-
        nb_getval('$chr_store_global_ground_user:chord_style/1', B), !,
        'phase/1__36__0'(B, make_notes, A).
'phase/1__36__0'([], B, A) :-
        'phase/1__37'(B, A).
'phase/1__36__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_beat/5-1'(chords, F) ->
            'phase/1__36__1'(F, C, D, G, B, A)
        ;   'phase/1__36__0'(G, B, A)
        ).
'phase/1__36__1'([], _, _, A, C, B) :-
        'phase/1__36__0'(A, C, B).
'phase/1__36__1'([J|M], E, A, B, D, C) :-
        (   J=suspension(_,K,_,_,F,G,H,I,_),
            K=mutable(active),
            F=chords,
            '$via1_multi_hash_mchord/2-1'(G, L) ->
            'phase/1__36__2'(L, G, H, I, J, M, E, A, B, D, C)
        ;   'phase/1__36__1'(M, E, A, B, D, C)
        ).
'phase/1__36__2'([], _, _, _, _, A, F, B, C, E, D) :-
        'phase/1__36__1'(A, F, B, C, E, D).
'phase/1__36__2'([M|P], H, I, J, A, B, G, C, D, F, E) :-
        (   M=suspension(_,N,_,_,K,L),
            N=mutable(active),
            K==H,
            '$via1_multi_hash_unspecified_measure/1-1'(H, O) ->
            'phase/1__36__3'(O, L, M, P, H, I, J, A, B, G, C, D, F, E)
        ;   'phase/1__36__2'(P, H, I, J, A, B, G, C, D, F, E)
        ).
'phase/1__36__3'([], _, _, A, I, J, K, B, C, H, D, E, G, F) :-
        'phase/1__36__2'(A, I, J, K, B, C, H, D, E, G, F).
'phase/1__36__3'([P|Q], M, A, B, J, K, L, C, D, I, E, F, H, G) :-
        (   P=suspension(_,O,_,_,N),
            O=mutable(active),
            N==J,
            U=t(121,G,E,C,A,P),
            '$novel_production'(G, U),
            '$novel_production'(E, U),
            '$novel_production'(C, U),
            '$novel_production'(A, U),
            '$novel_production'(P, U) ->
            '$extend_history'(G, U),
            '$activate_constraint_phase/1'(_, G),
            abstract_beat(J, K, L, R),
            msw(chord_type(I,R), S),
            debugwrite('DEBUG: making notes: '),
            debugwriteln(mchord(J,M)),
            debugwriteln(msw(chord_type(I,R),S)),
            chord(M, J, K, L, S),
            (   G=suspension(_,T,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'phase/1__36__3'(Q, M, A, B, J, K, L, C, D, I, E, F, H, G)
            ;   true
            )
        ;   'phase/1__36__3'(Q, M, A, B, J, K, L, C, D, I, E, F, H, G)
        ).
'phase/1__36'(A, B) :-
        'phase/1__37'(A, B).
'phase/1__37'(make_notes, A) :- !,
        '$remove_constraint_internal_phase/1'(A, B),
        (   B=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(join_notes).
'phase/1__37'(join_notes, A) :-
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', B), !,
        'phase/1__37__0'(B, join_notes, A).
'phase/1__37__0'([], B, A) :-
        'phase/1__38'(B, A).
'phase/1__37__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', F) ->
            'phase/1__37__1'(F, C, D, G, B, A)
        ;   'phase/1__37__0'(G, B, A)
        ).
'phase/1__37__1'([], _, _, A, C, B) :-
        'phase/1__37__0'(A, C, B).
'phase/1__37__1'([G|J], E, A, B, D, C) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            G\==A,
            '$via1_multi_hash_note/5-2'(E, I) ->
            'phase/1__37__2'(I, F, G, J, E, A, B, D, C)
        ;   'phase/1__37__1'(J, E, A, B, D, C)
        ).
'phase/1__37__2'([], _, _, A, F, B, C, E, D) :-
        'phase/1__37__1'(A, F, B, C, E, D).
'phase/1__37__2'([N|Q], H, A, B, G, C, D, F, E) :-
        (   N=suspension(_,O,_,_,I,J,K,L,M),
            O=mutable(active),
            J==G,
            '$via1_multi_hash_next_beat/7-12345'(k(I,G,K,L,H), P) ->
            'phase/1__37__3'(P, I, K, L, M, N, Q, H, A, B, G, C, D, F, E)
        ;   'phase/1__37__2'(Q, H, A, B, G, C, D, F, E)
        ).
'phase/1__37__3'([], _, _, _, _, _, A, I, B, C, H, D, E, G, F) :-
        'phase/1__37__2'(A, I, B, C, H, D, E, G, F).
'phase/1__37__3'([V|Y], K, L, M, N, A, B, J, C, D, I, E, F, H, G) :-
        (   V=suspension(_,W,_,O,P,Q,R,S,T,U),
            W=mutable(active),
            O==K,
            P==I,
            Q==L,
            R==M,
            S==J,
            '$via1_multi_hash_note/5-12345'(k(K,J,T,U,N), X) ->
            'phase/1__37__4'(X, T, U, V, Y, K, L, M, N, A, B, J, C, D, I, E, F, H, G)
        ;   'phase/1__37__3'(Y, K, L, M, N, A, B, J, C, D, I, E, F, H, G)
        ).
'phase/1__37__4'([], _, _, _, A, L, M, N, O, B, C, K, D, E, J, F, G, I, H) :-
        'phase/1__37__3'(A, L, M, N, O, B, C, K, D, E, J, F, G, I, H).
'phase/1__37__4'([Y|Z], Q, R, A, B, M, N, O, P, C, D, L, E, F, K, G, H, J, I) :-
        (   Y=suspension(_,X,_,_,S,T,U,V,W),
            X=mutable(active),
            Y\==C,
            S==M,
            T==L,
            U==Q,
            V==R,
            W==P,
            E1=t(136,I,G,E,C,A,Y),
            '$novel_production'(I, E1),
            '$novel_production'(G, E1),
            '$novel_production'(E, E1),
            '$novel_production'(C, E1),
            '$novel_production'(A, E1),
            '$novel_production'(Y, E1),
            M\==drums ->
            '$extend_history'(I, E1),
            '$activate_constraint_phase/1'(_, I),
            (   K=L ->
                A1=yes
            ;   A1=no
            ),
            (   N=Q ->
                B1=yes
            ;   B1=no
            ),
            msw(join_notes(M,A1,B1), C1),
            (   C1=1 ->
                debugwriteln(join_notes(M,K,N,O,P,L,Q,R)),
                tied(M, K, N, O),
                debugwriteln(joined(P))
            ;   C1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,D1,_,_,_),
                D1=mutable(active) ->
                'chr update_mutable'(inactive, D1),
                'phase/1__37__4'(Z, Q, R, A, B, M, N, O, P, C, D, L, E, F, K, G, H, J, I)
            ;   true
            )
        ;   'phase/1__37__4'(Z, Q, R, A, B, M, N, O, P, C, D, L, E, F, K, G, H, J, I)
        ).
'phase/1__37'(A, B) :-
        'phase/1__38'(A, B).
'phase/1__38'(join_notes, A) :-
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', B), !,
        'phase/1__38__0'(B, join_notes, A).
'phase/1__38__0'([], B, A) :-
        'phase/1__39'(B, A).
'phase/1__38__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            '$via1_multi_hash_note/5-2'(C, F) ->
            'phase/1__38__1'(F, C, D, G, B, A)
        ;   'phase/1__38__0'(G, B, A)
        ).
'phase/1__38__1'([], _, _, A, C, B) :-
        'phase/1__38__0'(A, C, B).
'phase/1__38__1'([K|N], E, A, B, D, C) :-
        (   K=suspension(_,L,_,_,F,G,H,I,J),
            L=mutable(active),
            G==E,
            '$via1_multi_hash_next_beat/7-12345'(k(F,E,H,I,E), M) ->
            'phase/1__38__2'(M, F, H, I, J, K, N, E, A, B, D, C)
        ;   'phase/1__38__1'(N, E, A, B, D, C)
        ).
'phase/1__38__2'([], _, _, _, _, _, A, F, B, C, E, D) :-
        'phase/1__38__1'(A, F, B, C, E, D).
'phase/1__38__2'([S|V], H, I, J, K, A, B, G, C, D, F, E) :-
        (   S=suspension(_,T,_,L,M,N,O,P,Q,R),
            T=mutable(active),
            L==H,
            M==G,
            N==I,
            O==J,
            P=G,
            '$via1_multi_hash_note/5-12345'(k(H,G,Q,R,K), U) ->
            'phase/1__38__3'(U, Q, R, S, V, H, I, J, K, A, B, G, C, D, F, E)
        ;   'phase/1__38__2'(V, H, I, J, K, A, B, G, C, D, F, E)
        ).
'phase/1__38__3'([], _, _, _, A, I, J, K, L, B, C, H, D, E, G, F) :-
        'phase/1__38__2'(A, I, J, K, L, B, C, H, D, E, G, F).
'phase/1__38__3'([V|W], N, O, A, B, J, K, L, M, C, D, I, E, F, H, G) :-
        (   V=suspension(_,U,_,_,P,Q,R,S,T),
            U=mutable(active),
            V\==C,
            P==J,
            Q==I,
            R==N,
            S==O,
            T==M,
            B1=t(137,G,E,C,A,V),
            '$novel_production'(G, B1),
            '$novel_production'(E, B1),
            '$novel_production'(C, B1),
            '$novel_production'(A, B1),
            '$novel_production'(V, B1),
            J\==drums ->
            '$extend_history'(G, B1),
            '$activate_constraint_phase/1'(_, G),
            (   I=_ ->
                X=yes
            ;   X=no
            ),
            (   K=N ->
                Y=yes
            ;   Y=no
            ),
            msw(join_notes(J,X,Y), Z),
            (   Z=1 ->
                debugwriteln(join_notes(J,I,K,L,M,I,N,O)),
                tied(J, I, K, L),
                debugwriteln(joined(M))
            ;   Z=2 ->
                true
            ;   fail
            ),
            (   G=suspension(_,A1,_,_,_),
                A1=mutable(active) ->
                'chr update_mutable'(inactive, A1),
                'phase/1__38__3'(W, N, O, A, B, J, K, L, M, C, D, I, E, F, H, G)
            ;   true
            )
        ;   'phase/1__38__3'(W, N, O, A, B, J, K, L, M, C, D, I, E, F, H, G)
        ).
'phase/1__38'(A, B) :-
        'phase/1__39'(A, B).
'phase/1__39'(join_notes, A) :-
        nb_getval('$chr_store_global_ground_user:play/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, E),
        (   E=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(output).
'phase/1__39'(join_notes, A) :-
        nb_getval('$chr_store_global_ground_user:show/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_phase/1'(A, E),
        (   E=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        phase(output).
'phase/1__39'(join_notes, A) :- !,
        '$remove_constraint_internal_phase/1'(A, B),
        (   B=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        debugwriteln(foundCANDIDATE_SOLUTION).
'phase/1__39'(output, A) :- !,
        '$remove_constraint_internal_phase/1'(A, B),
        (   B=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        tell('temp.ly'),
        header,
        write_notes,
        footer,
        show_footer,
        play_footer,
        end_footer,
        told,
        tell('temp.result'),
        css2,
        told.
'phase/1__39'(output, A) :- !,
        '$remove_constraint_internal_phase/1'(A, B),
        (   B=yes ->
            '$delete_from_store_phase/1'(A)
        ;   true
        ),
        debugwriteln(foundCANDIDATE).
'phase/1__39'(_, A) :-
        '$activate_constraint_phase/1'(_, A).
chord(A, B, C, D, E) :-
        '$insert_constraint_internal_chord/5'(F, A, B, C, D, E),
        '$insert_in_store_chord/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'chord/5__0'(A, B, C, D, E, F).
'chord/5__0'(_, A, B, C, r, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, r).
'chord/5__0'(c, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, c).
'chord/5__0'(g, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, g).
'chord/5__0'(f, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, f).
'chord/5__0'(am, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, a+':m').
'chord/5__0'(em, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, e+':m').
'chord/5__0'(dm, A, B, C, 0, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, d+':m').
'chord/5__0'(c, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, c+':7').
'chord/5__0'(g, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, g+':7').
'chord/5__0'(f, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, f+':7').
'chord/5__0'(am, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, a+':m7').
'chord/5__0'(em, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, e+':m7').
'chord/5__0'(dm, A, B, C, 7, D) :- !,
        '$remove_constraint_internal_chord/5'(D, E),
        (   E=yes ->
            '$delete_from_store_chord/5'(D)
        ;   true
        ),
        note(chords, A, B, C, d+':m7').
'chord/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_chord/5'(_, A).
octave_d(A, B, C, D, E) :-
        '$insert_constraint_internal_octave_d/5'(F, A, B, C, D, E),
        '$insert_in_store_octave_d/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'octave_d/5__0'(A, B, C, D, E, F).
'octave_d/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_octave/5-1'(A, L),
        'chr sbag_member'(G, L),
        G=suspension(_,M,_,_,_,H,I,J,K),
        M=mutable(active),
        '$via1_multi_hash_next_beat/7-1234567'(k(A,H,I,J,B,C,D), O),
        'chr sbag_member'(N, O),
        N=suspension(_,P,_,_,_,_,_,_,_,_),
        P=mutable(active), !,
        '$remove_constraint_internal_octave_d/5'(F, R),
        (   R=yes ->
            '$delete_from_store_octave_d/5'(F)
        ;   true
        ),
        Q is K+E,
        octave_rangecheck(A, B, C, D, Q).
'octave_d/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_octave_d/5'(_, A).
octave_rangecheck(A, B, C, D, E) :-
        '$insert_constraint_internal_octave_rangecheck/5'(F, A, B, C, D, E),
        '$insert_in_store_octave_rangecheck/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'octave_rangecheck/5__0'(A, B, C, D, E, F).
'octave_rangecheck/5__0'(A, _, _, _, B, C) :-
        '$via1_multi_hash_range/5-1'(A, F),
        'chr sbag_member'(D, F),
        D=suspension(_,G,_,_,_,E,_,_),
        G=mutable(active),
        B<E, !,
        '$remove_constraint_internal_octave_rangecheck/5'(C, H),
        (   H=yes ->
            '$delete_from_store_octave_rangecheck/5'(C)
        ;   true
        ),
        wfail(lowO).
'octave_rangecheck/5__0'(A, _, _, _, B, C) :-
        '$via1_multi_hash_range/5-1'(A, F),
        'chr sbag_member'(D, F),
        D=suspension(_,G,_,_,_,_,_,E),
        G=mutable(active),
        B>E, !,
        '$remove_constraint_internal_octave_rangecheck/5'(C, H),
        (   H=yes ->
            '$delete_from_store_octave_rangecheck/5'(C)
        ;   true
        ),
        wfail(highO).
'octave_rangecheck/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_range/5-13'(k(A,E), I),
        'chr sbag_member'(G, I),
        G=suspension(_,J,_,_,H,_,_,_),
        J=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), M),
        'chr sbag_member'(K, M),
        K=suspension(_,N,_,_,_,_,_,_,L),
        N=mutable(active),
        L\==r,
        note_below(L, H), !,
        '$remove_constraint_internal_octave_rangecheck/5'(F, O),
        (   O=yes ->
            '$delete_from_store_octave_rangecheck/5'(F)
        ;   true
        ),
        wfail(low).
'octave_rangecheck/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_range/5-15'(k(A,E), I),
        'chr sbag_member'(G, I),
        G=suspension(_,J,_,_,_,_,H,_),
        J=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), M),
        'chr sbag_member'(K, M),
        K=suspension(_,N,_,_,_,_,_,_,L),
        N=mutable(active),
        L\==r,
        note_above(L, H), !,
        '$remove_constraint_internal_octave_rangecheck/5'(F, O),
        (   O=yes ->
            '$delete_from_store_octave_rangecheck/5'(F)
        ;   true
        ),
        wfail(high).
'octave_rangecheck/5__0'(A, B, C, D, E, F) :- !,
        '$remove_constraint_internal_octave_rangecheck/5'(F, G),
        (   G=yes ->
            '$delete_from_store_octave_rangecheck/5'(F)
        ;   true
        ),
        octave(A, B, C, D, E).
'octave_rangecheck/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_octave_rangecheck/5'(_, A).
same_note_counter(A, B, C, D, E) :-
        '$insert_constraint_internal_same_note_counter/5'(F, A, B, C, D, E),
        '$insert_in_store_same_note_counter/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'same_note_counter/5__0'(A, B, C, D, E, F).
'same_note_counter/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_phase/1-1'(make_notes, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active),
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), L),
        'chr sbag_member'(J, L),
        J=suspension(_,M,_,_,_,_,_,_,K),
        M=mutable(active),
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), P),
        'chr sbag_member'(N, P),
        N=suspension(_,Q,_,_,_,_,_,_,O),
        Q=mutable(active),
        '$via1_multi_hash_next_beat/7-1234'(k(A,B,C,D), V),
        'chr sbag_member'(R, V),
        R=suspension(_,W,_,_,_,_,_,S,T,U),
        W=mutable(active),
        '$via1_multi_hash_octave/5-1234'(k(A,S,T,U), Z),
        'chr sbag_member'(X, Z),
        X=suspension(_,A1,_,_,_,_,_,_,Y),
        A1=mutable(active),
        X\==J,
        '$via1_multi_hash_note/5-1234'(k(A,S,T,U), D1),
        'chr sbag_member'(B1, D1),
        B1=suspension(_,E1,_,_,_,_,_,_,C1),
        E1=mutable(active),
        B1\==N, !,
        '$remove_constraint_internal_same_note_counter/5'(F, G1),
        (   G1=yes ->
            '$delete_from_store_same_note_counter/5'(F)
        ;   true
        ),
        (   K==Y,
            O==C1 ->
            F1 is E+1,
            same_note_counter(A, S, T, U, F1)
        ;   same_note_counter(A, S, T, U, 0)
        ).
'same_note_counter/5__0'(A, _, _, _, B, C) :-
        '$via1_multi_hash_phase/1-1'(make_notes, E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_),
        F=mutable(active),
        '$via1_multi_hash_max_repeat/2-12'(k(A,B), H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_phase/1'(D, J),
        (   J=yes ->
            '$delete_from_store_phase/1'(D)
        ;   true
        ),
        '$remove_constraint_internal_max_repeat/2'(G, K),
        (   K=yes ->
            '$delete_from_store_max_repeat/2'(G)
        ;   true
        ),
        '$remove_constraint_internal_same_note_counter/5'(C, L),
        (   L=yes ->
            '$delete_from_store_same_note_counter/5'(C)
        ;   true
        ),
        wfail(repeat(A,B)).
'same_note_counter/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_same_note_counter/5'(_, A).
make_notes_measure(A) :-
        '$insert_constraint_internal_make_notes_measure/1'(B, A),
        '$insert_in_store_make_notes_measure/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'make_notes_measure/1__0'(A, B).
'make_notes_measure/1__0'(1, A) :-
        '$via1_multi_hash_beat/5-234'(k(1,0,0), B), !,
        'make_notes_measure/1__0__0'(B, 1, A).
'make_notes_measure/1__0__0'([], B, A) :-
        'make_notes_measure/1__1'(B, A).
'make_notes_measure/1__0__0'([G|J], B, A) :-
        (   G=suspension(_,H,_,_,C,D,E,F,_),
            H=mutable(active),
            D=1,
            E=0,
            F=0,
            '$via1_multi_hash_mchord/2-1'(1, I) ->
            'make_notes_measure/1__0__1'(I, C, G, J, B, A)
        ;   'make_notes_measure/1__0__0'(J, B, A)
        ).
'make_notes_measure/1__0__1'([], _, _, A, C, B) :-
        'make_notes_measure/1__0__0'(A, C, B).
'make_notes_measure/1__0__1'([I|J], E, A, B, D, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            F=1,
            O=t(114,C,A,I),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(I, O),
            E\==drums,
            E\==chords ->
            '$extend_history'(C, O),
            '$activate_constraint_make_notes_measure/1'(_, C),
            debugwriteln('DEBUG: Making notes for first measure.'),
            abstract_beat(1, 0, 0, K),
            soft_msw(note_choice(E,K), L),
            debugwriteln(picked(note_choice(E,K),L)),
            pick_concrete_note(E, G, L, M),
            debugwriteln(concrete_note(E,G,L,M)),
            anote(E, 1, 0, 0, L),
            note(E, 1, 0, 0, M),
            (   C=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'make_notes_measure/1__0__1'(J, E, A, B, D, C)
            ;   true
            )
        ;   'make_notes_measure/1__0__1'(J, E, A, B, D, C)
        ).
'make_notes_measure/1__0'(A, B) :-
        'make_notes_measure/1__1'(A, B).
'make_notes_measure/1__1'(A, B) :-
        '$via1_multi_hash_beat/5-2'(A, C), !,
        'make_notes_measure/1__1__0'(C, A, B).
'make_notes_measure/1__1__0'([], B, A) :-
        'make_notes_measure/1__2'(B, A).
'make_notes_measure/1__1__0'([G|J], B, A) :-
        (   G=suspension(_,H,_,_,C,D,E,F,_),
            H=mutable(active),
            D==B,
            '$via1_multi_hash_mchord/2-1'(B, I) ->
            'make_notes_measure/1__1__1'(I, C, E, F, G, J, B, A)
        ;   'make_notes_measure/1__1__0'(J, B, A)
        ).
'make_notes_measure/1__1__1'([], _, _, _, _, A, C, B) :-
        'make_notes_measure/1__1__0'(A, C, B).
'make_notes_measure/1__1__1'([J|M], E, F, G, A, B, D, C) :-
        (   J=suspension(_,K,_,_,H,I),
            K=mutable(active),
            H==D,
            '$via1_multi_hash_octave/5-1'(E, L) ->
            'make_notes_measure/1__1__2'(L, I, J, M, E, F, G, A, B, D, C)
        ;   'make_notes_measure/1__1__1'(M, E, F, G, A, B, D, C)
        ).
'make_notes_measure/1__1__2'([], _, _, A, F, G, H, B, C, E, D) :-
        'make_notes_measure/1__1__1'(A, F, G, H, B, C, E, D).
'make_notes_measure/1__1__2'([P|S], J, A, B, G, H, I, C, D, F, E) :-
        (   P=suspension(_,Q,_,_,K,L,M,N,O),
            Q=mutable(active),
            K==G,
            '$via1_multi_hash_next_beat/7-1234567'(k(G,L,M,N,F,H,I), R) ->
            'make_notes_measure/1__1__3'(R, L, M, N, O, P, S, J, A, B, G, H, I, C, D, F, E)
        ;   'make_notes_measure/1__1__2'(S, J, A, B, G, H, I, C, D, F, E)
        ).
'make_notes_measure/1__1__3'([], _, _, _, _, _, A, K, B, C, H, I, J, D, E, G, F) :-
        'make_notes_measure/1__1__2'(A, K, B, C, H, I, J, D, E, G, F).
'make_notes_measure/1__1__3'([Y|Z], M, N, O, P, A, B, L, C, D, I, J, K, E, F, H, G) :-
        (   Y=suspension(_,X,_,Q,R,S,T,U,V,W),
            X=mutable(active),
            Q==I,
            R==M,
            S==N,
            T==O,
            U==H,
            V==J,
            W==K,
            E1=t(115,G,E,C,A,Y),
            '$novel_production'(G, E1),
            '$novel_production'(E, E1),
            '$novel_production'(C, E1),
            '$novel_production'(A, E1),
            '$novel_production'(Y, E1),
            I\==drums,
            I\==chords ->
            '$extend_history'(G, E1),
            '$activate_constraint_make_notes_measure/1'(_, G),
            debugwriteln('DEBUG: Making notes for some measure'),
            abstract_beat(H, J, K, A1),
            soft_msw(note_choice(I,A1), B1),
            debugwriteln(picked(note_choice(I,A1),B1)),
            pick_concrete_note(I, L, B1, C1),
            debugwriteln(concrete_note(I,L,B1,C1)),
            anote(I, H, J, K, B1),
            note(I, H, J, K, C1),
            (   C1==r ->
                octave_d(I, H, J, K, 0)
            ;   find_octave_d(I, H, J, K, P)
            ),
            (   G=suspension(_,D1,_,_,_),
                D1=mutable(active) ->
                'chr update_mutable'(inactive, D1),
                'make_notes_measure/1__1__3'(Z, M, N, O, P, A, B, L, C, D, I, J, K, E, F, H, G)
            ;   true
            )
        ;   'make_notes_measure/1__1__3'(Z, M, N, O, P, A, B, L, C, D, I, J, K, E, F, H, G)
        ).
'make_notes_measure/1__1'(A, B) :-
        'make_notes_measure/1__2'(A, B).
'make_notes_measure/1__2'(A, B) :-
        nb_getval('$chr_store_global_ground_user:measures/1', D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active),
        '$via1_multi_hash_unspecified_successor/2-1'(A, H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,_,G),
        I=mutable(active), !,
        '$remove_constraint_internal_make_notes_measure/1'(B, J),
        (   J=yes ->
            '$delete_from_store_make_notes_measure/1'(B)
        ;   true
        ),
        debugwrite('DEBUG: '),
        debugwriteln(make_notes_measure(G)),
        make_notes_measure(G).
'make_notes_measure/1__2'(A, B) :-
        '$via1_multi_hash_max_unspecified/1-1'(A, D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active), !,
        '$remove_constraint_internal_make_notes_measure/1'(B, F),
        (   F=yes ->
            '$delete_from_store_make_notes_measure/1'(B)
        ;   true
        ).
'make_notes_measure/1__2'(_, A) :-
        '$activate_constraint_make_notes_measure/1'(_, A).
find_octave_d(A, B, C, D, E) :-
        '$insert_constraint_internal_find_octave_d/5'(F, A, B, C, D, E),
        '$insert_in_store_find_octave_d/5'(F),
        arg(2, F, G),
        'chr update_mutable'(inactive, G),
        'find_octave_d/5__0'(A, B, C, D, E, F).
'find_octave_d/5__0'(A, B, C, D, E, F) :-
        '$via1_multi_hash_range/5-1'(A, J),
        'chr sbag_member'(G, J),
        G=suspension(_,K,_,_,_,H,_,I),
        K=mutable(active), !,
        '$remove_constraint_internal_find_octave_d/5'(F, N),
        (   N=yes ->
            '$delete_from_store_find_octave_d/5'(F)
        ;   true
        ),
        octave_compare(H, E, I, L),
        soft_msw(octave_choice(L), M),
        debugwriteln(octave_choice(L,M)),
        octave_d(A, B, C, D, M).
'find_octave_d/5__0'(A, _, _, _, _, B) :- !,
        '$remove_constraint_internal_find_octave_d/5'(B, C),
        (   C=yes ->
            '$delete_from_store_find_octave_d/5'(B)
        ;   true
        ),
        writeln(oops-no-range-for(A)).
'find_octave_d/5__0'(_, _, _, _, _, A) :-
        '$activate_constraint_find_octave_d/5'(_, A).
chord_scheme(A) :-
        '$insert_constraint_internal_chord_scheme/1'(B, A),
        '$insert_in_store_chord_scheme/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'chord_scheme/1__0'(A, B).
'chord_scheme/1__0'(A, B) :- !,
        debugwrite('DEBUG: chord scheme: '),
        debugwriteln(A),
        'chord_scheme/1__1'(A, B).
'chord_scheme/1__1'(a, A) :-
        '$via1_multi_hash_measure/1-1'(1, C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active),
        '$via1_multi_hash_key/1-1'(major, F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active), !,
        '$remove_constraint_internal_chord_scheme/1'(A, H),
        (   H=yes ->
            '$delete_from_store_chord_scheme/1'(A)
        ;   true
        ),
        debugwriteln('dDEBUG: using first major progression'),
        mchord(1, c),
        mchord(2, f),
        mchord(3, c),
        mchord(4, c),
        mchord(5, f),
        mchord(6, f),
        mchord(7, c),
        mchord(8, c),
        mchord(9, g),
        mchord(10, f),
        mchord(11, c),
        mchord(12, g),
        mchord(13, c),
        theme_boundary(u, 0),
        theme_boundary(a, 2),
        theme_boundary(a, 4),
        theme_boundary(a, 6),
        theme_boundary(u, 8).
'chord_scheme/1__1'(a, A) :-
        '$via1_multi_hash_measure/1-1'(1, C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active),
        '$via1_multi_hash_key/1-1'(minor, F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active), !,
        '$remove_constraint_internal_chord_scheme/1'(A, H),
        (   H=yes ->
            '$delete_from_store_chord_scheme/1'(A)
        ;   true
        ),
        debugwriteln('DEBUG: using first minor progression'),
        theme_boundary(u, 0),
        theme_boundary(a, 2),
        theme_boundary(a, 4),
        theme_boundary(a, 6),
        theme_boundary(u, 8),
        mchord(1, am),
        mchord(2, dm),
        mchord(3, am),
        mchord(4, am),
        mchord(5, dm),
        mchord(6, dm),
        mchord(7, am),
        mchord(8, am),
        mchord(9, em),
        mchord(10, dm),
        mchord(11, am),
        mchord(12, am),
        mchord(13, am).
'chord_scheme/1__1'(_, A) :-
        '$activate_constraint_chord_scheme/1'(_, A).
theme_boundary(A, B) :-
        '$insert_constraint_internal_theme_boundary/2'(C, A, B),
        '$insert_in_store_theme_boundary/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'theme_boundary/2__0'(A, B, C).
'theme_boundary/2__0'(A, 0, B) :- !,
        '$activate_constraint_theme_boundary/2'(_, B),
        phase(length_succession),
        (   B=suspension(_,C,_,_,_,_),
            C=mutable(active) ->
            'chr update_mutable'(inactive, C),
            'theme_boundary/2__1'(A, 0, B)
        ;   true
        ).
'theme_boundary/2__0'(A, B, C) :-
        'theme_boundary/2__1'(A, B, C).
'theme_boundary/2__1'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, D), !,
        'theme_boundary/2__1__0'(D, A, B, C).
'theme_boundary/2__1__0'([], B, C, A) :-
        'theme_boundary/2__2'(B, C, A).
'theme_boundary/2__1__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D=length_succession,
            I=t(56,F,A),
            '$novel_production'(F, I),
            '$novel_production'(A, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_theme_boundary/2'(_, A),
            theme_boundaries(B),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'theme_boundary/2__1__0'(G, B, C, A)
            ;   true
            )
        ;   'theme_boundary/2__1__0'(G, B, C, A)
        ).
'theme_boundary/2__1'(A, B, C) :-
        'theme_boundary/2__2'(A, B, C).
'theme_boundary/2__2'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, D), !,
        'theme_boundary/2__2__0'(D, A, B, C).
'theme_boundary/2__2__0'([], B, C, A) :-
        'theme_boundary/2__3'(B, C, A).
'theme_boundary/2__2__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=length_succession,
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', G) ->
            'theme_boundary/2__2__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__2__0'(H, B, C, A)
        ).
'theme_boundary/2__2__1'([], _, A, C, D, B) :-
        'theme_boundary/2__2__0'(A, C, D, B).
'theme_boundary/2__2__1'([H|I], A, B, D, E, C) :-
        (   H=suspension(_,G,_,_,_,F),
            G=mutable(active),
            L=t(59,A,C,H),
            '$novel_production'(A, L),
            '$novel_production'(C, L),
            '$novel_production'(H, L),
            D\==u,
            F>E,
            J is F-E ->
            '$extend_history'(C, L),
            '$activate_constraint_theme_boundary/2'(_, C),
            theme_length(D, J),
            (   C=suspension(_,K,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'theme_boundary/2__2__1'(I, A, B, D, E, C)
            ;   true
            )
        ;   'theme_boundary/2__2__1'(I, A, B, D, E, C)
        ).
'theme_boundary/2__2'(A, B, C) :-
        'theme_boundary/2__3'(A, B, C).
'theme_boundary/2__3'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, D), !,
        'theme_boundary/2__3__0'(D, A, B, C).
'theme_boundary/2__3__0'([], B, C, A) :-
        'theme_boundary/2__4'(B, C, A).
'theme_boundary/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=length_succession,
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', G) ->
            'theme_boundary/2__3__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__3__0'(H, B, C, A)
        ).
'theme_boundary/2__3__1'([], _, A, C, D, B) :-
        'theme_boundary/2__3__0'(A, C, D, B).
'theme_boundary/2__3__1'([I|J], A, B, D, E, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            M=t(59,A,I,C),
            '$novel_production'(A, M),
            '$novel_production'(I, M),
            '$novel_production'(C, M),
            F\==u,
            E>G,
            K is E-G ->
            '$extend_history'(C, M),
            '$activate_constraint_theme_boundary/2'(_, C),
            theme_length(F, K),
            (   C=suspension(_,L,_,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'theme_boundary/2__3__1'(J, A, B, D, E, C)
            ;   true
            )
        ;   'theme_boundary/2__3__1'(J, A, B, D, E, C)
        ).
'theme_boundary/2__3'(A, B, C) :-
        'theme_boundary/2__4'(A, B, C).
'theme_boundary/2__4'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, D), !,
        'theme_boundary/2__4__0'(D, A, B, C).
'theme_boundary/2__4__0'([], B, C, A) :-
        'theme_boundary/2__5'(B, C, A).
'theme_boundary/2__4__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=length_succession,
            '$via1_multi_hash_theme_boundary/2-1'(B, G) ->
            'theme_boundary/2__4__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__4__0'(H, B, C, A)
        ).
'theme_boundary/2__4__1'([], _, A, C, D, B) :-
        'theme_boundary/2__4__0'(A, C, D, B).
'theme_boundary/2__4__1'([I|J], A, B, D, E, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            F==D,
            L=t(61,A,C,I),
            '$novel_production'(A, L),
            '$novel_production'(C, L),
            '$novel_production'(I, L),
            G>E ->
            '$extend_history'(C, L),
            '$activate_constraint_theme_boundary/2'(_, C),
            next_theme_instance(D, E, G),
            (   C=suspension(_,K,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'theme_boundary/2__4__1'(J, A, B, D, E, C)
            ;   true
            )
        ;   'theme_boundary/2__4__1'(J, A, B, D, E, C)
        ).
'theme_boundary/2__4'(A, B, C) :-
        'theme_boundary/2__5'(A, B, C).
'theme_boundary/2__5'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, D), !,
        'theme_boundary/2__5__0'(D, A, B, C).
'theme_boundary/2__5__0'([], B, C, A) :-
        'theme_boundary/2__6'(B, C, A).
'theme_boundary/2__5__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=length_succession,
            '$via1_multi_hash_theme_boundary/2-1'(B, G) ->
            'theme_boundary/2__5__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__5__0'(H, B, C, A)
        ).
'theme_boundary/2__5__1'([], _, A, C, D, B) :-
        'theme_boundary/2__5__0'(A, C, D, B).
'theme_boundary/2__5__1'([I|J], A, B, D, E, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            F==D,
            L=t(61,A,I,C),
            '$novel_production'(A, L),
            '$novel_production'(I, L),
            '$novel_production'(C, L),
            E>G ->
            '$extend_history'(C, L),
            '$activate_constraint_theme_boundary/2'(_, C),
            next_theme_instance(D, G, E),
            (   C=suspension(_,K,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'theme_boundary/2__5__1'(J, A, B, D, E, C)
            ;   true
            )
        ;   'theme_boundary/2__5__1'(J, A, B, D, E, C)
        ).
'theme_boundary/2__5'(A, B, C) :-
        'theme_boundary/2__6'(A, B, C).
'theme_boundary/2__6'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, D), !,
        'theme_boundary/2__6__0'(D, A, B, C).
'theme_boundary/2__6__0'([], B, C, A) :-
        'theme_boundary/2__7'(B, C, A).
'theme_boundary/2__6__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=count_and_start,
            '$via1_multi_hash_unspecified_successor/2-1'(0, G) ->
            'theme_boundary/2__6__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__6__0'(H, B, C, A)
        ).
'theme_boundary/2__6__1'([], _, A, C, D, B) :-
        'theme_boundary/2__6__0'(A, C, D, B).
'theme_boundary/2__6__1'([H|K], A, B, D, E, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            F=0,
            nb_getval('$chr_store_global_ground_user:boundary_list/1', J) ->
            'theme_boundary/2__6__2'(J, G, H, K, A, B, D, E, C)
        ;   'theme_boundary/2__6__1'(K, A, B, D, E, C)
        ).
'theme_boundary/2__6__2'([], _, _, A, B, C, E, F, D) :-
        'theme_boundary/2__6__1'(A, B, C, E, F, D).
'theme_boundary/2__6__2'([K|L], H, A, B, C, D, F, G, E) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            I=[M|N],
            M=[O|P],
            O==F,
            P=[Q|R],
            R= [],
            U=t(64,C,A,E,K),
            '$novel_production'(C, U),
            '$novel_production'(A, U),
            '$novel_production'(E, U),
            '$novel_production'(K, U),
            F\==u,
            'chr lock'(G),
            'chr lock'(H),
            'chr lock'(F),
            'chr lock'(Q),
            'chr lock'(N),
            G is H-1,
            length([[F,Q]|N], S),
            'chr unlock'(G),
            'chr unlock'(H),
            'chr unlock'(F),
            'chr unlock'(Q),
            'chr unlock'(N) ->
            '$extend_history'(E, U),
            '$activate_constraint_theme_boundary/2'(_, E),
            theme_boundary_count(F, S),
            (   E=suspension(_,T,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'theme_boundary/2__6__2'(L, H, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'theme_boundary/2__6__2'(L, H, A, B, C, D, F, G, E)
        ).
'theme_boundary/2__6'(A, B, C) :-
        'theme_boundary/2__7'(A, B, C).
'theme_boundary/2__7'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, D), !,
        'theme_boundary/2__7__0'(D, A, B, C).
'theme_boundary/2__7__0'([], B, C, A) :-
        'theme_boundary/2__8'(B, C, A).
'theme_boundary/2__7__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_repetitions,
            '$via1_multi_hash_first_theme_repetition/3-1'(B, G) ->
            'theme_boundary/2__7__1'(G, E, H, B, C, A)
        ;   'theme_boundary/2__7__0'(H, B, C, A)
        ).
'theme_boundary/2__7__1'([], _, A, C, D, B) :-
        'theme_boundary/2__7__0'(A, C, D, B).
'theme_boundary/2__7__1'([I|L], A, B, D, E, C) :-
        (   I=suspension(_,J,_,_,F,G,H),
            J=mutable(active),
            F==D,
            '$via1_multi_hash_next_theme_instance/3-13'(k(D,E), K) ->
            'theme_boundary/2__7__2'(K, G, H, I, L, A, B, D, E, C)
        ;   'theme_boundary/2__7__1'(L, A, B, D, E, C)
        ).
'theme_boundary/2__7__2'([], _, _, _, A, B, C, E, F, D) :-
        'theme_boundary/2__7__1'(A, B, C, E, F, D).
'theme_boundary/2__7__2'([N|O], H, I, A, B, C, D, F, G, E) :-
        (   N=suspension(_,M,_,_,J,K,L),
            M=mutable(active),
            J==F,
            L==G,
            S=t(69,C,E,A,N),
            '$novel_production'(C, S),
            '$novel_production'(E, S),
            '$novel_production'(A, S),
            '$novel_production'(N, S),
            'chr lock'(K),
            'chr lock'(I),
            'chr lock'(G),
            'chr lock'(H),
            K is I-1,
            P is G+1,
            Q is H+1,
            'chr unlock'(K),
            'chr unlock'(I),
            'chr unlock'(G),
            'chr unlock'(H) ->
            '$extend_history'(E, S),
            '$activate_constraint_theme_boundary/2'(_, E),
            first_theme_repetition(F, Q, P),
            increment_first_theme_rep,
            (   E=suspension(_,R,_,_,_,_),
                R=mutable(active) ->
                'chr update_mutable'(inactive, R),
                'theme_boundary/2__7__2'(O, H, I, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'theme_boundary/2__7__2'(O, H, I, A, B, C, D, F, G, E)
        ).
'theme_boundary/2__7'(A, B, C) :-
        'theme_boundary/2__8'(A, B, C).
'theme_boundary/2__8'(_, _, A) :-
        '$activate_constraint_theme_boundary/2'(_, A).
unspecified_measure(A) :-
        '$insert_constraint_internal_unspecified_measure/1'(B, A),
        '$insert_in_store_unspecified_measure/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'unspecified_measure/1__0'(A, B).
'unspecified_measure/1__0'(A, B) :- !,
        '$activate_constraint_unspecified_measure/1'(_, B),
        debugwrite('DEBUG: '),
        debugwriteln(unspecified_successor(0,A)),
        unspecified_successor(0, A),
        (   B=suspension(_,C,_,_,_),
            C=mutable(active) ->
            'chr update_mutable'(inactive, C),
            'unspecified_measure/1__1'(A, B)
        ;   true
        ).
'unspecified_measure/1__1'(A, B) :-
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', C), !,
        'unspecified_measure/1__1__0'(C, A, B).
'unspecified_measure/1__1__0'([], B, A) :-
        'unspecified_measure/1__2'(B, A).
'unspecified_measure/1__1__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C),
            D=mutable(active),
            H=t(51,A,E),
            '$novel_production'(A, H),
            '$novel_production'(E, H),
            B<C ->
            '$extend_history'(A, H),
            '$activate_constraint_unspecified_measure/1'(_, A),
            unspecified_successor(B, C),
            (   A=suspension(_,G,_,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'unspecified_measure/1__1__0'(F, B, A)
            ;   true
            )
        ;   'unspecified_measure/1__1__0'(F, B, A)
        ).
'unspecified_measure/1__1'(A, B) :-
        'unspecified_measure/1__2'(A, B).
'unspecified_measure/1__2'(A, B) :-
        nb_getval('$chr_store_global_ground_user:unspecified_measure/1', C), !,
        'unspecified_measure/1__2__0'(C, A, B).
'unspecified_measure/1__2__0'([], B, A) :-
        'unspecified_measure/1__3'(B, A).
'unspecified_measure/1__2__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C),
            D=mutable(active),
            H=t(51,E,A),
            '$novel_production'(E, H),
            '$novel_production'(A, H),
            C<B ->
            '$extend_history'(A, H),
            '$activate_constraint_unspecified_measure/1'(_, A),
            unspecified_successor(C, B),
            (   A=suspension(_,G,_,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'unspecified_measure/1__2__0'(F, B, A)
            ;   true
            )
        ;   'unspecified_measure/1__2__0'(F, B, A)
        ).
'unspecified_measure/1__2'(A, B) :-
        'unspecified_measure/1__3'(A, B).
'unspecified_measure/1__3'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active),
        '$via1_multi_hash_first_theme_occurrence/4-4'(A, H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,_,_,G,_),
        I=mutable(active),
        G>0, !,
        '$remove_constraint_internal_unspecified_measure/1'(B, J),
        (   J=yes ->
            '$delete_from_store_unspecified_measure/1'(B)
        ;   true
        ),
        duplicated_measure(A),
        increment_duplicates.
'unspecified_measure/1__3'(A, B) :-
        nb_getval('$chr_store_global_ground_user:meter/2', C), !,
        'unspecified_measure/1__3__0'(C, A, B).
'unspecified_measure/1__3__0'([], B, A) :-
        'unspecified_measure/1__4'(B, A).
'unspecified_measure/1__3__0'([E|H], B, A) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            nb_getval('$chr_store_global_ground_user:voice/1', G) ->
            'unspecified_measure/1__3__1'(G, C, D, E, H, B, A)
        ;   'unspecified_measure/1__3__0'(H, B, A)
        ).
'unspecified_measure/1__3__1'([], _, _, _, A, C, B) :-
        'unspecified_measure/1__3__0'(A, C, B).
'unspecified_measure/1__3__1'([H|K], E, F, A, B, D, C) :-
        (   H=suspension(_,I,_,_,G),
            I=mutable(active),
            '$via1_multi_hash_measure/1-1'(D, J) ->
            'unspecified_measure/1__3__2'(J, G, H, K, E, F, A, B, D, C)
        ;   'unspecified_measure/1__3__1'(K, E, F, A, B, D, C)
        ).
'unspecified_measure/1__3__2'([], _, _, A, F, G, B, C, E, D) :-
        'unspecified_measure/1__3__1'(A, F, G, B, C, E, D).
'unspecified_measure/1__3__2'([L|M], I, A, B, G, H, C, D, F, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J==F,
            O=t(92,C,A,L,E),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(L, O),
            '$novel_production'(E, O) ->
            '$extend_history'(E, O),
            '$activate_constraint_unspecified_measure/1'(_, E),
            debugwriteln(make_beats(G,H,F,I)),
            make_beats(G, H, F, I),
            (   E=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'unspecified_measure/1__3__2'(M, I, A, B, G, H, C, D, F, E)
            ;   true
            )
        ;   'unspecified_measure/1__3__2'(M, I, A, B, G, H, C, D, F, E)
        ).
'unspecified_measure/1__3'(A, B) :-
        'unspecified_measure/1__4'(A, B).
'unspecified_measure/1__4'(A, B) :-
        '$via1_multi_hash_phase/1-1'(make_notes, C), !,
        'unspecified_measure/1__4__0'(C, A, B).
'unspecified_measure/1__4__0'([], B, A) :-
        'unspecified_measure/1__5'(B, A).
'unspecified_measure/1__4__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=make_notes,
            '$via1_multi_hash_beat/5-1'(drums, F) ->
            'unspecified_measure/1__4__1'(F, D, G, B, A)
        ;   'unspecified_measure/1__4__0'(G, B, A)
        ).
'unspecified_measure/1__4__1'([], _, A, C, B) :-
        'unspecified_measure/1__4__0'(A, C, B).
'unspecified_measure/1__4__1'([J|K], A, B, D, C) :-
        (   J=suspension(_,I,_,_,E,F,G,H,_),
            I=mutable(active),
            E=drums,
            F==D,
            O=t(120,A,J,C),
            '$novel_production'(A, O),
            '$novel_production'(J, O),
            '$novel_production'(C, O) ->
            '$extend_history'(C, O),
            '$activate_constraint_unspecified_measure/1'(_, C),
            abstract_beat(D, G, H, L),
            msw(drum_choice(L), M),
            debugwriteln(msw(drum_choice(L),M)),
            note(drums, D, G, H, M),
            (   C=suspension(_,N,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'unspecified_measure/1__4__1'(K, A, B, D, C)
            ;   true
            )
        ;   'unspecified_measure/1__4__1'(K, A, B, D, C)
        ).
'unspecified_measure/1__4'(A, B) :-
        'unspecified_measure/1__5'(A, B).
'unspecified_measure/1__5'(A, B) :-
        '$via1_multi_hash_phase/1-1'(make_notes, C), !,
        'unspecified_measure/1__5__0'(C, A, B).
'unspecified_measure/1__5__0'([], B, A) :-
        'unspecified_measure/1__6'(B, A).
'unspecified_measure/1__5__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=make_notes,
            nb_getval('$chr_store_global_ground_user:chord_style/1', F) ->
            'unspecified_measure/1__5__1'(F, D, G, B, A)
        ;   'unspecified_measure/1__5__0'(G, B, A)
        ).
'unspecified_measure/1__5__1'([], _, A, C, B) :-
        'unspecified_measure/1__5__0'(A, C, B).
'unspecified_measure/1__5__1'([F|I], A, B, D, C) :-
        (   F=suspension(_,G,_,_,E),
            G=mutable(active),
            '$via1_multi_hash_beat/5-1'(chords, H) ->
            'unspecified_measure/1__5__2'(H, E, F, I, A, B, D, C)
        ;   'unspecified_measure/1__5__1'(I, A, B, D, C)
        ).
'unspecified_measure/1__5__2'([], _, _, A, B, C, E, D) :-
        'unspecified_measure/1__5__1'(A, B, C, E, D).
'unspecified_measure/1__5__2'([L|O], G, A, B, C, D, F, E) :-
        (   L=suspension(_,M,_,_,H,I,J,K,_),
            M=mutable(active),
            H=chords,
            I==F,
            '$via1_multi_hash_mchord/2-1'(F, N) ->
            'unspecified_measure/1__5__3'(N, J, K, L, O, G, A, B, C, D, F, E)
        ;   'unspecified_measure/1__5__2'(O, G, A, B, C, D, F, E)
        ).
'unspecified_measure/1__5__3'([], _, _, _, A, H, B, C, D, E, G, F) :-
        'unspecified_measure/1__5__2'(A, H, B, C, D, E, G, F).
'unspecified_measure/1__5__3'([O|P], J, K, A, B, I, C, D, E, F, H, G) :-
        (   O=suspension(_,N,_,_,L,M),
            N=mutable(active),
            L==H,
            T=t(121,E,C,A,O,G),
            '$novel_production'(E, T),
            '$novel_production'(C, T),
            '$novel_production'(A, T),
            '$novel_production'(O, T),
            '$novel_production'(G, T) ->
            '$extend_history'(G, T),
            '$activate_constraint_unspecified_measure/1'(_, G),
            abstract_beat(H, J, K, Q),
            msw(chord_type(I,Q), R),
            debugwrite('DEBUG: making notes: '),
            debugwriteln(mchord(H,M)),
            debugwriteln(msw(chord_type(I,Q),R)),
            chord(M, H, J, K, R),
            (   G=suspension(_,S,_,_,_),
                S=mutable(active) ->
                'chr update_mutable'(inactive, S),
                'unspecified_measure/1__5__3'(P, J, K, A, B, I, C, D, E, F, H, G)
            ;   true
            )
        ;   'unspecified_measure/1__5__3'(P, J, K, A, B, I, C, D, E, F, H, G)
        ).
'unspecified_measure/1__5'(A, B) :-
        'unspecified_measure/1__6'(A, B).
'unspecified_measure/1__6'(A, B) :-
        '$via1_multi_hash_phase/1-1'(join_notes, C), !,
        'unspecified_measure/1__6__0'(C, A, B).
'unspecified_measure/1__6__0'([], B, A) :-
        'unspecified_measure/1__7'(B, A).
'unspecified_measure/1__6__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=join_notes,
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', F) ->
            'unspecified_measure/1__6__1'(F, D, G, B, A)
        ;   'unspecified_measure/1__6__0'(G, B, A)
        ).
'unspecified_measure/1__6__1'([], _, A, C, B) :-
        'unspecified_measure/1__6__0'(A, C, B).
'unspecified_measure/1__6__1'([F|I], A, B, D, C) :-
        (   F=suspension(_,G,_,_,E),
            G=mutable(active),
            '$via1_multi_hash_note/5-2'(D, H) ->
            'unspecified_measure/1__6__2'(H, E, F, I, A, B, D, C)
        ;   'unspecified_measure/1__6__1'(I, A, B, D, C)
        ).
'unspecified_measure/1__6__2'([], _, _, A, B, C, E, D) :-
        'unspecified_measure/1__6__1'(A, B, C, E, D).
'unspecified_measure/1__6__2'([M|P], G, A, B, C, D, F, E) :-
        (   M=suspension(_,N,_,_,H,I,J,K,L),
            N=mutable(active),
            I==F,
            '$via1_multi_hash_next_beat/7-12345'(k(H,F,J,K,G), O) ->
            'unspecified_measure/1__6__3'(O, H, J, K, L, M, P, G, A, B, C, D, F, E)
        ;   'unspecified_measure/1__6__2'(P, G, A, B, C, D, F, E)
        ).
'unspecified_measure/1__6__3'([], _, _, _, _, _, A, H, B, C, D, E, G, F) :-
        'unspecified_measure/1__6__2'(A, H, B, C, D, E, G, F).
'unspecified_measure/1__6__3'([U|X], J, K, L, M, A, B, I, C, D, E, F, H, G) :-
        (   U=suspension(_,V,_,N,O,P,Q,R,S,T),
            V=mutable(active),
            N==J,
            O==H,
            P==K,
            Q==L,
            R==I,
            '$via1_multi_hash_note/5-12345'(k(J,I,S,T,M), W) ->
            'unspecified_measure/1__6__4'(W, S, T, U, X, J, K, L, M, A, B, I, C, D, E, F, H, G)
        ;   'unspecified_measure/1__6__3'(X, J, K, L, M, A, B, I, C, D, E, F, H, G)
        ).
'unspecified_measure/1__6__4'([], _, _, _, A, K, L, M, N, B, C, J, D, E, F, G, I, H) :-
        'unspecified_measure/1__6__3'(A, K, L, M, N, B, C, J, D, E, F, G, I, H).
'unspecified_measure/1__6__4'([X|Y], P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I) :-
        (   X=suspension(_,W,_,_,R,S,T,U,V),
            W=mutable(active),
            X\==C,
            R==L,
            S==K,
            T==P,
            U==Q,
            V==O,
            D1=t(136,G,I,E,C,A,X),
            '$novel_production'(G, D1),
            '$novel_production'(I, D1),
            '$novel_production'(E, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(X, D1),
            L\==drums ->
            '$extend_history'(I, D1),
            '$activate_constraint_unspecified_measure/1'(_, I),
            (   J=K ->
                Z=yes
            ;   Z=no
            ),
            (   M=P ->
                A1=yes
            ;   A1=no
            ),
            msw(join_notes(L,Z,A1), B1),
            (   B1=1 ->
                debugwriteln(join_notes(L,J,M,N,O,K,P,Q)),
                tied(L, J, M, N),
                debugwriteln(joined(O))
            ;   B1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,C1,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'unspecified_measure/1__6__4'(Y, P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I)
            ;   true
            )
        ;   'unspecified_measure/1__6__4'(Y, P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I)
        ).
'unspecified_measure/1__6'(A, B) :-
        'unspecified_measure/1__7'(A, B).
'unspecified_measure/1__7'(A, B) :-
        '$via1_multi_hash_phase/1-1'(join_notes, C), !,
        'unspecified_measure/1__7__0'(C, A, B).
'unspecified_measure/1__7__0'([], B, A) :-
        'unspecified_measure/1__8'(B, A).
'unspecified_measure/1__7__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=join_notes,
            nb_getval('$chr_store_global_ground_user:unspecified_measure/1', F) ->
            'unspecified_measure/1__7__1'(F, D, G, B, A)
        ;   'unspecified_measure/1__7__0'(G, B, A)
        ).
'unspecified_measure/1__7__1'([], _, A, C, B) :-
        'unspecified_measure/1__7__0'(A, C, B).
'unspecified_measure/1__7__1'([F|I], A, B, D, C) :-
        (   F=suspension(_,G,_,_,E),
            G=mutable(active),
            '$via1_multi_hash_note/5-2'(E, H) ->
            'unspecified_measure/1__7__2'(H, E, F, I, A, B, D, C)
        ;   'unspecified_measure/1__7__1'(I, A, B, D, C)
        ).
'unspecified_measure/1__7__2'([], _, _, A, B, C, E, D) :-
        'unspecified_measure/1__7__1'(A, B, C, E, D).
'unspecified_measure/1__7__2'([M|P], G, A, B, C, D, F, E) :-
        (   M=suspension(_,N,_,_,H,I,J,K,L),
            N=mutable(active),
            I==G,
            '$via1_multi_hash_next_beat/7-12345'(k(H,G,J,K,F), O) ->
            'unspecified_measure/1__7__3'(O, H, J, K, L, M, P, G, A, B, C, D, F, E)
        ;   'unspecified_measure/1__7__2'(P, G, A, B, C, D, F, E)
        ).
'unspecified_measure/1__7__3'([], _, _, _, _, _, A, H, B, C, D, E, G, F) :-
        'unspecified_measure/1__7__2'(A, H, B, C, D, E, G, F).
'unspecified_measure/1__7__3'([U|X], J, K, L, M, A, B, I, C, D, E, F, H, G) :-
        (   U=suspension(_,V,_,N,O,P,Q,R,S,T),
            V=mutable(active),
            N==J,
            O==I,
            P==K,
            Q==L,
            R==H,
            '$via1_multi_hash_note/5-12345'(k(J,H,S,T,M), W) ->
            'unspecified_measure/1__7__4'(W, S, T, U, X, J, K, L, M, A, B, I, C, D, E, F, H, G)
        ;   'unspecified_measure/1__7__3'(X, J, K, L, M, A, B, I, C, D, E, F, H, G)
        ).
'unspecified_measure/1__7__4'([], _, _, _, A, K, L, M, N, B, C, J, D, E, F, G, I, H) :-
        'unspecified_measure/1__7__3'(A, K, L, M, N, B, C, J, D, E, F, G, I, H).
'unspecified_measure/1__7__4'([X|Y], P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I) :-
        (   X=suspension(_,W,_,_,R,S,T,U,V),
            W=mutable(active),
            X\==C,
            R==L,
            S==J,
            T==P,
            U==Q,
            V==O,
            D1=t(136,G,E,I,C,A,X),
            '$novel_production'(G, D1),
            '$novel_production'(E, D1),
            '$novel_production'(I, D1),
            '$novel_production'(C, D1),
            '$novel_production'(A, D1),
            '$novel_production'(X, D1),
            L\==drums ->
            '$extend_history'(I, D1),
            '$activate_constraint_unspecified_measure/1'(_, I),
            (   K=J ->
                Z=yes
            ;   Z=no
            ),
            (   M=P ->
                A1=yes
            ;   A1=no
            ),
            msw(join_notes(L,Z,A1), B1),
            (   B1=1 ->
                debugwriteln(join_notes(L,K,M,N,O,J,P,Q)),
                tied(L, K, M, N),
                debugwriteln(joined(O))
            ;   B1=2 ->
                true
            ;   fail
            ),
            (   I=suspension(_,C1,_,_,_),
                C1=mutable(active) ->
                'chr update_mutable'(inactive, C1),
                'unspecified_measure/1__7__4'(Y, P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I)
            ;   true
            )
        ;   'unspecified_measure/1__7__4'(Y, P, Q, A, B, L, M, N, O, C, D, K, E, F, G, H, J, I)
        ).
'unspecified_measure/1__7'(A, B) :-
        'unspecified_measure/1__8'(A, B).
'unspecified_measure/1__8'(A, B) :-
        '$via1_multi_hash_phase/1-1'(join_notes, C), !,
        'unspecified_measure/1__8__0'(C, A, B).
'unspecified_measure/1__8__0'([], B, A) :-
        'unspecified_measure/1__9'(B, A).
'unspecified_measure/1__8__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=join_notes,
            '$via1_multi_hash_note/5-2'(B, F) ->
            'unspecified_measure/1__8__1'(F, D, G, B, A)
        ;   'unspecified_measure/1__8__0'(G, B, A)
        ).
'unspecified_measure/1__8__1'([], _, A, C, B) :-
        'unspecified_measure/1__8__0'(A, C, B).
'unspecified_measure/1__8__1'([J|M], A, B, D, C) :-
        (   J=suspension(_,K,_,_,E,F,G,H,I),
            K=mutable(active),
            F==D,
            '$via1_multi_hash_next_beat/7-12345'(k(E,D,G,H,D), L) ->
            'unspecified_measure/1__8__2'(L, E, G, H, I, J, M, A, B, D, C)
        ;   'unspecified_measure/1__8__1'(M, A, B, D, C)
        ).
'unspecified_measure/1__8__2'([], _, _, _, _, _, A, B, C, E, D) :-
        'unspecified_measure/1__8__1'(A, B, C, E, D).
'unspecified_measure/1__8__2'([R|U], G, H, I, J, A, B, C, D, F, E) :-
        (   R=suspension(_,S,_,K,L,M,N,O,P,Q),
            S=mutable(active),
            K==G,
            L==F,
            M==H,
            N==I,
            O=F,
            '$via1_multi_hash_note/5-12345'(k(G,F,P,Q,J), T) ->
            'unspecified_measure/1__8__3'(T, P, Q, R, U, G, H, I, J, A, B, C, D, F, E)
        ;   'unspecified_measure/1__8__2'(U, G, H, I, J, A, B, C, D, F, E)
        ).
'unspecified_measure/1__8__3'([], _, _, _, A, H, I, J, K, B, C, D, E, G, F) :-
        'unspecified_measure/1__8__2'(A, H, I, J, K, B, C, D, E, G, F).
'unspecified_measure/1__8__3'([U|V], M, N, A, B, I, J, K, L, C, D, E, F, H, G) :-
        (   U=suspension(_,T,_,_,O,P,Q,R,S),
            T=mutable(active),
            U\==C,
            O==I,
            P==H,
            Q==M,
            R==N,
            S==L,
            A1=t(137,E,G,C,A,U),
            '$novel_production'(E, A1),
            '$novel_production'(G, A1),
            '$novel_production'(C, A1),
            '$novel_production'(A, A1),
            '$novel_production'(U, A1),
            I\==drums ->
            '$extend_history'(G, A1),
            '$activate_constraint_unspecified_measure/1'(_, G),
            (   H=_ ->
                W=yes
            ;   W=no
            ),
            (   J=M ->
                X=yes
            ;   X=no
            ),
            msw(join_notes(I,W,X), Y),
            (   Y=1 ->
                debugwriteln(join_notes(I,H,J,K,L,H,M,N)),
                tied(I, H, J, K),
                debugwriteln(joined(L))
            ;   Y=2 ->
                true
            ;   fail
            ),
            (   G=suspension(_,Z,_,_,_),
                Z=mutable(active) ->
                'chr update_mutable'(inactive, Z),
                'unspecified_measure/1__8__3'(V, M, N, A, B, I, J, K, L, C, D, E, F, H, G)
            ;   true
            )
        ;   'unspecified_measure/1__8__3'(V, M, N, A, B, I, J, K, L, C, D, E, F, H, G)
        ).
'unspecified_measure/1__8'(A, B) :-
        'unspecified_measure/1__9'(A, B).
'unspecified_measure/1__9'(_, A) :-
        '$activate_constraint_unspecified_measure/1'(_, A).
unspecified_successor(A, B) :-
        '$insert_constraint_internal_unspecified_successor/2'(C, A, B),
        '$insert_in_store_unspecified_successor/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'unspecified_successor/2__0'(A, B, C).
'unspecified_successor/2__0'(A, B, C) :-
        '$via1_multi_hash_unspecified_successor/2-1'(A, F),
        'chr sbag_member'(D, F),
        D=suspension(_,G,_,_,_,E),
        G=mutable(active),
        E<B, !,
        '$remove_constraint_internal_unspecified_successor/2'(C, H),
        (   H=yes ->
            '$delete_from_store_unspecified_successor/2'(C)
        ;   true
        ),
        debugwrite('DEBUG: removing constraint: '),
        debugwriteln(unspecified_successor(A,B)).
'unspecified_successor/2__0'(A, B, C) :-
        '$via1_multi_hash_unspecified_successor/2-1'(A, D), !,
        'unspecified_successor/2__0__0'(D, A, B, C).
'unspecified_successor/2__0__0'([], B, C, A) :-
        'unspecified_successor/2__1'(B, C, A).
'unspecified_successor/2__0__0'([F|H], A, B, C) :-
        (   F=suspension(_,G,_,_,D,E),
            G=mutable(active),
            D==A,
            B<E ->
            '$remove_constraint_internal_unspecified_successor/2'(F, I),
            (   I=yes ->
                '$delete_from_store_unspecified_successor/2'(F)
            ;   true
            ),
            '$activate_constraint_unspecified_successor/2'(_, C),
            debugwrite('DEBUG: removing constraint: '),
            debugwriteln(unspecified_successor(A,E)),
            (   C=suspension(_,J,_,_,_,_),
                J=mutable(active) ->
                'chr update_mutable'(inactive, J),
                'unspecified_successor/2__0__0'(H, A, B, C)
            ;   true
            )
        ;   'unspecified_successor/2__0__0'(H, A, B, C)
        ).
'unspecified_successor/2__0'(A, B, C) :-
        'unspecified_successor/2__1'(A, B, C).
'unspecified_successor/2__1'(A, B, C) :-
        '$via1_multi_hash_max_unspecified/1-1'(A, D), !,
        'unspecified_successor/2__1__0'(D, A, B, C).
'unspecified_successor/2__1__0'([], B, C, A) :-
        'unspecified_successor/2__2'(B, C, A).
'unspecified_successor/2__1__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D==A ->
            '$remove_constraint_internal_max_unspecified/1'(E, H),
            (   H=yes ->
                '$delete_from_store_max_unspecified/1'(E)
            ;   true
            ),
            '$activate_constraint_unspecified_successor/2'(_, C),
            debugwrite('DEBUG: removing constraint:'),
            debugwriteln(max_unspecified(A)),
            debugwrite('DEBUG: '),
            debugwriteln(max_unspecified(B)),
            max_unspecified(B),
            (   C=suspension(_,I,_,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'unspecified_successor/2__1__0'(G, A, B, C)
            ;   true
            )
        ;   'unspecified_successor/2__1__0'(G, A, B, C)
        ).
'unspecified_successor/2__1'(A, B, C) :-
        'unspecified_successor/2__2'(A, B, C).
'unspecified_successor/2__2'(0, A, B) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, C), !,
        'unspecified_successor/2__2__0'(C, 0, A, B).
'unspecified_successor/2__2__0'([], B, C, A) :-
        'unspecified_successor/2__3'(B, C, A).
'unspecified_successor/2__2__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=count_and_start,
            nb_getval('$chr_store_global_ground_user:theme_boundary/2', G) ->
            'unspecified_successor/2__2__1'(G, E, H, B, C, A)
        ;   'unspecified_successor/2__2__0'(H, B, C, A)
        ).
'unspecified_successor/2__2__1'([], _, A, C, D, B) :-
        'unspecified_successor/2__2__0'(A, C, D, B).
'unspecified_successor/2__2__1'([H|K], A, B, D, E, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            nb_getval('$chr_store_global_ground_user:boundary_list/1', J) ->
            'unspecified_successor/2__2__2'(J, F, G, H, K, A, B, D, E, C)
        ;   'unspecified_successor/2__2__1'(K, A, B, D, E, C)
        ).
'unspecified_successor/2__2__2'([], _, _, _, A, B, C, E, F, D) :-
        'unspecified_successor/2__2__1'(A, B, C, E, F, D).
'unspecified_successor/2__2__2'([L|M], H, I, A, B, C, D, F, G, E) :-
        (   L=suspension(_,K,_,_,J),
            K=mutable(active),
            J=[N|O],
            N=[P|Q],
            P==H,
            Q=[R|S],
            S= [],
            V=t(64,C,E,A,L),
            '$novel_production'(C, V),
            '$novel_production'(E, V),
            '$novel_production'(A, V),
            '$novel_production'(L, V),
            H\==u,
            'chr lock'(I),
            'chr lock'(G),
            'chr lock'(H),
            'chr lock'(R),
            'chr lock'(O),
            I is G-1,
            length([[H,R]|O], T),
            'chr unlock'(I),
            'chr unlock'(G),
            'chr unlock'(H),
            'chr unlock'(R),
            'chr unlock'(O) ->
            '$extend_history'(E, V),
            '$activate_constraint_unspecified_successor/2'(_, E),
            theme_boundary_count(H, T),
            (   E=suspension(_,U,_,_,_,_),
                U=mutable(active) ->
                'chr update_mutable'(inactive, U),
                'unspecified_successor/2__2__2'(M, H, I, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'unspecified_successor/2__2__2'(M, H, I, A, B, C, D, F, G, E)
        ).
'unspecified_successor/2__2'(A, B, C) :-
        'unspecified_successor/2__3'(A, B, C).
'unspecified_successor/2__3'(0, A, B) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, C), !,
        'unspecified_successor/2__3__0'(C, 0, A, B).
'unspecified_successor/2__3__0'([], B, C, A) :-
        'unspecified_successor/2__4'(B, C, A).
'unspecified_successor/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=count_and_start,
            nb_getval('$chr_store_global_ground_user:theme_boundary_count/2', G) ->
            'unspecified_successor/2__3__1'(G, E, H, B, C, A)
        ;   'unspecified_successor/2__3__0'(H, B, C, A)
        ).
'unspecified_successor/2__3__1'([], _, A, C, D, B) :-
        'unspecified_successor/2__3__0'(A, C, D, B).
'unspecified_successor/2__3__1'([H|I], A, B, D, E, C) :-
        (   H=suspension(_,G,_,_,F,_),
            G=mutable(active),
            K=t(65,A,H,C),
            '$novel_production'(A, K),
            '$novel_production'(H, K),
            '$novel_production'(C, K) ->
            '$extend_history'(C, K),
            '$activate_constraint_unspecified_successor/2'(_, C),
            first_theme_start(F, E),
            (   C=suspension(_,J,_,_,_,_),
                J=mutable(active) ->
                'chr update_mutable'(inactive, J),
                'unspecified_successor/2__3__1'(I, A, B, D, E, C)
            ;   true
            )
        ;   'unspecified_successor/2__3__1'(I, A, B, D, E, C)
        ).
'unspecified_successor/2__3'(A, B, C) :-
        'unspecified_successor/2__4'(A, B, C).
'unspecified_successor/2__4'(A, B, C) :-
        '$via1_multi_hash_unspecified_successor/2-1'(B, F),
        'chr sbag_member'(D, F),
        D=suspension(_,G,_,_,_,E),
        G=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_,_),
        J=mutable(active),
        '$via1_multi_hash_duplicated_measure/1-1'(B, L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_unspecified_successor/2'(D, N),
        (   N=yes ->
            '$delete_from_store_unspecified_successor/2'(D)
        ;   true
        ),
        '$remove_constraint_internal_unspecified_successor/2'(C, O),
        (   O=yes ->
            '$delete_from_store_unspecified_successor/2'(C)
        ;   true
        ),
        unspec_successor(A, E),
        removed_unspec_successor.
'unspecified_successor/2__4'(A, B, C) :-
        '$via1_multi_hash_unspecified_successor/2-2'(A, F),
        'chr sbag_member'(D, F),
        D=suspension(_,G,_,_,E,_),
        G=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_,_),
        J=mutable(active),
        '$via1_multi_hash_duplicated_measure/1-1'(A, L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_unspecified_successor/2'(D, N),
        (   N=yes ->
            '$delete_from_store_unspecified_successor/2'(D)
        ;   true
        ),
        '$remove_constraint_internal_unspecified_successor/2'(C, O),
        (   O=yes ->
            '$delete_from_store_unspecified_successor/2'(C)
        ;   true
        ),
        unspec_successor(E, B),
        removed_unspec_successor.
'unspecified_successor/2__4'(A, B, C) :-
        '$via1_multi_hash_max_unspecified/1-1'(B, E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_),
        F=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active),
        '$via1_multi_hash_duplicated_measure/1-1'(B, K),
        'chr sbag_member'(J, K),
        J=suspension(_,L,_,_),
        L=mutable(active), !,
        '$remove_constraint_internal_max_unspecified/1'(D, M),
        (   M=yes ->
            '$delete_from_store_max_unspecified/1'(D)
        ;   true
        ),
        '$remove_constraint_internal_unspecified_successor/2'(C, N),
        (   N=yes ->
            '$delete_from_store_unspecified_successor/2'(C)
        ;   true
        ),
        removed_unspecified_successor,
        max_unspecified(A).
'unspecified_successor/2__4'(0, A, B) :-
        '$via1_multi_hash_make_measures/1-1'(0, C), !,
        'unspecified_successor/2__4__0'(C, 0, A, B).
'unspecified_successor/2__4__0'([], B, C, A) :-
        'unspecified_successor/2__5'(B, C, A).
'unspecified_successor/2__4__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,D),
            F=mutable(active),
            D=0 ->
            '$remove_constraint_internal_make_measures/1'(E, H),
            (   H=yes ->
                '$delete_from_store_make_measures/1'(E)
            ;   true
            ),
            '$activate_constraint_unspecified_successor/2'(_, C),
            phase(split_beats(B)),
            (   C=suspension(_,I,_,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'unspecified_successor/2__4__0'(G, A, B, C)
            ;   true
            )
        ;   'unspecified_successor/2__4__0'(G, A, B, C)
        ).
'unspecified_successor/2__4'(A, B, C) :-
        'unspecified_successor/2__5'(A, B, C).
'unspecified_successor/2__5'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:phase/1', D), !,
        'unspecified_successor/2__5__0'(D, A, B, C).
'unspecified_successor/2__5__0'([], B, C, A) :-
        'unspecified_successor/2__6'(B, C, A).
'unspecified_successor/2__5__0'([E|H], A, B, C) :-
        (   E=suspension(_,G,_,_,D),
            G=mutable(active),
            D=split_beats(F),
            F==A ->
            '$remove_constraint_internal_phase/1'(E, I),
            (   I=yes ->
                '$delete_from_store_phase/1'(E)
            ;   true
            ),
            '$activate_constraint_unspecified_successor/2'(_, C),
            phase(split_beats(B)),
            (   C=suspension(_,J,_,_,_,_),
                J=mutable(active) ->
                'chr update_mutable'(inactive, J),
                'unspecified_successor/2__5__0'(H, A, B, C)
            ;   true
            )
        ;   'unspecified_successor/2__5__0'(H, A, B, C)
        ).
'unspecified_successor/2__5'(A, B, C) :-
        'unspecified_successor/2__6'(A, B, C).
'unspecified_successor/2__6'(0, A, B) :-
        '$via1_multi_hash_phase/1-1'(make_notes, C), !,
        'unspecified_successor/2__6__0'(C, 0, A, B).
'unspecified_successor/2__6__0'([], B, C, A) :-
        'unspecified_successor/2__7'(B, C, A).
'unspecified_successor/2__6__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D=make_notes,
            I=t(113,F,A),
            '$novel_production'(F, I),
            '$novel_production'(A, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_unspecified_successor/2'(_, A),
            make_notes_measure(C),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'unspecified_successor/2__6__0'(G, B, C, A)
            ;   true
            )
        ;   'unspecified_successor/2__6__0'(G, B, C, A)
        ).
'unspecified_successor/2__6'(A, B, C) :-
        'unspecified_successor/2__7'(A, B, C).
'unspecified_successor/2__7'(A, B, C) :-
        '$via1_multi_hash_make_notes_measure/1-1'(A, D), !,
        'unspecified_successor/2__7__0'(D, A, B, C).
'unspecified_successor/2__7__0'([], B, C, A) :-
        'unspecified_successor/2__8'(B, C, A).
'unspecified_successor/2__7__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D==A,
            nb_getval('$chr_store_global_ground_user:measures/1', I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_,_),
            J=mutable(active) ->
            '$remove_constraint_internal_make_notes_measure/1'(E, K),
            (   K=yes ->
                '$delete_from_store_make_notes_measure/1'(E)
            ;   true
            ),
            '$activate_constraint_unspecified_successor/2'(_, C),
            debugwrite('DEBUG: '),
            debugwriteln(make_notes_measure(B)),
            make_notes_measure(B),
            (   C=suspension(_,L,_,_,_,_),
                L=mutable(active) ->
                'chr update_mutable'(inactive, L),
                'unspecified_successor/2__7__0'(G, A, B, C)
            ;   true
            )
        ;   'unspecified_successor/2__7__0'(G, A, B, C)
        ).
'unspecified_successor/2__7'(A, B, C) :-
        'unspecified_successor/2__8'(A, B, C).
'unspecified_successor/2__8'(_, _, A) :-
        '$activate_constraint_unspecified_successor/2'(_, A).
max_unspecified(A) :-
        '$insert_constraint_internal_max_unspecified/1'(B, A),
        '$insert_in_store_max_unspecified/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'max_unspecified/1__0'(A, B).
'max_unspecified/1__0'(A, B) :-
        '$via1_multi_hash_unspecified_successor/2-1'(A, E),
        'chr sbag_member'(C, E),
        C=suspension(_,F,_,_,_,D),
        F=mutable(active), !,
        '$remove_constraint_internal_max_unspecified/1'(B, G),
        (   G=yes ->
            '$delete_from_store_max_unspecified/1'(B)
        ;   true
        ),
        debugwrite('DEBUG: removing constraint:'),
        debugwriteln(max_unspecified(A)),
        debugwrite('DEBUG: '),
        debugwriteln(max_unspecified(D)),
        max_unspecified(D).
'max_unspecified/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(length_succession, C), !,
        'max_unspecified/1__0__0'(C, A, B).
'max_unspecified/1__0__0'([], B, A) :-
        'max_unspecified/1__1'(B, A).
'max_unspecified/1__0__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=length_succession ->
            '$remove_constraint_internal_phase/1'(D, G),
            (   G=yes ->
                '$delete_from_store_phase/1'(D)
            ;   true
            ),
            '$activate_constraint_max_unspecified/1'(_, B),
            phase(count_and_start),
            (   B=suspension(_,H,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'max_unspecified/1__0__0'(F, A, B)
            ;   true
            )
        ;   'max_unspecified/1__0__0'(F, A, B)
        ).
'max_unspecified/1__0'(A, B) :-
        'max_unspecified/1__1'(A, B).
'max_unspecified/1__1'(A, B) :-
        '$via1_multi_hash_unspecified_successor/2-2'(A, E),
        'chr sbag_member'(C, E),
        C=suspension(_,F,_,_,D,_),
        F=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active),
        '$via1_multi_hash_duplicated_measure/1-1'(A, K),
        'chr sbag_member'(J, K),
        J=suspension(_,L,_,_),
        L=mutable(active), !,
        '$remove_constraint_internal_unspecified_successor/2'(C, M),
        (   M=yes ->
            '$delete_from_store_unspecified_successor/2'(C)
        ;   true
        ),
        '$remove_constraint_internal_max_unspecified/1'(B, N),
        (   N=yes ->
            '$delete_from_store_max_unspecified/1'(B)
        ;   true
        ),
        removed_unspecified_successor,
        max_unspecified(D).
'max_unspecified/1__1'(A, B) :-
        nb_getval('$chr_store_global_ground_user:phase/1', C), !,
        'max_unspecified/1__1__0'(C, A, B).
'max_unspecified/1__1__0'([], B, A) :-
        'max_unspecified/1__2'(B, A).
'max_unspecified/1__1__0'([D|G], A, B) :-
        (   D=suspension(_,F,_,_,C),
            F=mutable(active),
            C=split_beats(E),
            E==A ->
            '$remove_constraint_internal_phase/1'(D, H),
            (   H=yes ->
                '$delete_from_store_phase/1'(D)
            ;   true
            ),
            '$activate_constraint_max_unspecified/1'(_, B),
            phase(make_notes),
            (   B=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'max_unspecified/1__1__0'(G, A, B)
            ;   true
            )
        ;   'max_unspecified/1__1__0'(G, A, B)
        ).
'max_unspecified/1__1'(A, B) :-
        'max_unspecified/1__2'(A, B).
'max_unspecified/1__2'(A, B) :-
        '$via1_multi_hash_make_notes_measure/1-1'(A, C), !,
        'max_unspecified/1__2__0'(C, A, B).
'max_unspecified/1__2__0'([], B, A) :-
        'max_unspecified/1__3'(B, A).
'max_unspecified/1__2__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C==A ->
            '$remove_constraint_internal_make_notes_measure/1'(D, G),
            (   G=yes ->
                '$delete_from_store_make_notes_measure/1'(D)
            ;   true
            ),
            'max_unspecified/1__2__0'(F, A, B)
        ;   'max_unspecified/1__2__0'(F, A, B)
        ).
'max_unspecified/1__2'(A, B) :-
        'max_unspecified/1__3'(A, B).
'max_unspecified/1__3'(_, A) :-
        '$activate_constraint_max_unspecified/1'(_, A).
boundary_list(A) :-
        '$insert_constraint_internal_boundary_list/1'(B, A),
        '$insert_in_store_boundary_list/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'boundary_list/1__0'(A, B).
'boundary_list/1__0'([[C|D]|B], A) :-
        nb_getval('$chr_store_global_ground_user:boundary_list/1', F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_,[[I|J]|H]),
        G=mutable(active),
        I==C,
        length([[I|J]|H], K),
        length([[C|D]|B], L),
        K>L, !,
        '$remove_constraint_internal_boundary_list/1'(A, M),
        (   M=yes ->
            '$delete_from_store_boundary_list/1'(A)
        ;   true
        ).
'boundary_list/1__0'(A, B) :-
        A=[C|D],
        C=[E|F],
        nb_getval('$chr_store_global_ground_user:boundary_list/1', G), !,
        'boundary_list/1__0__0'(G, A, B, E, F, D).
'boundary_list/1__0__0'([], B, A, _, _, _) :-
        'boundary_list/1__1'(B, A).
'boundary_list/1__0__0'([G|M], A, B, D, E, C) :-
        (   G=suspension(_,L,_,_,F),
            L=mutable(active),
            F=[H|I],
            H=[J|K],
            D==J,
            length([[D|E]|C], O),
            length([[J|K]|I], P),
            O>P ->
            '$remove_constraint_internal_boundary_list/1'(G, N),
            (   N=yes ->
                '$delete_from_store_boundary_list/1'(G)
            ;   true
            ),
            'boundary_list/1__0__0'(M, A, B, D, E, C)
        ;   'boundary_list/1__0__0'(M, A, B, D, E, C)
        ).
'boundary_list/1__0'(A, B) :-
        'boundary_list/1__1'(A, B).
'boundary_list/1__1'(A, B) :-
        '$via1_multi_hash_boundary_list/1-1'(A, D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active), !,
        '$remove_constraint_internal_boundary_list/1'(B, F),
        (   F=yes ->
            '$delete_from_store_boundary_list/1'(B)
        ;   true
        ).
'boundary_list/1__1'(A, B) :-
        A=[C|D],
        C=[E|F],
        F=[G|H],
        H= [],
        '$via1_multi_hash_phase/1-1'(count_and_start, I), !,
        'boundary_list/1__1__0'(I, A, B, E, G, D).
'boundary_list/1__1__0'([], B, A, _, _, _) :-
        'boundary_list/1__2'(B, A).
'boundary_list/1__1__0'([G|J], B, A, D, E, C) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            F=count_and_start,
            '$via1_multi_hash_unspecified_successor/2-1'(0, I) ->
            'boundary_list/1__1__1'(I, G, J, B, A, D, E, C)
        ;   'boundary_list/1__1__0'(J, B, A, D, E, C)
        ).
'boundary_list/1__1__1'([], _, A, C, B, E, F, D) :-
        'boundary_list/1__1__0'(A, C, B, E, F, D).
'boundary_list/1__1__1'([J|M], A, B, D, C, F, G, E) :-
        (   J=suspension(_,K,_,_,H,I),
            K=mutable(active),
            H=0,
            '$via1_multi_hash_theme_boundary/2-1'(F, L) ->
            'boundary_list/1__1__2'(L, I, J, M, A, B, D, C, F, G, E)
        ;   'boundary_list/1__1__1'(M, A, B, D, C, F, G, E)
        ).
'boundary_list/1__1__2'([], _, _, A, B, C, E, D, G, H, F) :-
        'boundary_list/1__1__1'(A, B, C, E, D, G, H, F).
'boundary_list/1__1__2'([N|O], J, A, B, C, D, F, E, H, I, G) :-
        (   N=suspension(_,M,_,_,K,L),
            M=mutable(active),
            K==H,
            R=t(64,C,A,N,E),
            '$novel_production'(C, R),
            '$novel_production'(A, R),
            '$novel_production'(N, R),
            '$novel_production'(E, R),
            H\==u,
            'chr lock'(L),
            'chr lock'(J),
            'chr lock'(H),
            'chr lock'(I),
            'chr lock'(G),
            L is J-1,
            length([[H,I]|G], P),
            'chr unlock'(L),
            'chr unlock'(J),
            'chr unlock'(H),
            'chr unlock'(I),
            'chr unlock'(G) ->
            '$extend_history'(E, R),
            '$activate_constraint_boundary_list/1'(_, E),
            theme_boundary_count(H, P),
            (   E=suspension(_,Q,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'boundary_list/1__1__2'(O, J, A, B, C, D, F, E, H, I, G)
            ;   true
            )
        ;   'boundary_list/1__1__2'(O, J, A, B, C, D, F, E, H, I, G)
        ).
'boundary_list/1__1'(A, B) :-
        'boundary_list/1__2'(A, B).
'boundary_list/1__2'(_, A) :-
        '$activate_constraint_boundary_list/1'(_, A).
theme_length(A, B) :-
        '$insert_constraint_internal_theme_length/2'(C, A, B),
        '$insert_in_store_theme_length/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'theme_length/2__0'(A, B, C).
'theme_length/2__0'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(length_succession, E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_),
        F=mutable(active),
        '$via1_multi_hash_theme_length/2-1'(A, I),
        'chr sbag_member'(G, I),
        G=suspension(_,J,_,_,_,H),
        J=mutable(active),
        H=<B, !,
        '$remove_constraint_internal_theme_length/2'(C, K),
        (   K=yes ->
            '$delete_from_store_theme_length/2'(C)
        ;   true
        ).
'theme_length/2__0'(A, B, C) :-
        '$via1_multi_hash_theme_length/2-1'(A, D), !,
        'theme_length/2__0__0'(D, A, B, C).
'theme_length/2__0__0'([], B, C, A) :-
        'theme_length/2__1'(B, C, A).
'theme_length/2__0__0'([F|H], A, B, C) :-
        (   F=suspension(_,G,_,_,D,E),
            G=mutable(active),
            D==A,
            B=<E,
            '$via1_multi_hash_phase/1-1'(length_succession, J),
            'chr sbag_member'(I, J),
            I=suspension(_,K,_,_,_),
            K=mutable(active) ->
            '$remove_constraint_internal_theme_length/2'(F, L),
            (   L=yes ->
                '$delete_from_store_theme_length/2'(F)
            ;   true
            ),
            'theme_length/2__0__0'(H, A, B, C)
        ;   'theme_length/2__0__0'(H, A, B, C)
        ).
'theme_length/2__0'(A, B, C) :-
        'theme_length/2__1'(A, B, C).
'theme_length/2__1'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'theme_length/2__1__0'(D, A, B, C).
'theme_length/2__1__0'([], B, C, A) :-
        'theme_length/2__2'(B, C, A).
'theme_length/2__1__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            '$via1_multi_hash_first_theme_occurrence/4-2'(B, G) ->
            'theme_length/2__1__1'(G, E, H, B, C, A)
        ;   'theme_length/2__1__0'(H, B, C, A)
        ).
'theme_length/2__1__1'([], _, A, C, D, B) :-
        'theme_length/2__1__0'(A, C, D, B).
'theme_length/2__1__1'([K|L], A, B, D, E, C) :-
        (   K=suspension(_,J,_,_,F,G,H,I),
            J=mutable(active),
            G==D,
            P=t(74,A,K,C),
            '$novel_production'(A, P),
            '$novel_production'(K, P),
            '$novel_production'(C, P),
            F<E,
            M is F+1,
            N is I+1 ->
            '$extend_history'(C, P),
            '$activate_constraint_theme_length/2'(_, C),
            first_theme_occurrence(M, D, H, N),
            increment_occurrences,
            (   C=suspension(_,O,_,_,_,_),
                O=mutable(active) ->
                'chr update_mutable'(inactive, O),
                'theme_length/2__1__1'(L, A, B, D, E, C)
            ;   true
            )
        ;   'theme_length/2__1__1'(L, A, B, D, E, C)
        ).
'theme_length/2__1'(A, B, C) :-
        'theme_length/2__2'(A, B, C).
'theme_length/2__2'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', D), !,
        'theme_length/2__2__0'(D, A, B, C).
'theme_length/2__2__0'([], B, C, A) :-
        'theme_length/2__3'(B, C, A).
'theme_length/2__2__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_,_),
            J=mutable(active),
            '$via1_multi_hash_first_theme_start/2-1'(A, L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_,_,_),
            M=mutable(active),
            '$via1_multi_hash_theme_boundary_count/2-1'(A, P),
            'chr sbag_member'(N, P),
            N=suspension(_,Q,_,_,_,O),
            Q=mutable(active),
            D is B*O ->
            '$remove_constraint_internal_occurrence_count/1'(E, R),
            (   R=yes ->
                '$delete_from_store_occurrence_count/1'(E)
            ;   true
            ),
            '$activate_constraint_theme_length/2'(_, C),
            all_occurrences,
            (   C=suspension(_,S,_,_,_,_),
                S=mutable(active) ->
                'chr update_mutable'(inactive, S),
                'theme_length/2__2__0'(G, A, B, C)
            ;   true
            )
        ;   'theme_length/2__2__0'(G, A, B, C)
        ).
'theme_length/2__2'(A, B, C) :-
        'theme_length/2__3'(A, B, C).
'theme_length/2__3'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'theme_length/2__3__0'(D, A, B, C).
'theme_length/2__3__0'([], B, C, A) :-
        'theme_length/2__4'(B, C, A).
'theme_length/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            '$via1_multi_hash_first_theme_occurrence/4-12'(k(C,B), G) ->
            'theme_length/2__3__1'(G, E, H, B, C, A)
        ;   'theme_length/2__3__0'(H, B, C, A)
        ).
'theme_length/2__3__1'([], _, A, C, D, B) :-
        'theme_length/2__3__0'(A, C, D, B).
'theme_length/2__3__1'([K|L], A, B, D, E, C) :-
        (   K=suspension(_,J,_,_,F,G,H,I),
            J=mutable(active),
            F==E,
            G==D,
            H=0,
            N=t(77,A,K,C),
            '$novel_production'(A, N),
            '$novel_production'(K, N),
            '$novel_production'(C, N) ->
            '$extend_history'(C, N),
            '$activate_constraint_theme_length/2'(_, C),
            first_theme_end(D, I),
            (   C=suspension(_,M,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'theme_length/2__3__1'(L, A, B, D, E, C)
            ;   true
            )
        ;   'theme_length/2__3__1'(L, A, B, D, E, C)
        ).
'theme_length/2__3'(A, B, C) :-
        'theme_length/2__4'(A, B, C).
'theme_length/2__4'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'theme_length/2__4__0'(D, A, B, C).
'theme_length/2__4__0'([], B, C, A) :-
        'theme_length/2__5'(B, C, A).
'theme_length/2__4__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            '$via1_multi_hash_first_theme_start/2-1'(B, G) ->
            'theme_length/2__4__1'(G, E, H, B, C, A)
        ;   'theme_length/2__4__0'(H, B, C, A)
        ).
'theme_length/2__4__1'([], _, A, C, D, B) :-
        'theme_length/2__4__0'(A, C, D, B).
'theme_length/2__4__1'([G|J], A, B, D, E, C) :-
        (   G=suspension(_,H,_,_,F,_),
            H=mutable(active),
            F==D,
            '$via1_multi_hash_theme_boundary_count/2-1'(D, I) ->
            'theme_length/2__4__2'(I, G, J, A, B, D, E, C)
        ;   'theme_length/2__4__1'(J, A, B, D, E, C)
        ).
'theme_length/2__4__2'([], _, A, B, C, E, F, D) :-
        'theme_length/2__4__1'(A, B, C, E, F, D).
'theme_length/2__4__2'([K|L], A, B, C, D, F, G, E) :-
        (   K=suspension(_,J,_,_,H,I),
            J=mutable(active),
            H==F,
            O=t(78,C,A,E,K),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(E, O),
            '$novel_production'(K, O),
            M is G*(I-1) ->
            '$extend_history'(E, O),
            '$activate_constraint_theme_length/2'(_, E),
            number_duplicates(M),
            (   E=suspension(_,N,_,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'theme_length/2__4__2'(L, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'theme_length/2__4__2'(L, A, B, C, D, F, G, E)
        ).
'theme_length/2__4'(A, B, C) :-
        'theme_length/2__5'(A, B, C).
'theme_length/2__5'(_, _, A) :-
        '$activate_constraint_theme_length/2'(_, A).
next_theme_instance(A, B, C) :-
        '$insert_constraint_internal_next_theme_instance/3'(D, A, B, C),
        '$insert_in_store_next_theme_instance/3'(D),
        arg(2, D, E),
        'chr update_mutable'(inactive, E),
        'next_theme_instance/3__0'(A, B, C, D).
'next_theme_instance/3__0'(A, B, C, D) :-
        '$via1_multi_hash_phase/1-1'(length_succession, F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_,_),
        G=mutable(active),
        '$via1_multi_hash_next_theme_instance/3-12'(k(A,B), J),
        'chr sbag_member'(H, J),
        H=suspension(_,K,_,_,_,_,I),
        K=mutable(active),
        C>I, !,
        '$remove_constraint_internal_next_theme_instance/3'(D, L),
        (   L=yes ->
            '$delete_from_store_next_theme_instance/3'(D)
        ;   true
        ).
'next_theme_instance/3__0'(A, B, C, D) :-
        '$via1_multi_hash_next_theme_instance/3-12'(k(A,B), E), !,
        'next_theme_instance/3__0__0'(E, A, B, C, D).
'next_theme_instance/3__0__0'([], B, C, D, A) :-
        'next_theme_instance/3__1'(B, C, D, A).
'next_theme_instance/3__0__0'([H|J], A, B, C, D) :-
        (   H=suspension(_,I,_,_,E,F,G),
            I=mutable(active),
            E==A,
            F==B,
            G>C,
            '$via1_multi_hash_phase/1-1'(length_succession, L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_,_),
            M=mutable(active) ->
            '$remove_constraint_internal_next_theme_instance/3'(H, N),
            (   N=yes ->
                '$delete_from_store_next_theme_instance/3'(H)
            ;   true
            ),
            'next_theme_instance/3__0__0'(J, A, B, C, D)
        ;   'next_theme_instance/3__0__0'(J, A, B, C, D)
        ).
'next_theme_instance/3__0'(A, B, C, D) :-
        'next_theme_instance/3__1'(A, B, C, D).
'next_theme_instance/3__1'(A, B, C, D) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, E), !,
        'next_theme_instance/3__1__0'(E, A, B, C, D).
'next_theme_instance/3__1__0'([], B, C, D, A) :-
        'next_theme_instance/3__2'(B, C, D, A).
'next_theme_instance/3__1__0'([F|I], B, C, D, A) :-
        (   F=suspension(_,G,_,_,E),
            G=mutable(active),
            E=first_theme_repetitions,
            '$via1_multi_hash_theme_boundary/2-12'(k(B,D), H) ->
            'next_theme_instance/3__1__1'(H, F, I, B, C, D, A)
        ;   'next_theme_instance/3__1__0'(I, B, C, D, A)
        ).
'next_theme_instance/3__1__1'([], _, A, C, D, E, B) :-
        'next_theme_instance/3__1__0'(A, C, D, E, B).
'next_theme_instance/3__1__1'([I|L], A, B, D, E, F, C) :-
        (   I=suspension(_,J,_,_,G,H),
            J=mutable(active),
            G==D,
            H==F,
            '$via1_multi_hash_first_theme_repetition/3-1'(D, K) ->
            'next_theme_instance/3__1__2'(K, I, L, A, B, D, E, F, C)
        ;   'next_theme_instance/3__1__1'(L, A, B, D, E, F, C)
        ).
'next_theme_instance/3__1__2'([], _, A, B, C, E, F, G, D) :-
        'next_theme_instance/3__1__1'(A, B, C, E, F, G, D).
'next_theme_instance/3__1__2'([M|N], A, B, C, D, F, G, H, E) :-
        (   M=suspension(_,L,_,_,I,J,K),
            L=mutable(active),
            I==F,
            R=t(69,C,A,M,E),
            '$novel_production'(C, R),
            '$novel_production'(A, R),
            '$novel_production'(M, R),
            '$novel_production'(E, R),
            'chr lock'(G),
            'chr lock'(K),
            'chr lock'(H),
            'chr lock'(J),
            G is K-1,
            O is H+1,
            P is J+1,
            'chr unlock'(G),
            'chr unlock'(K),
            'chr unlock'(H),
            'chr unlock'(J) ->
            '$extend_history'(E, R),
            '$activate_constraint_next_theme_instance/3'(_, E),
            first_theme_repetition(F, P, O),
            increment_first_theme_rep,
            (   E=suspension(_,Q,_,_,_,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'next_theme_instance/3__1__2'(N, A, B, C, D, F, G, H, E)
            ;   true
            )
        ;   'next_theme_instance/3__1__2'(N, A, B, C, D, F, G, H, E)
        ).
'next_theme_instance/3__1'(A, B, C, D) :-
        'next_theme_instance/3__2'(A, B, C, D).
'next_theme_instance/3__2'(_, _, _, A) :-
        '$activate_constraint_next_theme_instance/3'(_, A).
theme_boundary_count(A, B) :-
        '$insert_constraint_internal_theme_boundary_count/2'(C, A, B),
        '$insert_in_store_theme_boundary_count/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'theme_boundary_count/2__0'(A, B, C).
'theme_boundary_count/2__0'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, D), !,
        'theme_boundary_count/2__0__0'(D, A, B, C).
'theme_boundary_count/2__0__0'([], B, C, A) :-
        'theme_boundary_count/2__1'(B, C, A).
'theme_boundary_count/2__0__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=count_and_start,
            '$via1_multi_hash_unspecified_successor/2-1'(0, G) ->
            'theme_boundary_count/2__0__1'(G, E, H, B, C, A)
        ;   'theme_boundary_count/2__0__0'(H, B, C, A)
        ).
'theme_boundary_count/2__0__1'([], _, A, C, D, B) :-
        'theme_boundary_count/2__0__0'(A, C, D, B).
'theme_boundary_count/2__0__1'([I|J], A, B, D, E, C) :-
        (   I=suspension(_,H,_,_,F,G),
            H=mutable(active),
            F=0,
            L=t(65,A,C,I),
            '$novel_production'(A, L),
            '$novel_production'(C, L),
            '$novel_production'(I, L) ->
            '$extend_history'(C, L),
            '$activate_constraint_theme_boundary_count/2'(_, C),
            first_theme_start(D, G),
            (   C=suspension(_,K,_,_,_,_),
                K=mutable(active) ->
                'chr update_mutable'(inactive, K),
                'theme_boundary_count/2__0__1'(J, A, B, D, E, C)
            ;   true
            )
        ;   'theme_boundary_count/2__0__1'(J, A, B, D, E, C)
        ).
'theme_boundary_count/2__0'(A, B, C) :-
        'theme_boundary_count/2__1'(A, B, C).
'theme_boundary_count/2__1'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, D), !,
        'theme_boundary_count/2__1__0'(D, A, B, C).
'theme_boundary_count/2__1__0'([], B, C, A) :-
        'theme_boundary_count/2__2'(B, C, A).
'theme_boundary_count/2__1__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_repetitions,
            '$via1_multi_hash_num_first_theme_repeats/2-1'(A, J),
            'chr sbag_member'(H, J),
            H=suspension(_,K,_,_,_,I),
            K=mutable(active),
            I is B-1 ->
            '$remove_constraint_internal_phase/1'(E, L),
            (   L=yes ->
                '$delete_from_store_phase/1'(E)
            ;   true
            ),
            '$activate_constraint_theme_boundary_count/2'(_, C),
            phase(first_theme_occurrences),
            (   C=suspension(_,M,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'theme_boundary_count/2__1__0'(G, A, B, C)
            ;   true
            )
        ;   'theme_boundary_count/2__1__0'(G, A, B, C)
        ).
'theme_boundary_count/2__1'(A, B, C) :-
        'theme_boundary_count/2__2'(A, B, C).
'theme_boundary_count/2__2'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', D), !,
        'theme_boundary_count/2__2__0'(D, A, B, C).
'theme_boundary_count/2__2__0'([], B, C, A) :-
        'theme_boundary_count/2__3'(B, C, A).
'theme_boundary_count/2__2__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_,_),
            J=mutable(active),
            '$via1_multi_hash_first_theme_start/2-1'(A, L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_,_,_),
            M=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(A, P),
            'chr sbag_member'(N, P),
            N=suspension(_,Q,_,_,_,O),
            Q=mutable(active),
            D is O*B ->
            '$remove_constraint_internal_occurrence_count/1'(E, R),
            (   R=yes ->
                '$delete_from_store_occurrence_count/1'(E)
            ;   true
            ),
            '$activate_constraint_theme_boundary_count/2'(_, C),
            all_occurrences,
            (   C=suspension(_,S,_,_,_,_),
                S=mutable(active) ->
                'chr update_mutable'(inactive, S),
                'theme_boundary_count/2__2__0'(G, A, B, C)
            ;   true
            )
        ;   'theme_boundary_count/2__2__0'(G, A, B, C)
        ).
'theme_boundary_count/2__2'(A, B, C) :-
        'theme_boundary_count/2__3'(A, B, C).
'theme_boundary_count/2__3'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'theme_boundary_count/2__3__0'(D, A, B, C).
'theme_boundary_count/2__3__0'([], B, C, A) :-
        'theme_boundary_count/2__4'(B, C, A).
'theme_boundary_count/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            '$via1_multi_hash_first_theme_start/2-1'(B, G) ->
            'theme_boundary_count/2__3__1'(G, E, H, B, C, A)
        ;   'theme_boundary_count/2__3__0'(H, B, C, A)
        ).
'theme_boundary_count/2__3__1'([], _, A, C, D, B) :-
        'theme_boundary_count/2__3__0'(A, C, D, B).
'theme_boundary_count/2__3__1'([G|J], A, B, D, E, C) :-
        (   G=suspension(_,H,_,_,F,_),
            H=mutable(active),
            F==D,
            '$via1_multi_hash_theme_length/2-1'(D, I) ->
            'theme_boundary_count/2__3__2'(I, G, J, A, B, D, E, C)
        ;   'theme_boundary_count/2__3__1'(J, A, B, D, E, C)
        ).
'theme_boundary_count/2__3__2'([], _, A, B, C, E, F, D) :-
        'theme_boundary_count/2__3__1'(A, B, C, E, F, D).
'theme_boundary_count/2__3__2'([K|L], A, B, C, D, F, G, E) :-
        (   K=suspension(_,J,_,_,H,I),
            J=mutable(active),
            H==F,
            O=t(78,C,A,K,E),
            '$novel_production'(C, O),
            '$novel_production'(A, O),
            '$novel_production'(K, O),
            '$novel_production'(E, O),
            M is I*(G-1) ->
            '$extend_history'(E, O),
            '$activate_constraint_theme_boundary_count/2'(_, E),
            number_duplicates(M),
            (   E=suspension(_,N,_,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'theme_boundary_count/2__3__2'(L, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'theme_boundary_count/2__3__2'(L, A, B, C, D, F, G, E)
        ).
'theme_boundary_count/2__3'(A, B, C) :-
        'theme_boundary_count/2__4'(A, B, C).
'theme_boundary_count/2__4'(_, _, A) :-
        '$activate_constraint_theme_boundary_count/2'(_, A).
first_theme_start(A, B) :-
        '$insert_constraint_internal_first_theme_start/2'(C, A, B),
        '$insert_in_store_first_theme_start/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'first_theme_start/2__0'(A, B, C).
'first_theme_start/2__0'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, D), !,
        'first_theme_start/2__0__0'(D, A, B, C).
'first_theme_start/2__0__0'([], B, C, A) :-
        'first_theme_start/2__1'(B, C, A).
'first_theme_start/2__0__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D=count_and_start,
            I=t(66,F,A),
            '$novel_production'(F, I),
            '$novel_production'(A, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_first_theme_start/2'(_, A),
            first_theme(B),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'first_theme_start/2__0__0'(G, B, C, A)
            ;   true
            )
        ;   'first_theme_start/2__0__0'(G, B, C, A)
        ).
'first_theme_start/2__0'(A, B, C) :-
        'first_theme_start/2__1'(A, B, C).
'first_theme_start/2__1'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, D), !,
        'first_theme_start/2__1__0'(D, A, B, C).
'first_theme_start/2__1__0'([], B, C, A) :-
        'first_theme_start/2__2'(B, C, A).
'first_theme_start/2__1__0'([F|G], B, C, A) :-
        (   F=suspension(_,E,_,_,D),
            E=mutable(active),
            D=first_theme_repetitions,
            I=t(68,F,A),
            '$novel_production'(F, I),
            '$novel_production'(A, I) ->
            '$extend_history'(A, I),
            '$activate_constraint_first_theme_start/2'(_, A),
            num_first_theme_repeats(B, 0),
            first_theme_repetition(B, 0, C),
            (   A=suspension(_,H,_,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'first_theme_start/2__1__0'(G, B, C, A)
            ;   true
            )
        ;   'first_theme_start/2__1__0'(G, B, C, A)
        ).
'first_theme_start/2__1'(A, B, C) :-
        'first_theme_start/2__2'(A, B, C).
'first_theme_start/2__2'(A, B, C) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', D), !,
        'first_theme_start/2__2__0'(D, A, B, C).
'first_theme_start/2__2__0'([], B, C, A) :-
        'first_theme_start/2__3'(B, C, A).
'first_theme_start/2__2__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_,_),
            J=mutable(active),
            '$via1_multi_hash_theme_length/2-1'(A, M),
            'chr sbag_member'(K, M),
            K=suspension(_,N,_,_,_,L),
            N=mutable(active),
            '$via1_multi_hash_theme_boundary_count/2-1'(A, Q),
            'chr sbag_member'(O, Q),
            O=suspension(_,R,_,_,_,P),
            R=mutable(active),
            D is L*P ->
            '$remove_constraint_internal_occurrence_count/1'(E, S),
            (   S=yes ->
                '$delete_from_store_occurrence_count/1'(E)
            ;   true
            ),
            '$activate_constraint_first_theme_start/2'(_, C),
            all_occurrences,
            (   C=suspension(_,T,_,_,_,_),
                T=mutable(active) ->
                'chr update_mutable'(inactive, T),
                'first_theme_start/2__2__0'(G, A, B, C)
            ;   true
            )
        ;   'first_theme_start/2__2__0'(G, A, B, C)
        ).
'first_theme_start/2__2'(A, B, C) :-
        'first_theme_start/2__3'(A, B, C).
'first_theme_start/2__3'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'first_theme_start/2__3__0'(D, A, B, C).
'first_theme_start/2__3__0'([], B, C, A) :-
        'first_theme_start/2__4'(B, C, A).
'first_theme_start/2__3__0'([E|H], B, C, A) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            '$via1_multi_hash_theme_length/2-1'(B, G) ->
            'first_theme_start/2__3__1'(G, E, H, B, C, A)
        ;   'first_theme_start/2__3__0'(H, B, C, A)
        ).
'first_theme_start/2__3__1'([], _, A, C, D, B) :-
        'first_theme_start/2__3__0'(A, C, D, B).
'first_theme_start/2__3__1'([H|K], A, B, D, E, C) :-
        (   H=suspension(_,I,_,_,F,G),
            I=mutable(active),
            F==D,
            '$via1_multi_hash_theme_boundary_count/2-1'(D, J) ->
            'first_theme_start/2__3__2'(J, G, H, K, A, B, D, E, C)
        ;   'first_theme_start/2__3__1'(K, A, B, D, E, C)
        ).
'first_theme_start/2__3__2'([], _, _, A, B, C, E, F, D) :-
        'first_theme_start/2__3__1'(A, B, C, E, F, D).
'first_theme_start/2__3__2'([L|M], H, A, B, C, D, F, G, E) :-
        (   L=suspension(_,K,_,_,I,J),
            K=mutable(active),
            I==F,
            P=t(78,C,E,A,L),
            '$novel_production'(C, P),
            '$novel_production'(E, P),
            '$novel_production'(A, P),
            '$novel_production'(L, P),
            N is H*(J-1) ->
            '$extend_history'(E, P),
            '$activate_constraint_first_theme_start/2'(_, E),
            number_duplicates(N),
            (   E=suspension(_,O,_,_,_,_),
                O=mutable(active) ->
                'chr update_mutable'(inactive, O),
                'first_theme_start/2__3__2'(M, H, A, B, C, D, F, G, E)
            ;   true
            )
        ;   'first_theme_start/2__3__2'(M, H, A, B, C, D, F, G, E)
        ).
'first_theme_start/2__3'(A, B, C) :-
        'first_theme_start/2__4'(A, B, C).
'first_theme_start/2__4'(_, _, A) :-
        '$activate_constraint_first_theme_start/2'(_, A).
first_theme(A) :-
        '$insert_constraint_internal_first_theme/1'(B, A),
        '$insert_in_store_first_theme/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'first_theme/1__0'(A, B).
'first_theme/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(count_and_start, C), !,
        'first_theme/1__0__0'(C, A, B).
'first_theme/1__0__0'([], B, A) :-
        'first_theme/1__1'(B, A).
'first_theme/1__0__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=count_and_start ->
            '$remove_constraint_internal_phase/1'(D, G),
            (   G=yes ->
                '$delete_from_store_phase/1'(D)
            ;   true
            ),
            '$activate_constraint_first_theme/1'(_, B),
            phase(first_theme_repetitions),
            (   B=suspension(_,H,_,_,_),
                H=mutable(active) ->
                'chr update_mutable'(inactive, H),
                'first_theme/1__0__0'(F, A, B)
            ;   true
            )
        ;   'first_theme/1__0__0'(F, A, B)
        ).
'first_theme/1__0'(A, B) :-
        'first_theme/1__1'(A, B).
'first_theme/1__1'(_, A) :-
        '$activate_constraint_first_theme/1'(_, A).
num_first_theme_repeats(A, B) :-
        '$insert_constraint_internal_num_first_theme_repeats/2'(C, A, B),
        '$insert_in_store_num_first_theme_repeats/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'num_first_theme_repeats/2__0'(A, B, C).
'num_first_theme_repeats/2__0'(A, B, C) :-
        J is B+1,
        nb_getval('$chr_store_global_ground_user:increment_first_theme_rep/0', E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_),
        F=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_increment_first_theme_rep/0'(D, K),
        (   K=yes ->
            '$delete_from_store_increment_first_theme_rep/0'(D)
        ;   true
        ),
        '$remove_constraint_internal_num_first_theme_repeats/2'(C, L),
        (   L=yes ->
            '$delete_from_store_num_first_theme_repeats/2'(C)
        ;   true
        ),
        num_first_theme_repeats(A, J).
'num_first_theme_repeats/2__0'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, D), !,
        'num_first_theme_repeats/2__0__0'(D, A, B, C).
'num_first_theme_repeats/2__0__0'([], B, C, A) :-
        'num_first_theme_repeats/2__1'(B, C, A).
'num_first_theme_repeats/2__0__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_repetitions,
            '$via1_multi_hash_theme_boundary_count/2-1'(A, J),
            'chr sbag_member'(H, J),
            H=suspension(_,K,_,_,_,I),
            K=mutable(active),
            B is I-1 ->
            '$remove_constraint_internal_phase/1'(E, L),
            (   L=yes ->
                '$delete_from_store_phase/1'(E)
            ;   true
            ),
            '$activate_constraint_num_first_theme_repeats/2'(_, C),
            phase(first_theme_occurrences),
            (   C=suspension(_,M,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'num_first_theme_repeats/2__0__0'(G, A, B, C)
            ;   true
            )
        ;   'num_first_theme_repeats/2__0__0'(G, A, B, C)
        ).
'num_first_theme_repeats/2__0'(A, B, C) :-
        'num_first_theme_repeats/2__1'(A, B, C).
'num_first_theme_repeats/2__1'(_, _, A) :-
        '$activate_constraint_num_first_theme_repeats/2'(_, A).
first_theme_repetition(A, B, C) :-
        '$insert_constraint_internal_first_theme_repetition/3'(D, A, B, C),
        '$insert_in_store_first_theme_repetition/3'(D),
        arg(2, D, E),
        'chr update_mutable'(inactive, E),
        'first_theme_repetition/3__0'(A, B, C, D).
'first_theme_repetition/3__0'(A, B, C, D) :-
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, E), !,
        'first_theme_repetition/3__0__0'(E, A, B, C, D).
'first_theme_repetition/3__0__0'([], B, C, D, A) :-
        'first_theme_repetition/3__1'(B, C, D, A).
'first_theme_repetition/3__0__0'([F|I], B, C, D, A) :-
        (   F=suspension(_,G,_,_,E),
            G=mutable(active),
            E=first_theme_repetitions,
            '$via1_multi_hash_theme_boundary/2-1'(B, H) ->
            'first_theme_repetition/3__0__1'(H, F, I, B, C, D, A)
        ;   'first_theme_repetition/3__0__0'(I, B, C, D, A)
        ).
'first_theme_repetition/3__0__1'([], _, A, C, D, E, B) :-
        'first_theme_repetition/3__0__0'(A, C, D, E, B).
'first_theme_repetition/3__0__1'([I|L], A, B, D, E, F, C) :-
        (   I=suspension(_,J,_,_,G,H),
            J=mutable(active),
            G==D,
            '$via1_multi_hash_next_theme_instance/3-13'(k(D,H), K) ->
            'first_theme_repetition/3__0__2'(K, H, I, L, A, B, D, E, F, C)
        ;   'first_theme_repetition/3__0__1'(L, A, B, D, E, F, C)
        ).
'first_theme_repetition/3__0__2'([], _, _, A, B, C, E, F, G, D) :-
        'first_theme_repetition/3__0__1'(A, B, C, E, F, G, D).
'first_theme_repetition/3__0__2'([N|O], I, A, B, C, D, F, G, H, E) :-
        (   N=suspension(_,M,_,_,J,K,L),
            M=mutable(active),
            J==F,
            L==I,
            S=t(69,C,A,E,N),
            '$novel_production'(C, S),
            '$novel_production'(A, S),
            '$novel_production'(E, S),
            '$novel_production'(N, S),
            'chr lock'(K),
            'chr lock'(H),
            'chr lock'(I),
            'chr lock'(G),
            K is H-1,
            P is I+1,
            Q is G+1,
            'chr unlock'(K),
            'chr unlock'(H),
            'chr unlock'(I),
            'chr unlock'(G) ->
            '$extend_history'(E, S),
            '$activate_constraint_first_theme_repetition/3'(_, E),
            first_theme_repetition(F, Q, P),
            increment_first_theme_rep,
            (   E=suspension(_,R,_,_,_,_,_),
                R=mutable(active) ->
                'chr update_mutable'(inactive, R),
                'first_theme_repetition/3__0__2'(O, I, A, B, C, D, F, G, H, E)
            ;   true
            )
        ;   'first_theme_repetition/3__0__2'(O, I, A, B, C, D, F, G, H, E)
        ).
'first_theme_repetition/3__0'(A, B, C, D) :-
        'first_theme_repetition/3__1'(A, B, C, D).
'first_theme_repetition/3__1'(A, B, C, D) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, E), !,
        'first_theme_repetition/3__1__0'(E, A, B, C, D).
'first_theme_repetition/3__1__0'([], B, C, D, A) :-
        'first_theme_repetition/3__2'(B, C, D, A).
'first_theme_repetition/3__1__0'([G|H], B, C, D, A) :-
        (   G=suspension(_,F,_,_,E),
            F=mutable(active),
            E=first_theme_occurrences,
            J=t(73,G,A),
            '$novel_production'(G, J),
            '$novel_production'(A, J) ->
            '$extend_history'(A, J),
            '$activate_constraint_first_theme_repetition/3'(_, A),
            first_theme_occurrence(1, B, C, D),
            increment_occurrences,
            (   A=suspension(_,I,_,_,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'first_theme_repetition/3__1__0'(H, B, C, D, A)
            ;   true
            )
        ;   'first_theme_repetition/3__1__0'(H, B, C, D, A)
        ).
'first_theme_repetition/3__1'(A, B, C, D) :-
        'first_theme_repetition/3__2'(A, B, C, D).
'first_theme_repetition/3__2'(_, _, _, A) :-
        '$activate_constraint_first_theme_repetition/3'(_, A).
increment_first_theme_rep :-
        '$insert_constraint_internal_increment_first_theme_rep/0'(A),
        '$insert_in_store_increment_first_theme_rep/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'increment_first_theme_rep/0__0'(A).
'increment_first_theme_rep/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:num_first_theme_repeats/2', E),
        'chr sbag_member'(B, E),
        B=suspension(_,F,_,_,C,D),
        F=mutable(active),
        J is D+1,
        '$via1_multi_hash_phase/1-1'(first_theme_repetitions, H),
        'chr sbag_member'(G, H),
        G=suspension(_,I,_,_,_),
        I=mutable(active), !,
        '$remove_constraint_internal_num_first_theme_repeats/2'(B, K),
        (   K=yes ->
            '$delete_from_store_num_first_theme_repeats/2'(B)
        ;   true
        ),
        '$remove_constraint_internal_increment_first_theme_rep/0'(A, L),
        (   L=yes ->
            '$delete_from_store_increment_first_theme_rep/0'(A)
        ;   true
        ),
        num_first_theme_repeats(C, J).
'increment_first_theme_rep/0__0'(A) :-
        '$activate_constraint_increment_first_theme_rep/0'(_, A).
occurrence_count(A) :-
        '$insert_constraint_internal_occurrence_count/1'(B, A),
        '$insert_in_store_occurrence_count/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'occurrence_count/1__0'(A, B).
'occurrence_count/1__0'(A, B) :-
        I is A+1,
        nb_getval('$chr_store_global_ground_user:increment_occurrences/0', D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_),
        E=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_increment_occurrences/0'(C, J),
        (   J=yes ->
            '$delete_from_store_increment_occurrences/0'(C)
        ;   true
        ),
        '$remove_constraint_internal_occurrence_count/1'(B, K),
        (   K=yes ->
            '$delete_from_store_occurrence_count/1'(B)
        ;   true
        ),
        occurrence_count(I).
'occurrence_count/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_,_),
        E=mutable(active),
        nb_getval('$chr_store_global_ground_user:first_theme_start/2', H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,G,_),
        I=mutable(active),
        '$via1_multi_hash_theme_length/2-1'(G, L),
        'chr sbag_member'(J, L),
        J=suspension(_,M,_,_,_,K),
        M=mutable(active),
        '$via1_multi_hash_theme_boundary_count/2-1'(G, P),
        'chr sbag_member'(N, P),
        N=suspension(_,Q,_,_,_,O),
        Q=mutable(active),
        A is K*O, !,
        '$remove_constraint_internal_occurrence_count/1'(B, R),
        (   R=yes ->
            '$delete_from_store_occurrence_count/1'(B)
        ;   true
        ),
        all_occurrences.
'occurrence_count/1__0'(_, A) :-
        '$activate_constraint_occurrence_count/1'(_, A).
first_theme_occurrence(A, B, C, D) :-
        '$insert_constraint_internal_first_theme_occurrence/4'(E, A, B, C, D),
        '$insert_in_store_first_theme_occurrence/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'first_theme_occurrence/4__0'(A, B, C, D, E).
'first_theme_occurrence/4__0'(A, B, C, D, E) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, F), !,
        'first_theme_occurrence/4__0__0'(F, A, B, C, D, E).
'first_theme_occurrence/4__0__0'([], B, C, D, E, A) :-
        'first_theme_occurrence/4__1'(B, C, D, E, A).
'first_theme_occurrence/4__0__0'([G|J], B, C, D, E, A) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            F=first_theme_occurrences,
            '$via1_multi_hash_theme_length/2-1'(C, I) ->
            'first_theme_occurrence/4__0__1'(I, G, J, B, C, D, E, A)
        ;   'first_theme_occurrence/4__0__0'(J, B, C, D, E, A)
        ).
'first_theme_occurrence/4__0__1'([], _, A, C, D, E, F, B) :-
        'first_theme_occurrence/4__0__0'(A, C, D, E, F, B).
'first_theme_occurrence/4__0__1'([K|L], A, B, D, E, F, G, C) :-
        (   K=suspension(_,J,_,_,H,I),
            J=mutable(active),
            H==E,
            P=t(74,A,C,K),
            '$novel_production'(A, P),
            '$novel_production'(C, P),
            '$novel_production'(K, P),
            D<I,
            M is D+1,
            N is G+1 ->
            '$extend_history'(C, P),
            '$activate_constraint_first_theme_occurrence/4'(_, C),
            first_theme_occurrence(M, E, F, N),
            increment_occurrences,
            (   C=suspension(_,O,_,_,_,_,_,_),
                O=mutable(active) ->
                'chr update_mutable'(inactive, O),
                'first_theme_occurrence/4__0__1'(L, A, B, D, E, F, G, C)
            ;   true
            )
        ;   'first_theme_occurrence/4__0__1'(L, A, B, D, E, F, G, C)
        ).
'first_theme_occurrence/4__0'(A, B, C, D, E) :-
        'first_theme_occurrence/4__1'(A, B, C, D, E).
'first_theme_occurrence/4__1'(A, B, 0, C, D) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, E), !,
        'first_theme_occurrence/4__1__0'(E, A, B, 0, C, D).
'first_theme_occurrence/4__1__0'([], B, C, D, E, A) :-
        'first_theme_occurrence/4__2'(B, C, D, E, A).
'first_theme_occurrence/4__1__0'([G|J], B, C, D, E, A) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            F=first_theme_occurrences,
            '$via1_multi_hash_theme_length/2-12'(k(C,B), I) ->
            'first_theme_occurrence/4__1__1'(I, G, J, B, C, D, E, A)
        ;   'first_theme_occurrence/4__1__0'(J, B, C, D, E, A)
        ).
'first_theme_occurrence/4__1__1'([], _, A, C, D, E, F, B) :-
        'first_theme_occurrence/4__1__0'(A, C, D, E, F, B).
'first_theme_occurrence/4__1__1'([K|L], A, B, D, E, F, G, C) :-
        (   K=suspension(_,J,_,_,H,I),
            J=mutable(active),
            H==E,
            I==D,
            N=t(77,A,C,K),
            '$novel_production'(A, N),
            '$novel_production'(C, N),
            '$novel_production'(K, N) ->
            '$extend_history'(C, N),
            '$activate_constraint_first_theme_occurrence/4'(_, C),
            first_theme_end(E, G),
            (   C=suspension(_,M,_,_,_,_,_,_),
                M=mutable(active) ->
                'chr update_mutable'(inactive, M),
                'first_theme_occurrence/4__1__1'(L, A, B, D, E, F, G, C)
            ;   true
            )
        ;   'first_theme_occurrence/4__1__1'(L, A, B, D, E, F, G, C)
        ).
'first_theme_occurrence/4__1'(A, B, C, D, E) :-
        'first_theme_occurrence/4__2'(A, B, C, D, E).
'first_theme_occurrence/4__2'(A, B, C, D, E) :-
        '$via1_multi_hash_unspecified_measure/1-1'(D, F), !,
        'first_theme_occurrence/4__2__0'(F, A, B, C, D, E).
'first_theme_occurrence/4__2__0'([], B, C, D, E, A) :-
        'first_theme_occurrence/4__3'(B, C, D, E, A).
'first_theme_occurrence/4__2__0'([G|I], A, B, C, D, E) :-
        (   G=suspension(_,H,_,_,F),
            H=mutable(active),
            F==D,
            C>0,
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, K),
            'chr sbag_member'(J, K),
            J=suspension(_,L,_,_,_),
            L=mutable(active) ->
            '$remove_constraint_internal_unspecified_measure/1'(G, M),
            (   M=yes ->
                '$delete_from_store_unspecified_measure/1'(G)
            ;   true
            ),
            '$activate_constraint_first_theme_occurrence/4'(_, E),
            duplicated_measure(D),
            increment_duplicates,
            (   E=suspension(_,N,_,_,_,_,_,_),
                N=mutable(active) ->
                'chr update_mutable'(inactive, N),
                'first_theme_occurrence/4__2__0'(I, A, B, C, D, E)
            ;   true
            )
        ;   'first_theme_occurrence/4__2__0'(I, A, B, C, D, E)
        ).
'first_theme_occurrence/4__2'(A, B, C, D, E) :-
        'first_theme_occurrence/4__3'(A, B, C, D, E).
'first_theme_occurrence/4__3'(_, _, _, _, A) :-
        '$activate_constraint_first_theme_occurrence/4'(_, A).
increment_occurrences :-
        '$insert_constraint_internal_increment_occurrences/0'(A),
        '$insert_in_store_increment_occurrences/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'increment_occurrences/0__0'(A).
'increment_occurrences/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:occurrence_count/1', D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active),
        I is C+1,
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_occurrence_count/1'(B, J),
        (   J=yes ->
            '$delete_from_store_occurrence_count/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_increment_occurrences/0'(A, K),
        (   K=yes ->
            '$delete_from_store_increment_occurrences/0'(A)
        ;   true
        ),
        occurrence_count(I).
'increment_occurrences/0__0'(A) :-
        '$activate_constraint_increment_occurrences/0'(_, A).
first_theme_end(A, B) :-
        '$insert_constraint_internal_first_theme_end/2'(C, A, B),
        '$insert_in_store_first_theme_end/2'(C),
        arg(2, C, D),
        'chr update_mutable'(inactive, D),
        'first_theme_end/2__0'(A, B, C).
'first_theme_end/2__0'(A, B, C) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, D), !,
        'first_theme_end/2__0__0'(D, A, B, C).
'first_theme_end/2__0__0'([], B, C, A) :-
        'first_theme_end/2__1'(B, C, A).
'first_theme_end/2__0__0'([E|G], A, B, C) :-
        (   E=suspension(_,F,_,_,D),
            F=mutable(active),
            D=first_theme_occurrences,
            nb_getval('$chr_store_global_ground_user:all_occurrences/0', I),
            'chr sbag_member'(H, I),
            H=suspension(_,J,_,_),
            J=mutable(active),
            nb_getval('$chr_store_global_ground_user:all_duplicates/0', L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_),
            M=mutable(active),
            nb_getval('$chr_store_global_ground_user:restored_unspec/0', O),
            'chr sbag_member'(N, O),
            N=suspension(_,P,_,_),
            P=mutable(active) ->
            '$remove_constraint_internal_phase/1'(E, Q),
            (   Q=yes ->
                '$delete_from_store_phase/1'(E)
            ;   true
            ),
            '$remove_constraint_internal_all_occurrences/0'(H, R),
            (   R=yes ->
                '$delete_from_store_all_occurrences/0'(H)
            ;   true
            ),
            '$remove_constraint_internal_all_duplicates/0'(K, S),
            (   S=yes ->
                '$delete_from_store_all_duplicates/0'(K)
            ;   true
            ),
            '$remove_constraint_internal_restored_unspec/0'(N, T),
            (   T=yes ->
                '$delete_from_store_restored_unspec/0'(N)
            ;   true
            ),
            '$activate_constraint_first_theme_end/2'(_, C),
            phase(ready_to_copy),
            (   C=suspension(_,U,_,_,_,_),
                U=mutable(active) ->
                'chr update_mutable'(inactive, U),
                'first_theme_end/2__0__0'(G, A, B, C)
            ;   true
            )
        ;   'first_theme_end/2__0__0'(G, A, B, C)
        ).
'first_theme_end/2__0'(A, B, C) :-
        'first_theme_end/2__1'(A, B, C).
'first_theme_end/2__1'(_, _, A) :-
        '$activate_constraint_first_theme_end/2'(_, A).
number_duplicates(A) :-
        '$insert_constraint_internal_number_duplicates/1'(B, A),
        '$insert_in_store_number_duplicates/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'number_duplicates/1__0'(A, B).
'number_duplicates/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C), !,
        'number_duplicates/1__0__0'(C, A, B).
'number_duplicates/1__0__0'([], B, A) :-
        'number_duplicates/1__1'(B, A).
'number_duplicates/1__0__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=first_theme_occurrences,
            '$via1_multi_hash_number_duplicated_measures/1-1'(B, F) ->
            'number_duplicates/1__0__1'(F, D, G, B, A)
        ;   'number_duplicates/1__0__0'(G, B, A)
        ).
'number_duplicates/1__0__1'([], _, A, C, B) :-
        'number_duplicates/1__0__0'(A, C, B).
'number_duplicates/1__0__1'([G|H], A, B, D, C) :-
        (   G=suspension(_,F,_,_,E),
            F=mutable(active),
            E==D,
            J=t(82,A,C,G),
            '$novel_production'(A, J),
            '$novel_production'(C, J),
            '$novel_production'(G, J) ->
            '$extend_history'(C, J),
            '$activate_constraint_number_duplicates/1'(_, C),
            all_duplicates,
            (   C=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'number_duplicates/1__0__1'(H, A, B, D, C)
            ;   true
            )
        ;   'number_duplicates/1__0__1'(H, A, B, D, C)
        ).
'number_duplicates/1__0'(A, B) :-
        'number_duplicates/1__1'(A, B).
'number_duplicates/1__1'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C), !,
        'number_duplicates/1__1__0'(C, A, B).
'number_duplicates/1__1__0'([], B, A) :-
        'number_duplicates/1__2'(B, A).
'number_duplicates/1__1__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=first_theme_occurrences,
            '$via1_multi_hash_number_removed_unspecified_successors/1-1'(B, F) ->
            'number_duplicates/1__1__1'(F, D, G, B, A)
        ;   'number_duplicates/1__1__0'(G, B, A)
        ).
'number_duplicates/1__1__1'([], _, A, C, B) :-
        'number_duplicates/1__1__0'(A, C, B).
'number_duplicates/1__1__1'([G|H], A, B, D, C) :-
        (   G=suspension(_,F,_,_,E),
            F=mutable(active),
            E==D,
            J=t(87,A,G,C),
            '$novel_production'(A, J),
            '$novel_production'(G, J),
            '$novel_production'(C, J) ->
            '$extend_history'(C, J),
            '$activate_constraint_number_duplicates/1'(_, C),
            restored_unspec,
            (   C=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'number_duplicates/1__1__1'(H, A, B, D, C)
            ;   true
            )
        ;   'number_duplicates/1__1__1'(H, A, B, D, C)
        ).
'number_duplicates/1__1'(A, B) :-
        'number_duplicates/1__2'(A, B).
'number_duplicates/1__2'(_, A) :-
        '$activate_constraint_number_duplicates/1'(_, A).
duplicated_measure(A) :-
        '$insert_constraint_internal_duplicated_measure/1'(B, A),
        '$insert_in_store_duplicated_measure/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'duplicated_measure/1__0'(A, B).
'duplicated_measure/1__0'(A, B) :-
        '$via1_multi_hash_unspecified_successor/2-2'(A, C), !,
        'duplicated_measure/1__0__0'(C, A, B).
'duplicated_measure/1__0__0'([], B, A) :-
        'duplicated_measure/1__1'(B, A).
'duplicated_measure/1__0__0'([E|G], A, B) :-
        (   E=suspension(_,F,_,_,C,D),
            F=mutable(active),
            D==A,
            '$via1_multi_hash_unspecified_successor/2-1'(A, J),
            'chr sbag_member'(H, J),
            H=suspension(_,K,_,_,_,I),
            K=mutable(active),
            H\==E,
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, M),
            'chr sbag_member'(L, M),
            L=suspension(_,N,_,_,_),
            N=mutable(active) ->
            '$remove_constraint_internal_unspecified_successor/2'(E, O),
            (   O=yes ->
                '$delete_from_store_unspecified_successor/2'(E)
            ;   true
            ),
            '$remove_constraint_internal_unspecified_successor/2'(H, P),
            (   P=yes ->
                '$delete_from_store_unspecified_successor/2'(H)
            ;   true
            ),
            '$activate_constraint_duplicated_measure/1'(_, B),
            unspec_successor(C, I),
            removed_unspec_successor,
            (   B=suspension(_,Q,_,_),
                Q=mutable(active) ->
                'chr update_mutable'(inactive, Q),
                'duplicated_measure/1__0__0'(G, A, B)
            ;   true
            )
        ;   'duplicated_measure/1__0__0'(G, A, B)
        ).
'duplicated_measure/1__0'(A, B) :-
        'duplicated_measure/1__1'(A, B).
'duplicated_measure/1__1'(A, B) :-
        '$via1_multi_hash_max_unspecified/1-1'(A, C), !,
        'duplicated_measure/1__1__0'(C, A, B).
'duplicated_measure/1__1__0'([], B, A) :-
        'duplicated_measure/1__2'(B, A).
'duplicated_measure/1__1__0'([D|F], A, B) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C==A,
            '$via1_multi_hash_unspecified_successor/2-2'(A, I),
            'chr sbag_member'(G, I),
            G=suspension(_,J,_,_,H,_),
            J=mutable(active),
            '$via1_multi_hash_phase/1-1'(first_theme_occurrences, L),
            'chr sbag_member'(K, L),
            K=suspension(_,M,_,_,_),
            M=mutable(active) ->
            '$remove_constraint_internal_max_unspecified/1'(D, N),
            (   N=yes ->
                '$delete_from_store_max_unspecified/1'(D)
            ;   true
            ),
            '$remove_constraint_internal_unspecified_successor/2'(G, O),
            (   O=yes ->
                '$delete_from_store_unspecified_successor/2'(G)
            ;   true
            ),
            '$activate_constraint_duplicated_measure/1'(_, B),
            removed_unspecified_successor,
            max_unspecified(H),
            (   B=suspension(_,P,_,_),
                P=mutable(active) ->
                'chr update_mutable'(inactive, P),
                'duplicated_measure/1__1__0'(F, A, B)
            ;   true
            )
        ;   'duplicated_measure/1__1__0'(F, A, B)
        ).
'duplicated_measure/1__1'(A, B) :-
        'duplicated_measure/1__2'(A, B).
'duplicated_measure/1__2'(_, A) :-
        '$activate_constraint_duplicated_measure/1'(_, A).
increment_duplicates :-
        '$insert_constraint_internal_increment_duplicates/0'(A),
        '$insert_in_store_increment_duplicates/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'increment_duplicates/0__0'(A).
'increment_duplicates/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:number_duplicated_measures/1', D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active),
        I is C+1,
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_number_duplicated_measures/1'(B, J),
        (   J=yes ->
            '$delete_from_store_number_duplicated_measures/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_increment_duplicates/0'(A, K),
        (   K=yes ->
            '$delete_from_store_increment_duplicates/0'(A)
        ;   true
        ),
        number_duplicated_measures(I).
'increment_duplicates/0__0'(A) :-
        '$activate_constraint_increment_duplicates/0'(_, A).
number_duplicated_measures(A) :-
        '$insert_constraint_internal_number_duplicated_measures/1'(B, A),
        '$insert_in_store_number_duplicated_measures/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'number_duplicated_measures/1__0'(A, B).
'number_duplicated_measures/1__0'(A, B) :-
        I is A+1,
        nb_getval('$chr_store_global_ground_user:increment_duplicates/0', D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_),
        E=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_increment_duplicates/0'(C, J),
        (   J=yes ->
            '$delete_from_store_increment_duplicates/0'(C)
        ;   true
        ),
        '$remove_constraint_internal_number_duplicated_measures/1'(B, K),
        (   K=yes ->
            '$delete_from_store_number_duplicated_measures/1'(B)
        ;   true
        ),
        number_duplicated_measures(I).
'number_duplicated_measures/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C), !,
        'number_duplicated_measures/1__0__0'(C, A, B).
'number_duplicated_measures/1__0__0'([], B, A) :-
        'number_duplicated_measures/1__1'(B, A).
'number_duplicated_measures/1__0__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=first_theme_occurrences,
            '$via1_multi_hash_number_duplicates/1-1'(B, F) ->
            'number_duplicated_measures/1__0__1'(F, D, G, B, A)
        ;   'number_duplicated_measures/1__0__0'(G, B, A)
        ).
'number_duplicated_measures/1__0__1'([], _, A, C, B) :-
        'number_duplicated_measures/1__0__0'(A, C, B).
'number_duplicated_measures/1__0__1'([G|H], A, B, D, C) :-
        (   G=suspension(_,F,_,_,E),
            F=mutable(active),
            E==D,
            J=t(82,A,G,C),
            '$novel_production'(A, J),
            '$novel_production'(G, J),
            '$novel_production'(C, J) ->
            '$extend_history'(C, J),
            '$activate_constraint_number_duplicated_measures/1'(_, C),
            all_duplicates,
            (   C=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'number_duplicated_measures/1__0__1'(H, A, B, D, C)
            ;   true
            )
        ;   'number_duplicated_measures/1__0__1'(H, A, B, D, C)
        ).
'number_duplicated_measures/1__0'(A, B) :-
        'number_duplicated_measures/1__1'(A, B).
'number_duplicated_measures/1__1'(_, A) :-
        '$activate_constraint_number_duplicated_measures/1'(_, A).
all_duplicates :-
        '$insert_constraint_internal_all_duplicates/0'(A),
        '$insert_in_store_all_duplicates/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'all_duplicates/0__0'(A).
'all_duplicates/0__0'(A) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active),
        nb_getval('$chr_store_global_ground_user:all_occurrences/0', F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active),
        nb_getval('$chr_store_global_ground_user:restored_unspec/0', I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_),
        J=mutable(active),
        nb_getval('$chr_store_global_ground_user:first_theme_end/2', L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_phase/1'(B, N),
        (   N=yes ->
            '$delete_from_store_phase/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_all_occurrences/0'(E, O),
        (   O=yes ->
            '$delete_from_store_all_occurrences/0'(E)
        ;   true
        ),
        '$remove_constraint_internal_restored_unspec/0'(H, P),
        (   P=yes ->
            '$delete_from_store_restored_unspec/0'(H)
        ;   true
        ),
        '$remove_constraint_internal_all_duplicates/0'(A, Q),
        (   Q=yes ->
            '$delete_from_store_all_duplicates/0'(A)
        ;   true
        ),
        phase(ready_to_copy).
'all_duplicates/0__0'(A) :-
        '$activate_constraint_all_duplicates/0'(_, A).
number_removed_unspecified_successors(A) :-
        '$insert_constraint_internal_number_removed_unspecified_successors/1'(B, A),
        '$insert_in_store_number_removed_unspecified_successors/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'number_removed_unspecified_successors/1__0'(A, B).
'number_removed_unspecified_successors/1__0'(A, B) :-
        I is A+1,
        nb_getval('$chr_store_global_ground_user:removed_unspecified_successor/0', D),
        'chr sbag_member'(C, D),
        C=suspension(_,E,_,_),
        E=mutable(active),
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_removed_unspecified_successor/0'(C, J),
        (   J=yes ->
            '$delete_from_store_removed_unspecified_successor/0'(C)
        ;   true
        ),
        '$remove_constraint_internal_number_removed_unspecified_successors/1'(B, K),
        (   K=yes ->
            '$delete_from_store_number_removed_unspecified_successors/1'(B)
        ;   true
        ),
        number_removed_unspec_successors(I).
'number_removed_unspecified_successors/1__0'(A, B) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C), !,
        'number_removed_unspecified_successors/1__0__0'(C, A, B).
'number_removed_unspecified_successors/1__0__0'([], B, A) :-
        'number_removed_unspecified_successors/1__1'(B, A).
'number_removed_unspecified_successors/1__0__0'([D|G], B, A) :-
        (   D=suspension(_,E,_,_,C),
            E=mutable(active),
            C=first_theme_occurrences,
            '$via1_multi_hash_number_duplicates/1-1'(B, F) ->
            'number_removed_unspecified_successors/1__0__1'(F, D, G, B, A)
        ;   'number_removed_unspecified_successors/1__0__0'(G, B, A)
        ).
'number_removed_unspecified_successors/1__0__1'([], _, A, C, B) :-
        'number_removed_unspecified_successors/1__0__0'(A, C, B).
'number_removed_unspecified_successors/1__0__1'([G|H], A, B, D, C) :-
        (   G=suspension(_,F,_,_,E),
            F=mutable(active),
            E==D,
            J=t(87,A,C,G),
            '$novel_production'(A, J),
            '$novel_production'(C, J),
            '$novel_production'(G, J) ->
            '$extend_history'(C, J),
            '$activate_constraint_number_removed_unspecified_successors/1'(_, C),
            restored_unspec,
            (   C=suspension(_,I,_,_,_),
                I=mutable(active) ->
                'chr update_mutable'(inactive, I),
                'number_removed_unspecified_successors/1__0__1'(H, A, B, D, C)
            ;   true
            )
        ;   'number_removed_unspecified_successors/1__0__1'(H, A, B, D, C)
        ).
'number_removed_unspecified_successors/1__0'(A, B) :-
        'number_removed_unspecified_successors/1__1'(A, B).
'number_removed_unspecified_successors/1__1'(_, A) :-
        '$activate_constraint_number_removed_unspecified_successors/1'(_, A).
removed_unspecified_successor :-
        '$insert_constraint_internal_removed_unspecified_successor/0'(A),
        '$insert_in_store_removed_unspecified_successor/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'removed_unspecified_successor/0__0'(A).
'removed_unspecified_successor/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:number_removed_unspecified_successors/1', D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active),
        I is C+1,
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, G),
        'chr sbag_member'(F, G),
        F=suspension(_,H,_,_,_),
        H=mutable(active), !,
        '$remove_constraint_internal_number_removed_unspecified_successors/1'(B, J),
        (   J=yes ->
            '$delete_from_store_number_removed_unspecified_successors/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_removed_unspecified_successor/0'(A, K),
        (   K=yes ->
            '$delete_from_store_removed_unspecified_successor/0'(A)
        ;   true
        ),
        number_removed_unspec_successors(I).
'removed_unspecified_successor/0__0'(A) :-
        '$activate_constraint_removed_unspecified_successor/0'(_, A).
all_occurrences :-
        '$insert_constraint_internal_all_occurrences/0'(A),
        '$insert_in_store_all_occurrences/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'all_occurrences/0__0'(A).
'all_occurrences/0__0'(A) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active),
        nb_getval('$chr_store_global_ground_user:all_duplicates/0', F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active),
        nb_getval('$chr_store_global_ground_user:restored_unspec/0', I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_),
        J=mutable(active),
        nb_getval('$chr_store_global_ground_user:first_theme_end/2', L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_phase/1'(B, N),
        (   N=yes ->
            '$delete_from_store_phase/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_all_duplicates/0'(E, O),
        (   O=yes ->
            '$delete_from_store_all_duplicates/0'(E)
        ;   true
        ),
        '$remove_constraint_internal_restored_unspec/0'(H, P),
        (   P=yes ->
            '$delete_from_store_restored_unspec/0'(H)
        ;   true
        ),
        '$remove_constraint_internal_all_occurrences/0'(A, Q),
        (   Q=yes ->
            '$delete_from_store_all_occurrences/0'(A)
        ;   true
        ),
        phase(ready_to_copy).
'all_occurrences/0__0'(A) :-
        '$activate_constraint_all_occurrences/0'(_, A).
restored_unspec :-
        '$insert_constraint_internal_restored_unspec/0'(A),
        '$insert_in_store_restored_unspec/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'restored_unspec/0__0'(A).
'restored_unspec/0__0'(A) :-
        '$via1_multi_hash_phase/1-1'(first_theme_occurrences, C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active),
        nb_getval('$chr_store_global_ground_user:all_occurrences/0', F),
        'chr sbag_member'(E, F),
        E=suspension(_,G,_,_),
        G=mutable(active),
        nb_getval('$chr_store_global_ground_user:all_duplicates/0', I),
        'chr sbag_member'(H, I),
        H=suspension(_,J,_,_),
        J=mutable(active),
        nb_getval('$chr_store_global_ground_user:first_theme_end/2', L),
        'chr sbag_member'(K, L),
        K=suspension(_,M,_,_,_,_),
        M=mutable(active), !,
        '$remove_constraint_internal_phase/1'(B, N),
        (   N=yes ->
            '$delete_from_store_phase/1'(B)
        ;   true
        ),
        '$remove_constraint_internal_all_occurrences/0'(E, O),
        (   O=yes ->
            '$delete_from_store_all_occurrences/0'(E)
        ;   true
        ),
        '$remove_constraint_internal_all_duplicates/0'(H, P),
        (   P=yes ->
            '$delete_from_store_all_duplicates/0'(H)
        ;   true
        ),
        '$remove_constraint_internal_restored_unspec/0'(A, Q),
        (   Q=yes ->
            '$delete_from_store_restored_unspec/0'(A)
        ;   true
        ),
        phase(ready_to_copy).
'restored_unspec/0__0'(A) :-
        '$activate_constraint_restored_unspec/0'(_, A).
abstract_beat(A, B, C, D) :-
        '$insert_constraint_internal_abstract_beat/4'(E, A, B, C, D),
        '$insert_in_store_abstract_beat/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'abstract_beat/4__0'(A, B, C, D, E).
'abstract_beat/4__0'(A, _, _, B, C) :-
        '$via1_multi_hash_measures/1-1'(A, E),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_),
        F=mutable(active), !,
        '$remove_constraint_internal_abstract_beat/4'(C, G),
        (   G=yes ->
            '$delete_from_store_abstract_beat/4'(C)
        ;   true
        ),
        B=first.
'abstract_beat/4__0'(_, A, B, C, D) :-
        nb_getval('$chr_store_global_ground_user:meter/2', G),
        'chr sbag_member'(E, G),
        E=suspension(_,H,_,_,F,_),
        H=mutable(active), !,
        '$remove_constraint_internal_abstract_beat/4'(D, I),
        (   I=yes ->
            '$delete_from_store_abstract_beat/4'(D)
        ;   true
        ),
        abstract_beat1(F, A, B, C).
'abstract_beat/4__0'(_, _, _, _, A) :- !,
        '$remove_constraint_internal_abstract_beat/4'(A, B),
        (   B=yes ->
            '$delete_from_store_abstract_beat/4'(A)
        ;   true
        ),
        writeln(error_abstract_beat-measure_or_meter_missing).
'abstract_beat/4__0'(_, _, _, _, A) :-
        '$activate_constraint_abstract_beat/4'(_, A).
write_notes :-
        '$insert_constraint_internal_write_notes/0'(A),
        '$insert_in_store_write_notes/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'write_notes/0__0'(A).
'write_notes/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:measures/1', B), !,
        'write_notes/0__0__0'(B, A).
'write_notes/0__0__0'([], A) :-
        'write_notes/0__1'(A).
'write_notes/0__0__0'([C|F], A) :-
        (   C=suspension(_,D,_,_,B),
            D=mutable(active),
            nb_getval('$chr_store_global_ground_user:meter/2', E) ->
            'write_notes/0__0__1'(E, B, C, F, A)
        ;   'write_notes/0__0__0'(F, A)
        ).
'write_notes/0__0__1'([], _, _, A, B) :-
        'write_notes/0__0__0'(A, B).
'write_notes/0__0__1'([G|J], D, A, B, C) :-
        (   G=suspension(_,H,_,_,E,F),
            H=mutable(active),
            nb_getval('$chr_store_global_ground_user:voice/1', I) ->
            'write_notes/0__0__2'(I, E, F, G, J, D, A, B, C)
        ;   'write_notes/0__0__1'(J, D, A, B, C)
        ).
'write_notes/0__0__2'([], _, _, _, A, E, B, C, D) :-
        'write_notes/0__0__1'(A, E, B, C, D).
'write_notes/0__0__2'([K|L], G, H, A, B, F, C, D, E) :-
        (   K=suspension(_,J,_,_,I),
            J=mutable(active),
            M=t(144,C,A,E,K),
            '$novel_production'(C, M),
            '$novel_production'(A, M),
            '$novel_production'(E, M),
            '$novel_production'(K, M) ->
            '$extend_history'(E, M),
            voice_header(I),
            write('\\time '),
            write(G),
            write(/),
            write(H),
            nl,
            show(I, 1, F),
            maybe_close_bracket,
            writeln('}'),
            'write_notes/0__0__2'(L, G, H, A, B, F, C, D, E)
        ;   'write_notes/0__0__2'(L, G, H, A, B, F, C, D, E)
        ).
'write_notes/0__0'(A) :-
        'write_notes/0__1'(A).
'write_notes/0__1'(A) :- !,
        '$remove_constraint_internal_write_notes/0'(A, B),
        (   B=yes ->
            '$delete_from_store_write_notes/0'(A)
        ;   true
        ).
'write_notes/0__1'(A) :-
        '$activate_constraint_write_notes/0'(_, A).
show(A, B, C) :-
        '$insert_constraint_internal_show/3'(D, A, B, C),
        '$insert_in_store_show/3'(D),
        arg(2, D, E),
        'chr update_mutable'(inactive, E),
        'show/3__0'(A, B, C, D).
'show/3__0'(_, A, B, C) :-
        A>B, !,
        '$remove_constraint_internal_show/3'(C, D),
        (   D=yes ->
            '$delete_from_store_show/3'(C)
        ;   true
        ).
'show/3__0'(A, B, C, D) :-
        B=<C, !,
        '$remove_constraint_internal_show/3'(D, F),
        (   F=yes ->
            '$delete_from_store_show/3'(D)
        ;   true
        ),
        write('    '),
        show_notes(A, B, 0, 0),
        write(' |'),
        nl,
        E is B+1,
        show(A, E, C).
'show/3__0'(_, _, _, A) :-
        '$activate_constraint_show/3'(_, A).
show_notes(A, B, C, D) :-
        '$insert_constraint_internal_show_notes/4'(E, A, B, C, D),
        '$insert_in_store_show_notes/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'show_notes/4__0'(A, B, C, D, E).
'show_notes/4__0'(A, B, C, D, E) :-
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), F), !,
        'show_notes/4__0__0'(F, A, B, C, D, E).
'show_notes/4__0__0'([], B, C, D, E, A) :-
        'show_notes/4__1'(B, C, D, E, A).
'show_notes/4__0__0'([K|N], B, C, D, E, A) :-
        (   K=suspension(_,L,_,_,F,G,H,I,J),
            L=mutable(active),
            F==B,
            G==C,
            H==D,
            I==E,
            '$via1_multi_hash_beat/5-1234'(k(B,C,D,E), M) ->
            'show_notes/4__0__1'(M, J, K, N, B, C, D, E, A)
        ;   'show_notes/4__0__0'(N, B, C, D, E, A)
        ).
'show_notes/4__0__1'([], _, _, A, C, D, E, F, B) :-
        'show_notes/4__0__0'(A, C, D, E, F, B).
'show_notes/4__0__1'([O|P], H, A, B, D, E, F, G, C) :-
        (   O=suspension(_,N,_,_,I,J,K,L,M),
            N=mutable(active),
            I==D,
            J==E,
            K==F,
            L==G,
            Q=t(148,A,O,C),
            '$novel_production'(A, Q),
            '$novel_production'(O, Q),
            '$novel_production'(C, Q) ->
            '$extend_history'(C, Q),
            show_note(H),
            maybe_show_octave(D, E, F, G),
            write(M),
            show_mods(H),
            write(' '),
            'show_notes/4__0__1'(P, H, A, B, D, E, F, G, C)
        ;   'show_notes/4__0__1'(P, H, A, B, D, E, F, G, C)
        ).
'show_notes/4__0'(A, B, C, D, E) :-
        'show_notes/4__1'(A, B, C, D, E).
'show_notes/4__1'(A, B, C, D, E) :-
        '$via1_multi_hash_tied/4-1234'(k(A,B,C,D), F), !,
        'show_notes/4__1__0'(F, A, B, C, D, E).
'show_notes/4__1__0'([], B, C, D, E, A) :-
        'show_notes/4__2'(B, C, D, E, A).
'show_notes/4__1__0'([K|L], B, C, D, E, A) :-
        (   K=suspension(_,J,_,_,F,G,H,I),
            J=mutable(active),
            F==B,
            G==C,
            H==D,
            I==E,
            M=t(149,K,A),
            '$novel_production'(K, M),
            '$novel_production'(A, M) ->
            '$extend_history'(A, M),
            write(' ~ '),
            'show_notes/4__1__0'(L, B, C, D, E, A)
        ;   'show_notes/4__1__0'(L, B, C, D, E, A)
        ).
'show_notes/4__1'(A, B, C, D, E) :-
        'show_notes/4__2'(A, B, C, D, E).
'show_notes/4__2'(A, B, C, D, E) :-
        '$via1_multi_hash_next_beat/7-12345'(k(A,B,C,D,B), I),
        'chr sbag_member'(F, I),
        F=suspension(_,J,_,_,_,_,_,_,G,H),
        J=mutable(active), !,
        '$remove_constraint_internal_show_notes/4'(E, K),
        (   K=yes ->
            '$delete_from_store_show_notes/4'(E)
        ;   true
        ),
        show_notes(A, B, G, H).
'show_notes/4__2'(_, _, _, _, A) :- !,
        '$remove_constraint_internal_show_notes/4'(A, B),
        (   B=yes ->
            '$delete_from_store_show_notes/4'(A)
        ;   true
        ).
'show_notes/4__2'(_, _, _, _, A) :-
        '$activate_constraint_show_notes/4'(_, A).
voice_header(A) :-
        '$insert_constraint_internal_voice_header/1'(B, A),
        '$insert_in_store_voice_header/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'voice_header/1__0'(A, B).
'voice_header/1__0'(melody, A) :- !,
        writeln('Melody = {'),
        tempo_declaration,
        writeln('  \\clef treble'),
        'voice_header/1__1'(melody, A).
'voice_header/1__0'(A, B) :-
        'voice_header/1__1'(A, B).
'voice_header/1__1'(bass, A) :- !,
        writeln('Bass = {'),
        tempo_declaration,
        writeln('  \\clef "bass_8"'),
        'voice_header/1__2'(bass, A).
'voice_header/1__1'(A, B) :-
        'voice_header/1__2'(A, B).
'voice_header/1__2'(chords, A) :- !,
        writeln('Chords = \\chordmode {'),
        tempo_declaration,
        writeln('  \\clef treble'),
        'voice_header/1__3'(chords, A).
'voice_header/1__2'(A, B) :-
        'voice_header/1__3'(A, B).
'voice_header/1__3'(drums, A) :- !,
        writeln('Drums = \\drummode {'),
        tempo_declaration,
        'voice_header/1__4'(drums, A).
'voice_header/1__3'(A, B) :-
        'voice_header/1__4'(A, B).
'voice_header/1__4'(A, B) :-
        nb_getval('$chr_store_global_ground_user:repeats/1', C), !,
        'voice_header/1__4__0'(C, A, B).
'voice_header/1__4__0'([], B, A) :-
        'voice_header/1__5'(B, A).
'voice_header/1__4__0'([E|F], B, A) :-
        (   E=suspension(_,D,_,_,C),
            D=mutable(active),
            G=t(165,E,A),
            '$novel_production'(E, G),
            '$novel_production'(A, G) ->
            '$extend_history'(A, G),
            write('  \\repeat unfold '),
            write(C),
            writeln(' {'),
            'voice_header/1__4__0'(F, B, A)
        ;   'voice_header/1__4__0'(F, B, A)
        ).
'voice_header/1__4'(A, B) :-
        'voice_header/1__5'(A, B).
'voice_header/1__5'(_, A) :- !,
        '$remove_constraint_internal_voice_header/1'(A, B),
        (   B=yes ->
            '$delete_from_store_voice_header/1'(A)
        ;   true
        ).
'voice_header/1__5'(_, A) :-
        '$activate_constraint_voice_header/1'(_, A).
voice_footer(A) :-
        '$insert_constraint_internal_voice_footer/1'(B, A),
        '$insert_in_store_voice_footer/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'voice_footer/1__0'(A, B).
'voice_footer/1__0'(melody, A) :-
        '$via1_multi_hash_instrument/2-1'(melody, D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active), !,
        '$remove_constraint_internal_voice_footer/1'(A, F),
        (   F=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        write('    \\new Staff \\with {midiInstrument = #"'),
        write(C),
        writeln('"} \\Melody').
'voice_footer/1__0'(chords, A) :-
        '$via1_multi_hash_instrument/2-1'(chords, D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active), !,
        '$remove_constraint_internal_voice_footer/1'(A, F),
        (   F=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        write('    \\new Staff \\with {midiInstrument = #"'),
        write(C),
        writeln('"} \\Chords').
'voice_footer/1__0'(bass, A) :-
        '$via1_multi_hash_instrument/2-1'(bass, D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,C),
        E=mutable(active), !,
        '$remove_constraint_internal_voice_footer/1'(A, F),
        (   F=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        write('    \\new Staff \\with {midiInstrument = #"'),
        write(C),
        writeln('"} \\Bass').
'voice_footer/1__0'(melody, A) :- !,
        '$remove_constraint_internal_voice_footer/1'(A, B),
        (   B=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        writeln('    \\new Staff \\with {midiInstrument = #"soprano sax"} \\Melody').
'voice_footer/1__0'(chords, A) :- !,
        '$remove_constraint_internal_voice_footer/1'(A, B),
        (   B=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        writeln('    \\new Staff \\with {midiInstrument = #"acoustic guitar (steel)"} \\Chords').
'voice_footer/1__0'(bass, A) :- !,
        '$remove_constraint_internal_voice_footer/1'(A, B),
        (   B=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        writeln('    \\new Staff \\with {midiInstrument = #"baritone sax"} \\Bass').
'voice_footer/1__0'(drums, A) :- !,
        '$remove_constraint_internal_voice_footer/1'(A, B),
        (   B=yes ->
            '$delete_from_store_voice_footer/1'(A)
        ;   true
        ),
        writeln('    \\new DrumStaff \\Drums').
'voice_footer/1__0'(_, A) :-
        '$activate_constraint_voice_footer/1'(_, A).
maybe_close_bracket :-
        '$insert_constraint_internal_maybe_close_bracket/0'(A),
        '$insert_in_store_maybe_close_bracket/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'maybe_close_bracket/0__0'(A).
'maybe_close_bracket/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:repeats/1', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_maybe_close_bracket/0'(A, E),
        (   E=yes ->
            '$delete_from_store_maybe_close_bracket/0'(A)
        ;   true
        ),
        writeln('  }').
'maybe_close_bracket/0__0'(A) :- !,
        '$remove_constraint_internal_maybe_close_bracket/0'(A, B),
        (   B=yes ->
            '$delete_from_store_maybe_close_bracket/0'(A)
        ;   true
        ).
'maybe_close_bracket/0__0'(A) :-
        '$activate_constraint_maybe_close_bracket/0'(_, A).
show_note(A) :-
        '$insert_constraint_internal_show_note/1'(B, A),
        '$insert_in_store_show_note/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'show_note/1__0'(A, B).
'show_note/1__0'(B+_, A) :- !,
        '$remove_constraint_internal_show_note/1'(A, C),
        (   C=yes ->
            '$delete_from_store_show_note/1'(A)
        ;   true
        ),
        show_note(B).
'show_note/1__0'(A, B) :- !,
        '$remove_constraint_internal_show_note/1'(B, C),
        (   C=yes ->
            '$delete_from_store_show_note/1'(B)
        ;   true
        ),
        write(A).
'show_note/1__0'(_, A) :-
        '$activate_constraint_show_note/1'(_, A).
show_mods(A) :-
        '$insert_constraint_internal_show_mods/1'(B, A),
        '$insert_in_store_show_mods/1'(B),
        arg(2, B, C),
        'chr update_mutable'(inactive, C),
        'show_mods/1__0'(A, B).
'show_mods/1__0'(B+C, A) :- !,
        '$remove_constraint_internal_show_mods/1'(A, D),
        (   D=yes ->
            '$delete_from_store_show_mods/1'(A)
        ;   true
        ),
        show_mods(B),
        write(C).
'show_mods/1__0'(_, A) :- !,
        '$remove_constraint_internal_show_mods/1'(A, B),
        (   B=yes ->
            '$delete_from_store_show_mods/1'(A)
        ;   true
        ).
'show_mods/1__0'(_, A) :-
        '$activate_constraint_show_mods/1'(_, A).
maybe_show_octave(A, B, C, D) :-
        '$insert_constraint_internal_maybe_show_octave/4'(E, A, B, C, D),
        '$insert_in_store_maybe_show_octave/4'(E),
        arg(2, E, F),
        'chr update_mutable'(inactive, F),
        'maybe_show_octave/4__0'(A, B, C, D, E).
'maybe_show_octave/4__0'(A, B, C, D, E) :-
        '$via1_multi_hash_note/5-1234'(k(A,B,C,D), H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,_,_,_,_,G),
        I=mutable(active),
        is_rest(G), !,
        '$remove_constraint_internal_maybe_show_octave/4'(E, J),
        (   J=yes ->
            '$delete_from_store_maybe_show_octave/4'(E)
        ;   true
        ).
'maybe_show_octave/4__0'(A, B, C, D, E) :-
        '$via1_multi_hash_octave/5-1234'(k(A,B,C,D), H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,_,_,_,_,G),
        I=mutable(active), !,
        '$remove_constraint_internal_maybe_show_octave/4'(E, K),
        (   K=yes ->
            '$delete_from_store_maybe_show_octave/4'(E)
        ;   true
        ),
        octave_notation(G, J),
        write(J).
'maybe_show_octave/4__0'(_, _, _, _, A) :- !,
        '$remove_constraint_internal_maybe_show_octave/4'(A, B),
        (   B=yes ->
            '$delete_from_store_maybe_show_octave/4'(A)
        ;   true
        ).
'maybe_show_octave/4__0'(_, _, _, _, A) :-
        '$activate_constraint_maybe_show_octave/4'(_, A).
tempo_declaration :-
        '$insert_constraint_internal_tempo_declaration/0'(A),
        '$insert_in_store_tempo_declaration/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'tempo_declaration/0__0'(A).
'tempo_declaration/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:meter/2', D),
        'chr sbag_member'(B, D),
        B=suspension(_,E,_,_,_,C),
        E=mutable(active),
        nb_getval('$chr_store_global_ground_user:tempo/1', H),
        'chr sbag_member'(F, H),
        F=suspension(_,I,_,_,G),
        I=mutable(active), !,
        '$remove_constraint_internal_tempo_declaration/0'(A, J),
        (   J=yes ->
            '$delete_from_store_tempo_declaration/0'(A)
        ;   true
        ),
        format('  \\tempo ~w=~w\n', [C,G]).
'tempo_declaration/0__0'(A) :- !,
        '$remove_constraint_internal_tempo_declaration/0'(A, B),
        (   B=yes ->
            '$delete_from_store_tempo_declaration/0'(A)
        ;   true
        ),
        format('  \\tempo 4=80\n', []).
'tempo_declaration/0__0'(A) :-
        '$activate_constraint_tempo_declaration/0'(_, A).
play :-
        '$insert_constraint_internal_play/0'(A),
        '$insert_in_store_play/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'play/0__0'(A).
'play/0__0'(A) :-
        '$via1_multi_hash_phase/1-1'(join_notes, B), !,
        'play/0__0__0'(B, A).
'play/0__0__0'([], A) :-
        'play/0__1'(A).
'play/0__0__0'([C|E], A) :-
        (   C=suspension(_,D,_,_,B),
            D=mutable(active),
            B=join_notes ->
            '$remove_constraint_internal_phase/1'(C, F),
            (   F=yes ->
                '$delete_from_store_phase/1'(C)
            ;   true
            ),
            '$activate_constraint_play/0'(_, A),
            phase(output),
            (   A=suspension(_,G,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'play/0__0__0'(E, A)
            ;   true
            )
        ;   'play/0__0__0'(E, A)
        ).
'play/0__0'(A) :-
        'play/0__1'(A).
'play/0__1'(A) :-
        nb_getval('$chr_store_global_ground_user:play_footer/0', B), !,
        'play/0__1__0'(B, A).
'play/0__1__0'([], A) :-
        'play/0__2'(A).
'play/0__1__0'([B|D], A) :-
        (   B=suspension(_,C,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_play_footer/0'(B, E),
            (   E=yes ->
                '$delete_from_store_play_footer/0'(B)
            ;   true
            ),
            '$activate_constraint_play/0'(_, A),
            writeln('  \\midi {}'),
            (   A=suspension(_,F,_,_),
                F=mutable(active) ->
                'chr update_mutable'(inactive, F),
                'play/0__1__0'(D, A)
            ;   true
            )
        ;   'play/0__1__0'(D, A)
        ).
'play/0__1'(A) :-
        'play/0__2'(A).
'play/0__2'(A) :-
        '$activate_constraint_play/0'(_, A).
show :-
        '$insert_constraint_internal_show/0'(A),
        '$insert_in_store_show/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'show/0__0'(A).
'show/0__0'(A) :-
        '$via1_multi_hash_phase/1-1'(join_notes, B), !,
        'show/0__0__0'(B, A).
'show/0__0__0'([], A) :-
        'show/0__1'(A).
'show/0__0__0'([C|E], A) :-
        (   C=suspension(_,D,_,_,B),
            D=mutable(active),
            B=join_notes ->
            '$remove_constraint_internal_phase/1'(C, F),
            (   F=yes ->
                '$delete_from_store_phase/1'(C)
            ;   true
            ),
            '$activate_constraint_show/0'(_, A),
            phase(output),
            (   A=suspension(_,G,_,_),
                G=mutable(active) ->
                'chr update_mutable'(inactive, G),
                'show/0__0__0'(E, A)
            ;   true
            )
        ;   'show/0__0__0'(E, A)
        ).
'show/0__0'(A) :-
        'show/0__1'(A).
'show/0__1'(A) :-
        nb_getval('$chr_store_global_ground_user:show_footer/0', B), !,
        'show/0__1__0'(B, A).
'show/0__1__0'([], A) :-
        'show/0__2'(A).
'show/0__1__0'([B|D], A) :-
        (   B=suspension(_,C,_,_),
            C=mutable(active) ->
            '$remove_constraint_internal_show_footer/0'(B, E),
            (   E=yes ->
                '$delete_from_store_show_footer/0'(B)
            ;   true
            ),
            '$activate_constraint_show/0'(_, A),
            writeln('  \\layout {}'),
            (   A=suspension(_,F,_,_),
                F=mutable(active) ->
                'chr update_mutable'(inactive, F),
                'show/0__1__0'(D, A)
            ;   true
            )
        ;   'show/0__1__0'(D, A)
        ).
'show/0__1'(A) :-
        'show/0__2'(A).
'show/0__2'(A) :-
        '$activate_constraint_show/0'(_, A).
play_footer :-
        '$insert_constraint_internal_play_footer/0'(A),
        '$insert_in_store_play_footer/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'play_footer/0__0'(A).
'play_footer/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:play/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_play_footer/0'(A, E),
        (   E=yes ->
            '$delete_from_store_play_footer/0'(A)
        ;   true
        ),
        writeln('  \\midi {}').
'play_footer/0__0'(A) :- !,
        '$remove_constraint_internal_play_footer/0'(A, B),
        (   B=yes ->
            '$delete_from_store_play_footer/0'(A)
        ;   true
        ).
'play_footer/0__0'(A) :-
        '$activate_constraint_play_footer/0'(_, A).
show_footer :-
        '$insert_constraint_internal_show_footer/0'(A),
        '$insert_in_store_show_footer/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'show_footer/0__0'(A).
'show_footer/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:show/0', C),
        'chr sbag_member'(B, C),
        B=suspension(_,D,_,_),
        D=mutable(active), !,
        '$remove_constraint_internal_show_footer/0'(A, E),
        (   E=yes ->
            '$delete_from_store_show_footer/0'(A)
        ;   true
        ),
        writeln('  \\layout {}').
'show_footer/0__0'(A) :- !,
        '$remove_constraint_internal_show_footer/0'(A, B),
        (   B=yes ->
            '$delete_from_store_show_footer/0'(A)
        ;   true
        ).
'show_footer/0__0'(A) :-
        '$activate_constraint_show_footer/0'(_, A).
show_voice_footers :-
        '$insert_constraint_internal_show_voice_footers/0'(A),
        '$insert_in_store_show_voice_footers/0'(A),
        arg(2, A, B),
        'chr update_mutable'(inactive, B),
        'show_voice_footers/0__0'(A).
'show_voice_footers/0__0'(A) :-
        nb_getval('$chr_store_global_ground_user:voice/1', B), !,
        'show_voice_footers/0__0__0'(B, A).
'show_voice_footers/0__0__0'([], A) :-
        'show_voice_footers/0__1'(A).
'show_voice_footers/0__0__0'([D|E], A) :-
        (   D=suspension(_,C,_,_,B),
            C=mutable(active),
            F=t(175,A,D),
            '$novel_production'(A, F),
            '$novel_production'(D, F) ->
            '$extend_history'(A, F),
            voice_footer(B),
            'show_voice_footers/0__0__0'(E, A)
        ;   'show_voice_footers/0__0__0'(E, A)
        ).
'show_voice_footers/0__0'(A) :-
        'show_voice_footers/0__1'(A).
'show_voice_footers/0__1'(A) :- !,
        '$remove_constraint_internal_show_voice_footers/0'(A, B),
        (   B=yes ->
            '$delete_from_store_show_voice_footers/0'(A)
        ;   true
        ).
'show_voice_footers/0__1'(A) :-
        '$activate_constraint_show_voice_footers/0'(_, A).
end_of_file.
(:-use_module(chr(chr_runtime))).
(:-use_module(chr(chr_hashtable_store))).
