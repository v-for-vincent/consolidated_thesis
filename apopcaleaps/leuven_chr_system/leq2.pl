/*  Generated by CHR bootstrap compiler
    From: leq2.chr
    Date: 8-5-2006 19:2:16

    DO NOT EDIT.  EDIT THE CHR FILE INSTEAD
*/

(:-module(leq,[main/0,main/1])).
(:-use_module(chr_runtime)).
(:-style_check('-'(discontiguous))).
(:-use_module(library(chr))).
main :-
        main(60).
main(A) :-
        cputime(B),
        length(C, A),
        genleq(C, D, E),
        geneq(E),
        C=[F|_],
        leq(D, F),
        writeln(C),
        cputime(G),
        H is G-B,
        write(bench(leq,A,H,0,bp_ar)),
        write('.'),
        nl.
genleq([A], A, []) :- !.
genleq([A,B|C], D, [(E,B)|F]) :-
        leq(A, E),
        genleq([B|C], D, F).
geneq([]) :- !.
geneq([(A,A)|B]) :-
        geneq(B).
cputime(A) :-
        A is cputime.
(:-use_module(chr(chr_runtime))).
(:-use_module(chr(chr_hashtable_store))).
'attach_leq/2'([], _).
'attach_leq/2'([A|B], C) :-
        (   get_attr(A, leq, D) ->
            E=[C|D],
            put_attr(A, leq, E)
        ;   put_attr(A, leq, [C])
        ),
        true,
        'attach_leq/2'(B, C).
'detach_leq/2'([], _).
'detach_leq/2'([A|B], C) :-
        (   get_attr(A, leq, D) ->
            'chr sbag_del_element'(D, C, E),
            (   E==[] ->
                del_attr(A, leq)
            ;   put_attr(A, leq, E)
            )
        ;   true
        ),
        'detach_leq/2'(B, C).
attach_increment([], _).
attach_increment([A|B], C) :-
        'chr not_locked'(A),
        (   get_attr(A, leq, D) ->
            sort(D, E),
            'chr merge_attributes'(C, E, F),
            put_attr(A, leq, F)
        ;   put_attr(A, leq, C)
        ),
        attach_increment(B, C).
attr_unify_hook(A, B) :-
        sort(A, D),
        (   var(B) ->
            (   get_attr(B, leq, E) ->
                true
            ;   E=[]
            ),
            sort(E, F),
            'chr merge_attributes'(D, F, C),
            put_attr(B, leq, C),
            '$run_suspensions'(C)
        ;   (   compound(B) ->
                term_variables(B, G),
                attach_increment(G, D)
            ;   true
            ),
            '$run_suspensions'(A)
        ).
'$activate_constraint_leq/2'(C, D, A, E) :-
        arg(2, A, B),
        'chr get_mutable'(H, B),
        'chr update_mutable'(active, B),
        arg(4, A, F),
        'chr get_mutable'(G, F),
        E is G+1,
        'chr update_mutable'(E, F),
        (   H==not_stored_yet ->
            C=yes,
            A=suspension(_,_,_,_,_,_,I,J),
            term_variables([I,J], D),
            'chr none_locked'(D)
        ;   D=[],
            C=no
        ).
'$remove_constraint_internal_leq/2'(suspension(_,C,_,_,_,_,E,F), A, B) :-
        'chr get_mutable'(D, C),
        'chr update_mutable'(removed, C),
        (   D==not_stored_yet ->
            A=[],
            B=no
        ;   B=yes,
            term_variables([E,F], A)
        ).
'$allocate_constraint_leq/2'(A, suspension(B,C,E,D,A,_,F,G), F, G) :-
        'chr create_mutable'(0, D),
        'chr create_mutable'(t, E),
        'chr create_mutable'(not_stored_yet, C),
        'chr gen_id'(B).
'$novel_production'(A, B) :-
        arg(3, A, C),
        'chr get_mutable'(D, C),
        (   hprolog:get_ds(B,D,_) ->
            fail
        ;   true
        ).
'$extend_history'(A, B) :-
        arg(3, A, C),
        'chr get_mutable'(D, C),
        hprolog:put_ds(B,D,x,E),
        'chr update_mutable'(E, C).
'$run_suspensions'([]).
'$run_suspensions'([A|B]) :-
        arg(2, A, C),
        'chr get_mutable'(D, C),
        (   D==active ->
            'chr update_mutable'(triggered, C),
            arg(4, A, E),
            'chr get_mutable'(F, E),
            G is F+1,
            'chr update_mutable'(G, E),
            arg(5, A, H),
            call(H),
            'chr get_mutable'(I, C),
            (   I==triggered ->
                'chr update_mutable'(active, C)
            ;   true
            )
        ;   true
        ),
        '$run_suspensions'(B).
'$insert_in_store_leq/2'(A) :-
        true,
        nb_getval('$chr_store_global_list_leq:leq/2', B),
        C=[A|B],
        b_setval('$chr_store_global_list_leq:leq/2', C),
        (   B=[D|_] ->
            setarg(6, D, C)
        ;   true
        ).
'$delete_from_store_leq/2'(A) :-
        true,
        arg(6, A, C),
        (   var(C) ->
            nb_getval('$chr_store_global_list_leq:leq/2', B),
            B=[_|D],
            b_setval('$chr_store_global_list_leq:leq/2', D),
            (   D=[E|_] ->
                setarg(6, E, _)
            ;   true
            )
        ;   C=[_,_|D],
            setarg(2, C, D),
            (   D=[E|_] ->
                setarg(6, E, C)
            ;   true
            )
        ).
'$enumerate_constraints'(A) :-
        nb_getval('$chr_store_global_list_leq:leq/2', C),
        'chr sbag_member'(B, C),
        B=suspension(_,_,_,_,_,_,D,E),
        A=..[leq,D,E].
'$leq__chr_initialization' :-
        nb_setval('$chr_store_global_list_leq:leq/2', []),
        true.
(:-'$leq__chr_initialization').
leq(A, B) :-
        'leq/2__0'(A, B, _).
'leq/2__0'(B, C, A) :-
        C==B, !,
        (   var(A) ->
            true
        ;   '$remove_constraint_internal_leq/2'(A, D, E),
            (   E==yes ->
                '$delete_from_store_leq/2'(A),
                'detach_leq/2'(D, A)
            ;   true
            )
        ).
'leq/2__0'(B, C, A) :-
        (   'chr newvia_2'(C, B, I) ->
            get_attr(I, leq, E)
        ;   nb_getval('$chr_store_global_list_leq:leq/2', E)
        ),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_,_,G,H),
        F=mutable(active),
        G==C,
        H==B, !,
        '$remove_constraint_internal_leq/2'(D, J, K),
        (   K==yes ->
            '$delete_from_store_leq/2'(D),
            'detach_leq/2'(J, D)
        ;   true
        ),
        (   var(A) ->
            true
        ;   '$remove_constraint_internal_leq/2'(A, L, M),
            (   M==yes ->
                '$delete_from_store_leq/2'(A),
                'detach_leq/2'(L, A)
            ;   true
            )
        ),
        B=C.
'leq/2__0'(B, C, A) :-
        (   'chr newvia_2'(B, C, I) ->
            get_attr(I, leq, E)
        ;   nb_getval('$chr_store_global_list_leq:leq/2', E)
        ),
        'chr sbag_member'(D, E),
        D=suspension(_,F,_,_,_,_,G,H),
        F=mutable(active),
        G==B,
        H==C, !,
        (   var(A) ->
            true
        ;   '$remove_constraint_internal_leq/2'(A, J, K),
            (   K==yes ->
                '$delete_from_store_leq/2'(A),
                'detach_leq/2'(J, A)
            ;   true
            )
        ).
'leq/2__0'(C, D, A) :-
        (   'chr newvia_1'(D, E) ->
            get_attr(E, leq, B)
        ;   nb_getval('$chr_store_global_list_leq:leq/2', B)
        ), !,
        (   var(A) ->
            '$allocate_constraint_leq/2'(leq:'leq/2__0'(C,D,A), A, C, D)
        ;   true
        ),
        'leq/2__0__0'(B, C, D, A).
'leq/2__0__0'([], B, C, A) :-
        'leq/2__1'(B, C, A).
'leq/2__0__0'([B|C], G, H, A) :-
        (   B=suspension(_,D,_,_,_,_,I,J),
            D=mutable(active),
            I==H,
            F=t(4,A,B),
            '$novel_production'(A, F),
            '$novel_production'(B, F) ->
            '$extend_history'(A, F),
            '$activate_constraint_leq/2'(L, K, A, E),
            (   L==yes ->
                '$insert_in_store_leq/2'(A),
                'attach_leq/2'(K, A)
            ;   true
            ),
            leq(G, J),
            (   A=suspension(_,M,_,N,_,_,_,_),
                M=mutable(active),
                N=mutable(E) ->
                'chr update_mutable'(inactive, M),
                'leq/2__0__0'(C, G, H, A)
            ;   true
            )
        ;   'leq/2__0__0'(C, G, H, A)
        ).
'leq/2__0'(B, C, A) :-
        (   var(A) ->
            '$allocate_constraint_leq/2'(leq:'leq/2__0'(B,C,A), A, B, C)
        ;   true
        ),
        'leq/2__1'(B, C, A).
'leq/2__1'(C, D, A) :-
        (   'chr newvia_1'(C, E) ->
            get_attr(E, leq, B)
        ;   nb_getval('$chr_store_global_list_leq:leq/2', B)
        ), !,
        'leq/2__1__0'(B, C, D, A).
'leq/2__1__0'([], B, C, A) :-
        'leq/2__2'(B, C, A).
'leq/2__1__0'([B|C], G, H, A) :-
        (   B=suspension(_,D,_,_,_,_,I,J),
            D=mutable(active),
            J==G,
            F=t(4,B,A),
            '$novel_production'(B, F),
            '$novel_production'(A, F) ->
            '$extend_history'(A, F),
            '$activate_constraint_leq/2'(L, K, A, E),
            (   L==yes ->
                '$insert_in_store_leq/2'(A),
                'attach_leq/2'(K, A)
            ;   true
            ),
            leq(I, H),
            (   A=suspension(_,M,_,N,_,_,_,_),
                M=mutable(active),
                N=mutable(E) ->
                'chr update_mutable'(inactive, M),
                'leq/2__1__0'(C, G, H, A)
            ;   true
            )
        ;   'leq/2__1__0'(C, G, H, A)
        ).
'leq/2__1'(B, C, A) :-
        'leq/2__2'(B, C, A).
'leq/2__2'(_, _, A) :-
        '$activate_constraint_leq/2'(C, B, A, _),
        (   C==yes ->
            '$insert_in_store_leq/2'(A),
            'attach_leq/2'(B, A)
        ;   true
        ).
:- multifile
        chr:'$chr_module'/1.
chr:'$chr_module'(leq).
end_of_file.
