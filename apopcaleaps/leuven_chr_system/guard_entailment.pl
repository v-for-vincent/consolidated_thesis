/*  Generated by CHR bootstrap compiler
    From: guard_entailment.chr
    Date: 16-4-2013 15:53:57

    DO NOT EDIT.  EDIT THE CHR FILE INSTEAD
*/

(:-module(guard_entailment,[entails_guard/2,simplify_guards/5])).
(:-use_module(chr_runtime)).
(:-use_module(chr_hashtable_store)).
(:-style_check(-(discontiguous))).
(:-use_module(chr_runtime)).
(:-use_module(chr_hashtable_store)).
(:-style_check(-(discontiguous))).
(:-include(chr_op)).
(:-use_module(library(lists),[append/3])).
(:-use_module(hprolog)).
(:-use_module(builtins)).
(:-use_module(chr_compiler_errors)).
entails_guard(A, B) :-
        copy_term_nat((A,B), (C,D)),
        term_variables(C, E),
        variables(E),
        sort(C, F),
        entails_guard2(F), !,
        test(D), !,
        cleanup.
entails_guard2([]).
entails_guard2([A|B]) :-
        known(A),
        entails_guard2(B).
simplify_guards(A, B, C, D, E) :-
        copy_term_nat((A,C), (F,G)),
        term_variables(F, H),
        variables(H),
        entails_guard2(F), !,
        simplify(G, I),
        simplified(C, I, D, B, E), !,
        cleanup.
simplified([], [], [], A, A).
simplified([A|B], [keep|C], [A|D], E, F) :-
        simplified(B, C, D, E, F).
simplified([_|_], [fail|_], fail, A, A).
simplified([A|B], [true|C], [D|E], F, G) :-
        builtins:binds_b(A,H),
        term_variables(B, I),
        intersect_eq(H, I, J), !,
        (   J= [] ->
            term_variables(F, K),
            intersect_eq(H, K, L), !,
            (   L= [] ->
                D=true,
                G=M
            ;   D=true,
                G=(A,M)
            )
        ;   D=A,
            G=M
        ),
        simplified(B, C, E, F, M).
simplify([], []).
simplify([A|B], [C|D]) :-
        (   \+try(true,A) ->
            C=true
        ;   builtins:negate_b(A,E),
            (   \+try(true,E) ->
                C=fail
            ;   C=keep
            )
        ),
        known(A),
        simplify(B, D).
try(A, B) :-
        (   known(A) ->
            true
        ;   chr_error(internal, 'Entailment Checker: try/2.\n', [])
        ),
        (   test(B) ->
            fail
        ;   true
        ).
add_args_unif([], [], true).
add_args_unif([A|B], [C|D], (A=C,E)) :-
        add_args_unif(B, D, E).
add_args_nunif([], [], fail).
add_args_nunif([A|B], [C|D], (A\=C ;  E)) :-
        add_args_nunif(B, D, E).
add_args_nmatch([], [], fail).
add_args_nmatch([A|B], [C|D], (A\==C ;  E)) :-
        add_args_nmatch(B, D, E).
all_unique_vars(A, B) :-
        all_unique_vars(A, B, []).
all_unique_vars([], _, _).
all_unique_vars([A|B], C, D) :-
        var(A),
        \+memberchk_eq(A,C),
        \+memberchk_eq(A,D),
        all_unique_vars(B, [A|D]).
'attach_known/1'([], _).
'attach_known/1'([A|B], C) :-
        (   get_attr(A, guard_entailment, H) ->
            H=v(F,D,E),
            (   F/\1=:=1 ->
                put_attr(A, guard_entailment, v(F,[C|D],E))
            ;   G is F\/1,
                put_attr(A, guard_entailment, v(G,[C],E))
            )
        ;   put_attr(A, guard_entailment, v(1,[C],[C]))
        ),
        'attach_known/1'(B, C).
'detach_known/1'([], _).
'detach_known/1'([A|B], C) :-
        (   get_attr(A, guard_entailment, I) ->
            I=v(F,D,E),
            (   F/\1=:=1 ->
                'chr sbag_del_element'(D, C, H),
                (   H== [] ->
                    G is F/\ -2,
                    (   G==0 ->
                        del_attr(A, guard_entailment)
                    ;   put_attr(A, guard_entailment, v(G,[],E))
                    )
                ;   put_attr(A, guard_entailment, v(F,H,E))
                )
            ;   true
            )
        ;   true
        ),
        'detach_known/1'(B, C).
'attach_variables/1'([], _).
'attach_variables/1'([A|B], C) :-
        (   get_attr(A, guard_entailment, H) ->
            H=v(F,D,E),
            (   F/\2=:=2 ->
                put_attr(A, guard_entailment, v(F,D,[C|E]))
            ;   G is F\/2,
                put_attr(A, guard_entailment, v(G,D,[C]))
            )
        ;   put_attr(A, guard_entailment, v(2,[C],[C]))
        ),
        'attach_variables/1'(B, C).
'detach_variables/1'([], _).
'detach_variables/1'([A|B], C) :-
        (   get_attr(A, guard_entailment, I) ->
            I=v(F,D,E),
            (   F/\2=:=2 ->
                'chr sbag_del_element'(E, C, H),
                (   H== [] ->
                    G is F/\ -3,
                    (   G==0 ->
                        del_attr(A, guard_entailment)
                    ;   put_attr(A, guard_entailment, v(G,D,[]))
                    )
                ;   put_attr(A, guard_entailment, v(F,D,H))
                )
            ;   true
            )
        ;   true
        ),
        'detach_variables/1'(B, C).
'$guard_entailment__indexed_variables'(B, A) :-
        B=known(_),
        term_variables(B, A).
'$guard_entailment__indexed_variables'(B, A) :-
        B=variables(_),
        term_variables(B, A).
attach_increment([], _).
attach_increment([G|H], v(C,A,B)) :-
        'chr not_locked'(G),
        (   get_attr(G, guard_entailment, N) ->
            N=v(F,D,E),
            sort(D, K),
            'chr merge_attributes'(A, K, L),
            sort(E, I),
            'chr merge_attributes'(B, I, J),
            M is C\/F,
            put_attr(G, guard_entailment, v(M,L,J))
        ;   put_attr(G, guard_entailment, v(C,A,B))
        ),
        attach_increment(H, v(C,A,B)).
attr_unify_hook(v(C,A,B), N) :-
        sort(A, H),
        sort(B, G),
        (   var(N) ->
            (   get_attr(N, guard_entailment, O) ->
                O=v(F,D,E),
                sort(D, K),
                'chr merge_attributes'(H, K, L),
                sort(E, I),
                'chr merge_attributes'(G, I, J),
                M is C\/F,
                put_attr(N, guard_entailment, v(M,L,J)),
                'chr run_suspensions_loop'([L,J])
            ;   put_attr(N, guard_entailment, v(C,H,G)),
                'chr run_suspensions_loop'([H,G])
            )
        ;   (   compound(N) ->
                term_variables(N, P),
                attach_increment(P, v(C,H,G))
            ;   true
            ),
            'chr run_suspensions_loop'([H,G])
        ).
'$guard_entailment__remove_constraint_internal'(A, B, C) :-
        arg(2, A, D),
        'chr get_mutable'(E, D),
        'chr update_mutable'(removed, D),
        (   compound(E) ->
            B= [],
            C=no
        ;   E==removed ->
            B= [],
            C=no
        ;   C=yes,
            '$guard_entailment__chr_indexed_variables'(A, B)
        ).
'$guard_entailment__activate_constraint'(A, B, C, D) :-
        arg(2, C, E),
        'chr get_mutable'(F, E),
        'chr update_mutable'(active, E),
        (   nonvar(D) ->
            true
        ;   arg(4, C, G),
            'chr get_mutable'(H, G),
            D is H+1,
            'chr update_mutable'(D, G)
        ),
        (   compound(F) ->
            term_variables(F, B),
            'chr none_locked'(B),
            A=yes
        ;   F==removed ->
            '$guard_entailment__chr_indexed_variables'(C, B),
            A=yes
        ;   B= [],
            A=no
        ).
'$guard_entailment__allocate_constraint'(A, B, C, D) :-
        B=..[suspension,F,G,A,H,I,C|D],
        'chr create_mutable'(0, H),
        'chr empty_history'(J),
        'chr create_mutable'(J, I),
        '$guard_entailment__chr_indexed_variables'(B, E),
        'chr create_mutable'(passive(E), G),
        'chr gen_id'(F).
'$guard_entailment__chr_indexed_variables'(C, B) :-
        C=..[_,_,_,_,_,_,A|_],
        '$guard_entailment__indexed_variables'(A, B).
'$guard_entailment__insert_constraint_internal'(yes, A, B, C, D, E) :-
        B=..[suspension,F,G,C,H,I,D|E],
        '$guard_entailment__chr_indexed_variables'(B, A),
        'chr none_locked'(A),
        'chr create_mutable'(active, G),
        'chr create_mutable'(0, H),
        'chr empty_history'(J),
        'chr create_mutable'(J, I),
        'chr gen_id'(F).
'$insert_in_store_known/1'(A) :-
        'chr default_store'(F),
        (   get_attr(F, guard_entailment, G) ->
            G=v(D,B,C),
            (   D/\1=:=1 ->
                put_attr(F, guard_entailment, v(D,[A|B],C))
            ;   E is D\/1,
                put_attr(F, guard_entailment, v(E,[A],C))
            )
        ;   put_attr(F, guard_entailment, v(1,[A],[A]))
        ).
'$delete_from_store_known/1'(A) :-
        'chr default_store'(G),
        (   get_attr(G, guard_entailment, H) ->
            H=v(D,B,C),
            (   D/\1=:=1 ->
                'chr sbag_del_element'(B, A, F),
                (   F== [] ->
                    E is D/\ -2,
                    (   E==0 ->
                        del_attr(G, guard_entailment)
                    ;   put_attr(G, guard_entailment, v(E,[],C))
                    )
                ;   put_attr(G, guard_entailment, v(D,F,C))
                )
            ;   true
            )
        ;   true
        ).
'$insert_in_store_variables/1'(A) :-
        'chr default_store'(F),
        (   get_attr(F, guard_entailment, G) ->
            G=v(D,B,C),
            (   D/\2=:=2 ->
                put_attr(F, guard_entailment, v(D,B,[A|C]))
            ;   E is D\/2,
                put_attr(F, guard_entailment, v(E,B,[A]))
            )
        ;   put_attr(F, guard_entailment, v(2,[A],[A]))
        ).
'$delete_from_store_variables/1'(A) :-
        'chr default_store'(G),
        (   get_attr(G, guard_entailment, H) ->
            H=v(D,B,C),
            (   D/\2=:=2 ->
                'chr sbag_del_element'(C, A, F),
                (   F== [] ->
                    E is D/\ -3,
                    (   E==0 ->
                        del_attr(G, guard_entailment)
                    ;   put_attr(G, guard_entailment, v(E,B,[]))
                    )
                ;   put_attr(G, guard_entailment, v(D,B,F))
                )
            ;   true
            )
        ;   true
        ).
'$enumerate_suspensions'(A) :-
        (   'chr default_store'(B),
            get_attr(B, guard_entailment, C),
            arg(2, C, D),
            'chr sbag_member'(A, D)
        ;   'chr default_store'(E),
            get_attr(E, guard_entailment, F),
            arg(3, F, G),
            'chr sbag_member'(A, G)
        ).
known(A) :-
        'known/1__0'(A, _).
'known/1__0'(A, B) :-
        'chr via_1'(A, D),
        get_attr(D, guard_entailment, E),
        E=v(G,F,_),
        G/\1=:=1,
        (   'chr sbag_member'(C, F),
            C=suspension(_,I,_,_,_,_,H),
            I=mutable(active),
            H==A ->
            true
        ), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, J, K),
            (   K==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(J, B)
            ;   true
            )
        ).
'known/1__0'(A, B) :-
        nonvar(A),
        A=(C>D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(D<C).
'known/1__0'(A, B) :-
        nonvar(A),
        A=(C>=D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(D=<C).
'known/1__0'(A, B) :-
        nonvar(A),
        A=(C<D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(C=<D),
        known(C=\=D).
'known/1__0'(A, B) :-
        nonvar(A),
        A=(C is D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(C=:=D).
'known/1__0'(A, B) :-
        nonvar(A),
        A=(C==D),
        (   var(B) ->
            '$guard_entailment__allocate_constraint'(guard_entailment:'known/1__0'(A,B), B, known(A), [A])
        ;   true
        ),
        'chr novel_production'(B, 21),
        number(C), !,
        'chr extend_history'(B, 21),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(C=:=D),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__1'(A, B)
        ;   true
        ).
'known/1__0'(A, B) :-
        (   var(B) ->
            '$guard_entailment__allocate_constraint'(guard_entailment:'known/1__0'(A,B), B, known(A), [A])
        ;   true
        ),
        'known/1__1'(A, B).
'known/1__1'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr novel_production'(B, 22),
        number(D), !,
        'chr extend_history'(B, 22),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(C=:=D),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__2'(A, B)
        ;   true
        ).
'known/1__1'(A, B) :-
        'known/1__2'(A, B).
'known/1__2'(A, B) :-
        nonvar(A),
        A=(C\==D),
        'chr novel_production'(B, 23),
        number(C), !,
        'chr extend_history'(B, 23),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(C=\=D),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__3'(A, B)
        ;   true
        ).
'known/1__2'(A, B) :-
        'known/1__3'(A, B).
'known/1__3'(A, B) :-
        nonvar(A),
        A=(C\==D),
        'chr novel_production'(B, 24),
        number(D), !,
        'chr extend_history'(B, 24),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(C=\=D),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__4'(A, B)
        ;   true
        ).
'known/1__3'(A, B) :-
        'known/1__4'(A, B).
'known/1__4'(_, A) :-
        'chr default_store'(D),
        get_attr(D, guard_entailment, C),
        C=v(F,E,_),
        F/\1=:=1,
        (   'chr sbag_member'(B, E),
            B=suspension(_,H,_,_,_,_,G),
            H=mutable(active),
            G==fail ->
            true
        ), !,
        (   var(A) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(A, I, J),
            (   J==yes ->
                '$delete_from_store_known/1'(A),
                'detach_known/1'(I, A)
            ;   true
            )
        ).
'known/1__4'(A, B) :-
        A==fail,
        'chr default_store'(D),
        get_attr(D, guard_entailment, C),
        C=v(F,E,_),
        F/\1=:=1, !,
        'known/1__4__0'(E, A, B).
'known/1__4__0'([], A, B) :-
        'known/1__5'(A, B).
'known/1__4__0'([C|D], A, B) :-
        (   C=suspension(_,E,_,_,_,_,_),
            E=mutable(active) ->
            '$guard_entailment__remove_constraint_internal'(C, F, G),
            (   G==yes ->
                '$delete_from_store_known/1'(C),
                'detach_known/1'(F, C)
            ;   true
            ),
            'known/1__4__0'(D, A, B)
        ;   'known/1__4__0'(D, A, B)
        ).
'known/1__4'(A, B) :-
        'known/1__5'(A, B).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C,D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(C),
        known(D).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C==D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=<D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=D),
        var(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        C=D.
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=D),
        var(D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        C=D.
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C\=D),
        ground(D),
        ground(C),
        'chr lock'(C),
        'chr lock'(D),
        C=D,
        'chr unlock'(C),
        'chr unlock'(D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=functor(C,D,E),
        ground(E),
        ground(D),
        var(C),
        'chr default_store'(H),
        get_attr(H, guard_entailment, G),
        G=v(J,_,I),
        J/\2=:=2,
        'chr sbag_member'(F, I),
        F=suspension(_,L,_,_,_,_,K),
        L=mutable(active), !,
        '$guard_entailment__remove_constraint_internal'(F, O, P),
        (   P==yes ->
            '$delete_from_store_variables/1'(F),
            'detach_variables/1'(O, F)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, Q, R),
            (   R==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(Q, B)
            ;   true
            )
        ),
        functor(C, D, E),
        C=..[_|M],
        append(M, K, N),
        variables(N).
'known/1__5'(A, B) :-
        nonvar(A),
        A=functor(C,D,E),
        nonvar(C),
        'chr lock'(C),
        'chr lock'(D),
        'chr lock'(E),
        \+functor(C,D,E),
        'chr unlock'(C),
        'chr unlock'(D),
        'chr unlock'(E), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, F, G),
            (   G==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(F, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(\+C),
        nonvar(C),
        C=functor(D,E,F),
        nonvar(D),
        'chr lock'(D),
        'chr lock'(E),
        'chr lock'(F),
        functor(D, E, F),
        'chr unlock'(D),
        'chr unlock'(E),
        'chr unlock'(F), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, G, H),
            (   H==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(G, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=functor(C,D,E),
        nonvar(E),
        nonvar(D),
        'chr via_1'(C, G),
        get_attr(G, guard_entailment, H),
        H=v(J,I,_),
        J/\1=:=1,
        'chr sbag_member'(F, I),
        F=suspension(_,O,_,_,_,_,K),
        O=mutable(active),
        nonvar(K),
        K=functor(L,M,N),
        L==C,
        nonvar(N),
        nonvar(M), !,
        '$guard_entailment__remove_constraint_internal'(F, P, Q),
        (   Q==yes ->
            '$delete_from_store_known/1'(F),
            'detach_known/1'(P, F)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, R, S),
            (   S==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(R, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=functor(C,D,E),
        nonvar(E),
        nonvar(D),
        'chr via_1'(C, G),
        get_attr(G, guard_entailment, H),
        H=v(J,I,_),
        J/\1=:=1,
        'chr sbag_member'(F, I),
        F=suspension(_,O,_,_,_,_,K),
        O=mutable(active),
        nonvar(K),
        K=functor(L,M,N),
        L==C,
        nonvar(N),
        nonvar(M), !,
        '$guard_entailment__remove_constraint_internal'(F, P, Q),
        (   Q==yes ->
            '$delete_from_store_known/1'(F),
            'detach_known/1'(P, F)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, R, S),
            (   S==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(R, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C\=D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C=D),
        nonvar(D),
        nonvar(C),
        'chr lock'(C),
        functor(C, E, F),
        'chr unlock'(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, G, H),
            (   H==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(G, B)
            ;   true
            )
        ),
        (   functor(D, E, F),
            C=D ->
            true
        ;   known(fail)
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C\=D),
        nonvar(D),
        var(C),
        'chr lock'(D),
        functor(D, E, F),
        F>0,
        'chr unlock'(D), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, L, M),
            (   M==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(L, B)
            ;   true
            )
        ),
        length(G, F),
        D=..[E|H],
        I=..[E|G],
        add_args_nunif(H, G, J),
        K=(\+functor(C,E,F) ;  C=I,J),
        known(K).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C\=D),
        nonvar(D),
        nonvar(C),
        'chr lock'(C),
        functor(C, E, F),
        'chr unlock'(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, J, K),
            (   K==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(J, B)
            ;   true
            )
        ),
        (   functor(D, E, F) ->
            C=..[E|G],
            D=..[E|H],
            add_args_nunif(G, H, I),
            known(I)
        ;   true
        ).
'known/1__5'(A, B) :-
        nonvar(A),
        A=(C\=D),
        'chr novel_production'(B, 42), !,
        'chr extend_history'(B, 42),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(D\=C),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__6'(A, B)
        ;   true
        ).
'known/1__5'(A, B) :-
        'known/1__6'(A, B).
'known/1__6'(A, B) :-
        nonvar(A),
        A=(C=<D),
        number(D),
        number(C),
        C>D, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__6'(A, B) :-
        nonvar(A),
        A=(C=<D),
        number(D),
        'chr via_1'(C, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        'chr sbag_member'(E, H),
        E=suspension(_,M,_,_,_,_,J),
        M=mutable(active),
        nonvar(J),
        J=(K=<L),
        K==C,
        number(L),
        L=<D, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ).
'known/1__6'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__6__0'(G, A, B, C, D).
'known/1__6__0'([], A, B, _, _) :-
        'known/1__7'(A, B).
'known/1__6__0'([E|F], A, B, C, D) :-
        (   E=suspension(_,J,_,_,_,_,G),
            J=mutable(active),
            nonvar(G),
            G=(H=<I),
            H==C,
            number(I),
            number(D),
            D=<I ->
            '$guard_entailment__remove_constraint_internal'(E, K, L),
            (   L==yes ->
                '$delete_from_store_known/1'(E),
                'detach_known/1'(K, E)
            ;   true
            ),
            'known/1__6__0'(F, A, B, C, D)
        ;   'known/1__6__0'(F, A, B, C, D)
        ).
'known/1__6'(A, B) :-
        'known/1__7'(A, B).
'known/1__7'(A, B) :-
        nonvar(A),
        A=(C=<D),
        number(C),
        'chr via_1'(D, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        'chr sbag_member'(E, H),
        E=suspension(_,M,_,_,_,_,J),
        M=mutable(active),
        nonvar(J),
        J=(K=<L),
        L==D,
        number(K),
        C=<K, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ).
'known/1__7'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__7__0'(G, A, B, C, D).
'known/1__7__0'([], A, B, _, _) :-
        'known/1__8'(A, B).
'known/1__7__0'([E|F], A, B, C, D) :-
        (   E=suspension(_,J,_,_,_,_,G),
            J=mutable(active),
            nonvar(G),
            G=(H=<I),
            I==D,
            number(C),
            number(H),
            H=<C ->
            '$guard_entailment__remove_constraint_internal'(E, K, L),
            (   L==yes ->
                '$delete_from_store_known/1'(E),
                'detach_known/1'(K, E)
            ;   true
            ),
            'known/1__7__0'(F, A, B, C, D)
        ;   'known/1__7__0'(F, A, B, C, D)
        ).
'known/1__7'(A, B) :-
        'known/1__8'(A, B).
'known/1__8'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_2'(D, C, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K=<L),
            K==D,
            L==C ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(C=:=D).
'known/1__8'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_2'(D, C, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K=<L),
            K==D,
            L==C ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(D=:=C).
'known/1__8'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__8__0'(G, A, B, C, D).
'known/1__8__0'([], A, B, _, _) :-
        'known/1__9'(A, B).
'known/1__8__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I=<J),
            I==D,
            P=t(47,B,G),
            'chr novel_production'(B, P),
            'chr novel_production'(G, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(C=<J),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__8__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__8__0'(H, A, B, C, D)
        ).
'known/1__8'(A, B) :-
        'known/1__9'(A, B).
'known/1__9'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__9__0'(G, A, B, C, D).
'known/1__9__0'([], A, B, _, _) :-
        'known/1__10'(A, B).
'known/1__9__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I=<J),
            J==C,
            P=t(47,G,B),
            'chr novel_production'(G, P),
            'chr novel_production'(B, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(I=<D),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__9__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__9__0'(H, A, B, C, D)
        ).
'known/1__9'(A, B) :-
        'known/1__10'(A, B).
'known/1__10'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__10__0'(G, A, B, C, D).
'known/1__10__0'([], A, B, _, _) :-
        'known/1__11'(A, B).
'known/1__10__0'([F|N], A, B, C, D) :-
        (   F=suspension(_,I,_,_,_,_,E),
            I=mutable(active),
            nonvar(E),
            E=(G=<H),
            G==D,
            'chr via_2'(D, H, J),
            get_attr(J, guard_entailment, K),
            K=v(M,L,_),
            M/\1=:=1 ->
            'known/1__10__1'(L, H, F, N, A, B, C, D)
        ;   'known/1__10__0'(N, A, B, C, D)
        ).
'known/1__10__1'([], _, _, E, A, B, C, D) :-
        'known/1__10__0'(E, A, B, C, D).
'known/1__10__1'([I|Q], F, A, G, B, C, D, E) :-
        (   I=suspension(_,L,_,_,_,_,H),
            L=mutable(active),
            nonvar(H),
            H=(J=\=K),
            J==E,
            K==F,
            'chr via_2'(D, E, M),
            get_attr(M, guard_entailment, N),
            N=v(P,O,_),
            P/\1=:=1 ->
            'known/1__10__2'(O, I, Q, F, A, G, B, C, D, E)
        ;   'known/1__10__1'(Q, F, A, G, B, C, D, E)
        ).
'known/1__10__2'([], _, H, F, E, G, A, B, C, D) :-
        'known/1__10__1'(H, F, E, G, A, B, C, D).
'known/1__10__2'([L|M], A, I, G, B, H, C, D, E, F) :-
        (   L=suspension(_,K,_,_,_,_,J),
            K=mutable(active),
            L\==A,
            nonvar(J),
            J=(N=\=O),
            N==E,
            O==F,
            U=t(48,D,B,A,L),
            'chr novel_production'(D, U),
            'chr novel_production'(B, U),
            'chr novel_production'(A, U),
            'chr novel_production'(L, U) ->
            'chr extend_history'(D, U),
            '$guard_entailment__activate_constraint'(Q, P, D, R),
            (   Q==yes ->
                '$insert_in_store_known/1'(D),
                'attach_known/1'(P, D)
            ;   true
            ),
            known(E=\=G),
            (   D=suspension(_,S,_,T,_,_,_),
                S=mutable(active),
                T=mutable(R) ->
                'chr update_mutable'(inactive, S),
                'known/1__10__2'(M, A, I, G, B, H, C, D, E, F)
            ;   true
            )
        ;   'known/1__10__2'(M, A, I, G, B, H, C, D, E, F)
        ).
'known/1__10'(A, B) :-
        'known/1__11'(A, B).
'known/1__11'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__11__0'(G, A, B, C, D).
'known/1__11__0'([], A, B, _, _) :-
        'known/1__12'(A, B).
'known/1__11__0'([F|N], A, B, C, D) :-
        (   F=suspension(_,I,_,_,_,_,E),
            I=mutable(active),
            nonvar(E),
            E=(G=\=H),
            G==D,
            'chr via_2'(C, D, J),
            get_attr(J, guard_entailment, K),
            K=v(M,L,_),
            M/\1=:=1 ->
            'known/1__11__1'(L, H, F, N, A, B, C, D)
        ;   'known/1__11__0'(N, A, B, C, D)
        ).
'known/1__11__1'([], _, _, E, A, B, C, D) :-
        'known/1__11__0'(E, A, B, C, D).
'known/1__11__1'([I|Q], F, A, G, B, C, D, E) :-
        (   I=suspension(_,L,_,_,_,_,H),
            L=mutable(active),
            nonvar(H),
            H=(J=<K),
            J==D,
            K==E,
            'chr via_2'(E, F, M),
            get_attr(M, guard_entailment, N),
            N=v(P,O,_),
            P/\1=:=1 ->
            'known/1__11__2'(O, I, Q, F, A, G, B, C, D, E)
        ;   'known/1__11__1'(Q, F, A, G, B, C, D, E)
        ).
'known/1__11__2'([], _, H, F, E, G, A, B, C, D) :-
        'known/1__11__1'(H, F, E, G, A, B, C, D).
'known/1__11__2'([L|M], A, I, G, B, H, C, D, E, F) :-
        (   L=suspension(_,K,_,_,_,_,J),
            K=mutable(active),
            L\==A,
            nonvar(J),
            J=(N=<O),
            N==F,
            O==G,
            U=t(48,B,D,A,L),
            'chr novel_production'(B, U),
            'chr novel_production'(D, U),
            'chr novel_production'(A, U),
            'chr novel_production'(L, U) ->
            'chr extend_history'(D, U),
            '$guard_entailment__activate_constraint'(Q, P, D, R),
            (   Q==yes ->
                '$insert_in_store_known/1'(D),
                'attach_known/1'(P, D)
            ;   true
            ),
            known(E=\=G),
            (   D=suspension(_,S,_,T,_,_,_),
                S=mutable(active),
                T=mutable(R) ->
                'chr update_mutable'(inactive, S),
                'known/1__11__2'(M, A, I, G, B, H, C, D, E, F)
            ;   true
            )
        ;   'known/1__11__2'(M, A, I, G, B, H, C, D, E, F)
        ).
'known/1__11'(A, B) :-
        'known/1__12'(A, B).
'known/1__12'(A, B) :-
        nonvar(A),
        A=(C=<D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__12__0'(G, A, B, C, D).
'known/1__12__0'([], A, B, _, _) :-
        'known/1__13'(A, B).
'known/1__12__0'([F|N], A, B, C, D) :-
        (   F=suspension(_,I,_,_,_,_,E),
            I=mutable(active),
            nonvar(E),
            E=(G=\=H),
            H==C,
            'chr via_2'(G, C, J),
            get_attr(J, guard_entailment, K),
            K=v(M,L,_),
            M/\1=:=1 ->
            'known/1__12__1'(L, G, F, N, A, B, C, D)
        ;   'known/1__12__0'(N, A, B, C, D)
        ).
'known/1__12__1'([], _, _, E, A, B, C, D) :-
        'known/1__12__0'(E, A, B, C, D).
'known/1__12__1'([I|Q], F, A, G, B, C, D, E) :-
        (   I=suspension(_,L,_,_,_,_,H),
            L=mutable(active),
            nonvar(H),
            H=(J=<K),
            J==F,
            K==D,
            'chr via_2'(D, E, M),
            get_attr(M, guard_entailment, N),
            N=v(P,O,_),
            P/\1=:=1 ->
            'known/1__12__2'(O, I, Q, F, A, G, B, C, D, E)
        ;   'known/1__12__1'(Q, F, A, G, B, C, D, E)
        ).
'known/1__12__2'([], _, H, F, E, G, A, B, C, D) :-
        'known/1__12__1'(H, F, E, G, A, B, C, D).
'known/1__12__2'([L|M], A, I, G, B, H, C, D, E, F) :-
        (   L=suspension(_,K,_,_,_,_,J),
            K=mutable(active),
            L\==B,
            nonvar(J),
            J=(N=\=O),
            N==E,
            O==F,
            U=t(48,B,A,D,L),
            'chr novel_production'(B, U),
            'chr novel_production'(A, U),
            'chr novel_production'(D, U),
            'chr novel_production'(L, U) ->
            'chr extend_history'(D, U),
            '$guard_entailment__activate_constraint'(Q, P, D, R),
            (   Q==yes ->
                '$insert_in_store_known/1'(D),
                'attach_known/1'(P, D)
            ;   true
            ),
            known(G=\=F),
            (   D=suspension(_,S,_,T,_,_,_),
                S=mutable(active),
                T=mutable(R) ->
                'chr update_mutable'(inactive, S),
                'known/1__12__2'(M, A, I, G, B, H, C, D, E, F)
            ;   true
            )
        ;   'known/1__12__2'(M, A, I, G, B, H, C, D, E, F)
        ).
'known/1__12'(A, B) :-
        'known/1__13'(A, B).
'known/1__13'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__13__0'(G, A, B, C, D).
'known/1__13__0'([], A, B, _, _) :-
        'known/1__14'(A, B).
'known/1__13__0'([F|N], A, B, C, D) :-
        (   F=suspension(_,I,_,_,_,_,E),
            I=mutable(active),
            nonvar(E),
            E=(G=\=H),
            H==C,
            'chr via_2'(G, C, J),
            get_attr(J, guard_entailment, K),
            K=v(M,L,_),
            M/\1=:=1 ->
            'known/1__13__1'(L, G, F, N, A, B, C, D)
        ;   'known/1__13__0'(N, A, B, C, D)
        ).
'known/1__13__1'([], _, _, E, A, B, C, D) :-
        'known/1__13__0'(E, A, B, C, D).
'known/1__13__1'([I|Q], F, A, G, B, C, D, E) :-
        (   I=suspension(_,L,_,_,_,_,H),
            L=mutable(active),
            nonvar(H),
            H=(J=<K),
            J==F,
            K==D,
            'chr via_2'(D, E, M),
            get_attr(M, guard_entailment, N),
            N=v(P,O,_),
            P/\1=:=1 ->
            'known/1__13__2'(O, I, Q, F, A, G, B, C, D, E)
        ;   'known/1__13__1'(Q, F, A, G, B, C, D, E)
        ).
'known/1__13__2'([], _, H, F, E, G, A, B, C, D) :-
        'known/1__13__1'(H, F, E, G, A, B, C, D).
'known/1__13__2'([L|M], A, I, G, B, H, C, D, E, F) :-
        (   L=suspension(_,K,_,_,_,_,J),
            K=mutable(active),
            L\==A,
            nonvar(J),
            J=(N=<O),
            N==E,
            O==F,
            U=t(48,B,A,L,D),
            'chr novel_production'(B, U),
            'chr novel_production'(A, U),
            'chr novel_production'(L, U),
            'chr novel_production'(D, U) ->
            'chr extend_history'(D, U),
            '$guard_entailment__activate_constraint'(Q, P, D, R),
            (   Q==yes ->
                '$insert_in_store_known/1'(D),
                'attach_known/1'(P, D)
            ;   true
            ),
            known(G=\=F),
            (   D=suspension(_,S,_,T,_,_,_),
                S=mutable(active),
                T=mutable(R) ->
                'chr update_mutable'(inactive, S),
                'known/1__13__2'(M, A, I, G, B, H, C, D, E, F)
            ;   true
            )
        ;   'known/1__13__2'(M, A, I, G, B, H, C, D, E, F)
        ).
'known/1__13'(A, B) :-
        'known/1__14'(A, B).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        number(D),
        number(C),
        C=\=D, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        number(D),
        number(C),
        C=:=D, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        D==C, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(fail).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        'chr via_2'(C, D, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K=\=L),
            K==C,
            L==D ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(fail).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        'chr via_2'(C, D, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K=:=L),
            K==C,
            L==D ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(fail).
'known/1__14'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__14__0'(G, A, B, C, D).
'known/1__14__0'([], A, B, _, _) :-
        'known/1__15'(A, B).
'known/1__14__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I=:=J),
            I==D,
            P=t(53,B,G),
            'chr novel_production'(B, P),
            'chr novel_production'(G, P),
            C\==J ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(C=:=J),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__14__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__14__0'(H, A, B, C, D)
        ).
'known/1__14'(A, B) :-
        'known/1__15'(A, B).
'known/1__15'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__15__0'(G, A, B, C, D).
'known/1__15__0'([], A, B, _, _) :-
        'known/1__16'(A, B).
'known/1__15__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I=:=J),
            J==C,
            P=t(53,G,B),
            'chr novel_production'(G, P),
            'chr novel_production'(B, P),
            I\==D ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(I=:=D),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__15__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__15__0'(H, A, B, C, D)
        ).
'known/1__15'(A, B) :-
        'known/1__16'(A, B).
'known/1__16'(A, B) :-
        nonvar(A),
        A=(C=:=D),
        'chr novel_production'(B, 54), !,
        'chr extend_history'(B, 54),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(D=:=C),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__17'(A, B)
        ;   true
        ).
'known/1__16'(A, B) :-
        'known/1__17'(A, B).
'known/1__17'(A, B) :-
        nonvar(A),
        A=(C=\=D),
        'chr novel_production'(B, 55), !,
        'chr extend_history'(B, 55),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(D=\=C),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__18'(A, B)
        ;   true
        ).
'known/1__17'(A, B) :-
        'known/1__18'(A, B).
'known/1__18'(A, B) :-
        nonvar(A),
        A=number(C),
        nonvar(C),
        \+number(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, D, E),
            (   E==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(D, B)
            ;   true
            )
        ),
        known(fail).
'known/1__18'(A, B) :-
        nonvar(A),
        A=float(C),
        nonvar(C),
        \+float(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, D, E),
            (   E==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(D, B)
            ;   true
            )
        ),
        known(fail).
'known/1__18'(A, B) :-
        nonvar(A),
        A=integer(C),
        nonvar(C),
        \+integer(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, D, E),
            (   E==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(D, B)
            ;   true
            )
        ),
        known(fail).
'known/1__18'(A, B) :-
        nonvar(A),
        A=integer(C),
        'chr novel_production'(B, 59), !,
        'chr extend_history'(B, 59),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(number(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__19'(A, B)
        ;   true
        ).
'known/1__18'(A, B) :-
        'known/1__19'(A, B).
'known/1__19'(A, B) :-
        nonvar(A),
        A=float(C),
        'chr novel_production'(B, 60), !,
        'chr extend_history'(B, 60),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(number(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__20'(A, B)
        ;   true
        ).
'known/1__19'(A, B) :-
        'known/1__20'(A, B).
'known/1__20'(A, B) :-
        'chr via_1'(A, D),
        get_attr(D, guard_entailment, E),
        E=v(G,F,_),
        G/\1=:=1,
        (   'chr sbag_member'(C, F),
            C=suspension(_,J,_,_,_,_,H),
            J=mutable(active),
            nonvar(H),
            H=(\+I),
            I==A ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(C, K, L),
        (   L==yes ->
            '$delete_from_store_known/1'(C),
            'detach_known/1'(K, C)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, M, N),
            (   N==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(M, B)
            ;   true
            )
        ),
        known(fail).
'known/1__20'(A, B) :-
        nonvar(A),
        A=(\+C),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        (   'chr sbag_member'(D, G),
            D=suspension(_,J,_,_,_,_,I),
            J=mutable(active),
            I==C ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(D, K, L),
        (   L==yes ->
            '$delete_from_store_known/1'(D),
            'detach_known/1'(K, D)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, M, N),
            (   N==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(M, B)
            ;   true
            )
        ),
        known(fail).
'known/1__20'(A, B) :-
        nonvar(A),
        A=(C\==D),
        'chr via_2'(C, D, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K==L),
            K==C,
            L==D ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(fail).
'known/1__20'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr via_2'(C, D, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,M,_,_,_,_,J),
            M=mutable(active),
            nonvar(J),
            J=(K\==L),
            K==C,
            L==D ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(E, N, O),
        (   O==yes ->
            '$delete_from_store_known/1'(E),
            'detach_known/1'(N, E)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, P, Q),
            (   Q==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(P, B)
            ;   true
            )
        ),
        known(fail).
'known/1__20'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__20__0'(G, A, B, C, D).
'known/1__20__0'([], A, B, _, _) :-
        'known/1__21'(A, B).
'known/1__20__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I==J),
            I==D,
            P=t(63,B,G),
            'chr novel_production'(B, P),
            'chr novel_production'(G, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(C==J),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__20__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__20__0'(H, A, B, C, D)
        ).
'known/1__20'(A, B) :-
        'known/1__21'(A, B).
'known/1__21'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__21__0'(G, A, B, C, D).
'known/1__21__0'([], A, B, _, _) :-
        'known/1__22'(A, B).
'known/1__21__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I==J),
            J==C,
            P=t(63,G,B),
            'chr novel_production'(G, P),
            'chr novel_production'(B, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(I==D),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__21__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__21__0'(H, A, B, C, D)
        ).
'known/1__21'(A, B) :-
        'known/1__22'(A, B).
'known/1__22'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr via_1'(D, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__22__0'(G, A, B, C, D).
'known/1__22__0'([], A, B, _, _) :-
        'known/1__23'(A, B).
'known/1__22__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I\==J),
            I==D,
            P=t(64,B,G),
            'chr novel_production'(B, P),
            'chr novel_production'(G, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(C\==J),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__22__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__22__0'(H, A, B, C, D)
        ).
'known/1__22'(A, B) :-
        'known/1__23'(A, B).
'known/1__23'(A, B) :-
        nonvar(A),
        A=(C\==D),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1, !,
        'known/1__23__0'(G, A, B, C, D).
'known/1__23__0'([], A, B, _, _) :-
        'known/1__24'(A, B).
'known/1__23__0'([G|H], A, B, C, D) :-
        (   G=suspension(_,F,_,_,_,_,E),
            F=mutable(active),
            nonvar(E),
            E=(I==J),
            J==C,
            P=t(64,G,B),
            'chr novel_production'(G, P),
            'chr novel_production'(B, P) ->
            'chr extend_history'(B, P),
            '$guard_entailment__activate_constraint'(L, K, B, M),
            (   L==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(K, B)
            ;   true
            ),
            known(I\==D),
            (   B=suspension(_,N,_,O,_,_,_),
                N=mutable(active),
                O=mutable(M) ->
                'chr update_mutable'(inactive, N),
                'known/1__23__0'(H, A, B, C, D)
            ;   true
            )
        ;   'known/1__23__0'(H, A, B, C, D)
        ).
'known/1__23'(A, B) :-
        'known/1__24'(A, B).
'known/1__24'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr novel_production'(B, 65), !,
        'chr extend_history'(B, 65),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(D==C),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__25'(A, B)
        ;   true
        ).
'known/1__24'(A, B) :-
        'known/1__25'(A, B).
'known/1__25'(A, B) :-
        nonvar(A),
        A=(C\==D),
        'chr novel_production'(B, 66), !,
        'chr extend_history'(B, 66),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(D\==C),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__26'(A, B)
        ;   true
        ).
'known/1__25'(A, B) :-
        'known/1__26'(A, B).
'known/1__26'(A, B) :-
        nonvar(A),
        A=(C\==D),
        D==C,
        'chr novel_production'(B, 67), !,
        'chr extend_history'(B, 67),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(fail),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__27'(A, B)
        ;   true
        ).
'known/1__26'(A, B) :-
        'known/1__27'(A, B).
'known/1__27'(A, B) :-
        nonvar(A),
        A=(C\==D),
        nonvar(D),
        nonvar(C),
        'chr lock'(C),
        functor(C, E, F),
        'chr unlock'(C), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, J, K),
            (   K==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(J, B)
            ;   true
            )
        ),
        (   functor(D, E, F) ->
            C=..[E|G],
            D=..[E|H],
            add_args_nmatch(G, H, I),
            known(I)
        ;   true
        ).
'known/1__27'(A, B) :-
        nonvar(A),
        A=(C==D),
        'chr novel_production'(B, 69), !,
        'chr extend_history'(B, 69),
        '$guard_entailment__activate_constraint'(F, E, B, G),
        (   F==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(E, B)
        ;   true
        ),
        known(C=D),
        (   B=suspension(_,H,_,I,_,_,_),
            H=mutable(active),
            I=mutable(G) ->
            'chr update_mutable'(inactive, H),
            'known/1__28'(A, B)
        ;   true
        ).
'known/1__27'(A, B) :-
        'known/1__28'(A, B).
'known/1__28'(A, B) :-
        nonvar(A),
        A=ground(C),
        'chr novel_production'(B, 70), !,
        'chr extend_history'(B, 70),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(nonvar(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__29'(A, B)
        ;   true
        ).
'known/1__28'(A, B) :-
        'known/1__29'(A, B).
'known/1__29'(A, B) :-
        nonvar(A),
        A=compound(C),
        'chr novel_production'(B, 71), !,
        'chr extend_history'(B, 71),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(nonvar(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__30'(A, B)
        ;   true
        ).
'known/1__29'(A, B) :-
        'known/1__30'(A, B).
'known/1__30'(A, B) :-
        nonvar(A),
        A=atomic(C),
        'chr novel_production'(B, 72), !,
        'chr extend_history'(B, 72),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(nonvar(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__31'(A, B)
        ;   true
        ).
'known/1__30'(A, B) :-
        'known/1__31'(A, B).
'known/1__31'(A, B) :-
        nonvar(A),
        A=number(C),
        'chr novel_production'(B, 73), !,
        'chr extend_history'(B, 73),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(nonvar(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__32'(A, B)
        ;   true
        ).
'known/1__31'(A, B) :-
        'known/1__32'(A, B).
'known/1__32'(A, B) :-
        nonvar(A),
        A=atom(C),
        'chr novel_production'(B, 74), !,
        'chr extend_history'(B, 74),
        '$guard_entailment__activate_constraint'(E, D, B, F),
        (   E==yes ->
            '$insert_in_store_known/1'(B),
            'attach_known/1'(D, B)
        ;   true
        ),
        known(nonvar(C)),
        (   B=suspension(_,G,_,H,_,_,_),
            G=mutable(active),
            H=mutable(F) ->
            'chr update_mutable'(inactive, G),
            'known/1__33'(A, B)
        ;   true
        ).
'known/1__32'(A, B) :-
        'known/1__33'(A, B).
'known/1__33'(A, B) :-
        nonvar(A),
        A=var(C),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        (   'chr sbag_member'(D, G),
            D=suspension(_,K,_,_,_,_,I),
            K=mutable(active),
            nonvar(I),
            I=nonvar(J),
            J==C ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(D, L, M),
        (   M==yes ->
            '$delete_from_store_known/1'(D),
            'detach_known/1'(L, D)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ),
        known(fail).
'known/1__33'(A, B) :-
        nonvar(A),
        A=nonvar(C),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        (   'chr sbag_member'(D, G),
            D=suspension(_,K,_,_,_,_,I),
            K=mutable(active),
            nonvar(I),
            I=var(J),
            J==C ->
            true
        ), !,
        '$guard_entailment__remove_constraint_internal'(D, L, M),
        (   M==yes ->
            '$delete_from_store_known/1'(D),
            'detach_known/1'(L, D)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ),
        known(fail).
'known/1__33'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        nonvar(C),
        C=(\+E),
        'chr via_1'(E, G),
        get_attr(G, guard_entailment, H),
        H=v(J,I,_),
        J/\1=:=1,
        (   'chr sbag_member'(F, I),
            F=suspension(_,L,_,_,_,_,K),
            L=mutable(active),
            K==E ->
            true
        ), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, M, N),
            (   N==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(M, B)
            ;   true
            )
        ),
        known(D).
'known/1__33'(A, B) :-
        'chr via_1'(A, C),
        get_attr(C, guard_entailment, D),
        D=v(F,E,_),
        F/\1=:=1, !,
        'known/1__33__0'(E, A, B).
'known/1__33__0'([], A, B) :-
        'known/1__34'(A, B).
'known/1__33__0'([C|D], A, B) :-
        (   C=suspension(_,I,_,_,_,_,E),
            I=mutable(active),
            nonvar(E),
            E=(F ;  G),
            nonvar(F),
            F=(\+H),
            H==A ->
            '$guard_entailment__remove_constraint_internal'(C, J, K),
            (   K==yes ->
                '$delete_from_store_known/1'(C),
                'detach_known/1'(J, C)
            ;   true
            ),
            '$guard_entailment__activate_constraint'(M, L, B, N),
            (   M==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(L, B)
            ;   true
            ),
            known(G),
            (   B=suspension(_,O,_,P,_,_,_),
                O=mutable(active),
                P=mutable(N) ->
                'chr update_mutable'(inactive, O),
                'known/1__33__0'(D, A, B)
            ;   true
            )
        ;   'known/1__33__0'(D, A, B)
        ).
'known/1__33'(A, B) :-
        'known/1__34'(A, B).
'known/1__34'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        nonvar(C),
        C=(E,_),
        nonvar(E),
        E=(\+F),
        'chr via_1'(F, H),
        get_attr(H, guard_entailment, I),
        I=v(K,J,_),
        K/\1=:=1,
        (   'chr sbag_member'(G, J),
            G=suspension(_,M,_,_,_,_,L),
            M=mutable(active),
            L==F ->
            true
        ), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ),
        known(D).
'known/1__34'(A, B) :-
        'chr via_1'(A, C),
        get_attr(C, guard_entailment, D),
        D=v(F,E,_),
        F/\1=:=1, !,
        'known/1__34__0'(E, A, B).
'known/1__34__0'([], A, B) :-
        'known/1__35'(A, B).
'known/1__34__0'([C|D], A, B) :-
        (   C=suspension(_,J,_,_,_,_,E),
            J=mutable(active),
            nonvar(E),
            E=(F ;  G),
            nonvar(F),
            F=(H,_),
            nonvar(H),
            H=(\+I),
            I==A ->
            '$guard_entailment__remove_constraint_internal'(C, K, L),
            (   L==yes ->
                '$delete_from_store_known/1'(C),
                'detach_known/1'(K, C)
            ;   true
            ),
            '$guard_entailment__activate_constraint'(N, M, B, O),
            (   N==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(M, B)
            ;   true
            ),
            known(G),
            (   B=suspension(_,P,_,Q,_,_,_),
                P=mutable(active),
                Q=mutable(O) ->
                'chr update_mutable'(inactive, P),
                'known/1__34__0'(D, A, B)
            ;   true
            )
        ;   'known/1__34__0'(D, A, B)
        ).
'known/1__34'(A, B) :-
        'known/1__35'(A, B).
'known/1__35'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        'chr via_1'(C, F),
        get_attr(F, guard_entailment, G),
        G=v(I,H,_),
        I/\1=:=1,
        (   'chr sbag_member'(E, H),
            E=suspension(_,L,_,_,_,_,J),
            L=mutable(active),
            nonvar(J),
            J=(\+K),
            K==C ->
            true
        ), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, M, N),
            (   N==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(M, B)
            ;   true
            )
        ),
        known(D).
'known/1__35'(A, B) :-
        nonvar(A),
        A=(\+C),
        'chr via_1'(C, D),
        get_attr(D, guard_entailment, E),
        E=v(G,F,_),
        G/\1=:=1, !,
        'known/1__35__0'(F, A, B, C).
'known/1__35__0'([], A, B, _) :-
        'known/1__36'(A, B).
'known/1__35__0'([D|E], A, B, C) :-
        (   D=suspension(_,I,_,_,_,_,F),
            I=mutable(active),
            nonvar(F),
            F=(G ;  H),
            G==C ->
            '$guard_entailment__remove_constraint_internal'(D, J, K),
            (   K==yes ->
                '$delete_from_store_known/1'(D),
                'detach_known/1'(J, D)
            ;   true
            ),
            '$guard_entailment__activate_constraint'(M, L, B, N),
            (   M==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(L, B)
            ;   true
            ),
            known(H),
            (   B=suspension(_,O,_,P,_,_,_),
                O=mutable(active),
                P=mutable(N) ->
                'chr update_mutable'(inactive, O),
                'known/1__35__0'(E, A, B, C)
            ;   true
            )
        ;   'known/1__35__0'(E, A, B, C)
        ).
'known/1__35'(A, B) :-
        'known/1__36'(A, B).
'known/1__36'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        nonvar(C),
        C=(E,_),
        'chr via_1'(E, G),
        get_attr(G, guard_entailment, H),
        H=v(J,I,_),
        J/\1=:=1,
        (   'chr sbag_member'(F, I),
            F=suspension(_,M,_,_,_,_,K),
            M=mutable(active),
            nonvar(K),
            K=(\+L),
            L==E ->
            true
        ), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ),
        known(D).
'known/1__36'(A, B) :-
        nonvar(A),
        A=(\+C),
        'chr via_1'(C, D),
        get_attr(D, guard_entailment, E),
        E=v(G,F,_),
        G/\1=:=1, !,
        'known/1__36__0'(F, A, B, C).
'known/1__36__0'([], A, B, _) :-
        'known/1__37'(A, B).
'known/1__36__0'([D|E], A, B, C) :-
        (   D=suspension(_,J,_,_,_,_,F),
            J=mutable(active),
            nonvar(F),
            F=(G ;  H),
            nonvar(G),
            G=(I,_),
            I==C ->
            '$guard_entailment__remove_constraint_internal'(D, K, L),
            (   L==yes ->
                '$delete_from_store_known/1'(D),
                'detach_known/1'(K, D)
            ;   true
            ),
            '$guard_entailment__activate_constraint'(N, M, B, O),
            (   N==yes ->
                '$insert_in_store_known/1'(B),
                'attach_known/1'(M, B)
            ;   true
            ),
            known(H),
            (   B=suspension(_,P,_,Q,_,_,_),
                P=mutable(active),
                Q=mutable(O) ->
                'chr update_mutable'(inactive, P),
                'known/1__36__0'(E, A, B, C)
            ;   true
            )
        ;   'known/1__36__0'(E, A, B, C)
        ).
'known/1__36'(A, B) :-
        'known/1__37'(A, B).
'known/1__37'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        C==fail, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(D).
'known/1__37'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        D==fail, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            )
        ),
        known(C).
'known/1__37'(A, B) :-
        nonvar(A),
        A=(C ;  _),
        C==true, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, D, E),
            (   E==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(D, B)
            ;   true
            )
        ).
'known/1__37'(A, B) :-
        nonvar(A),
        A=(_ ;  C),
        C==true, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, D, E),
            (   E==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(D, B)
            ;   true
            )
        ).
'known/1__37'(A, B) :-
        nonvar(A),
        A=(C ;  _),
        nonvar(C),
        C=(\+D),
        nonvar(D),
        D=functor(E,_,_),
        'chr via_1'(E, G),
        get_attr(G, guard_entailment, H),
        H=v(J,I,_),
        J/\1=:=1,
        'chr sbag_member'(F, I),
        F=suspension(_,M,_,_,_,_,K),
        M=mutable(active),
        nonvar(K),
        K=functor(L,_,_),
        L==E, !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, N, O),
            (   O==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(N, B)
            ;   true
            )
        ).
'known/1__37'(A, B) :-
        nonvar(A),
        A=functor(C,_,_),
        'chr via_1'(C, D),
        get_attr(D, guard_entailment, E),
        E=v(G,F,_),
        G/\1=:=1, !,
        'known/1__37__0'(F, A, B, C).
'known/1__37__0'([], A, B, _) :-
        'known/1__38'(A, B).
'known/1__37__0'([D|E], A, B, C) :-
        (   D=suspension(_,J,_,_,_,_,F),
            J=mutable(active),
            nonvar(F),
            F=(G ;  _),
            nonvar(G),
            G=(\+H),
            nonvar(H),
            H=functor(I,_,_),
            I==C ->
            '$guard_entailment__remove_constraint_internal'(D, K, L),
            (   L==yes ->
                '$delete_from_store_known/1'(D),
                'detach_known/1'(K, D)
            ;   true
            ),
            'known/1__37__0'(E, A, B, C)
        ;   'known/1__37__0'(E, A, B, C)
        ).
'known/1__37'(A, B) :-
        'known/1__38'(A, B).
'known/1__38'(A, B) :-
        nonvar(A),
        A=(C ;  D),
        nonvar(C),
        C=(\+E),
        nonvar(E),
        E=functor(F,G,H),
        nonvar(F),
        'chr lock'(F),
        'chr lock'(G),
        'chr lock'(H),
        functor(F, G, H),
        'chr unlock'(F),
        'chr unlock'(G),
        'chr unlock'(H), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, I, J),
            (   J==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(I, B)
            ;   true
            )
        ),
        known(D).
'known/1__38'(A, B) :-
        nonvar(A),
        A=(C ;  _),
        nonvar(C),
        C=(\+D),
        nonvar(D),
        D=functor(E,F,G),
        nonvar(E),
        'chr lock'(E),
        'chr lock'(F),
        'chr lock'(G),
        \+functor(E,F,G),
        'chr unlock'(E),
        'chr unlock'(F),
        'chr unlock'(G), !,
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, H, I),
            (   I==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(H, B)
            ;   true
            )
        ).
'known/1__38'(_, A) :-
        '$guard_entailment__activate_constraint'(C, B, A, _),
        (   C==yes ->
            '$insert_in_store_known/1'(A),
            'attach_known/1'(B, A)
        ;   true
        ).
test(A) :-
        'test/1__0'(A, _).
'test/1__0'(_, _) :-
        'chr default_store'(C),
        get_attr(C, guard_entailment, B),
        B=v(E,D,_),
        E/\1=:=1,
        (   'chr sbag_member'(A, D),
            A=suspension(_,G,_,_,_,_,F),
            G=mutable(active),
            F==fail ->
            true
        ), !.
'test/1__0'(A, _) :-
        'chr via_1'(A, C),
        get_attr(C, guard_entailment, D),
        D=v(F,E,_),
        F/\1=:=1,
        (   'chr sbag_member'(B, E),
            B=suspension(_,H,_,_,_,_,G),
            H=mutable(active),
            G==A ->
            true
        ), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B\==C),
        nonvar(C),
        'chr lock'(C),
        functor(C, D, E),
        'chr unlock'(C), !,
        C=..[_|F],
        length(G, E),
        H=..[D|G],
        add_args_nmatch(G, F, I),
        J=(\+functor(B,D,E) ;  functor(B,D,E),B=H,I),
        test(J).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B\==C),
        nonvar(B), !,
        test(C\==B).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        'chr via_2'(B, C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        (   'chr sbag_member'(D, G),
            D=suspension(_,L,_,_,_,_,I),
            L=mutable(active),
            nonvar(I),
            I=(J=:=K),
            J==B,
            K==C ->
            true
        ), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        number(C),
        'chr via_1'(B, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=:=K),
        J==B,
        number(K),
        K=<C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        number(B),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=:=K),
        J==C,
        number(K),
        B=<K, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        number(C),
        'chr via_1'(B, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=<K),
        J==B,
        number(K),
        K=<C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        number(B),
        'chr via_1'(C, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=<K),
        K==C,
        number(J),
        B=<J, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=\=C),
        number(C),
        'chr via_1'(B, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=<K),
        J==B,
        number(K),
        C>K, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=\=C),
        number(C),
        'chr via_1'(B, E),
        get_attr(E, guard_entailment, F),
        F=v(H,G,_),
        H/\1=:=1,
        'chr sbag_member'(D, G),
        D=suspension(_,L,_,_,_,_,I),
        L=mutable(active),
        nonvar(I),
        I=(J=<K),
        K==B,
        number(J),
        C<J, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B>C), !,
        test(C<B).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B>=C), !,
        test(C=<B).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B<C), !,
        test((B=<C,B=\=C)).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B is C), !,
        test(B=:=C).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B ;  C),
        B==fail, !,
        test(C).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B ;  C),
        C==fail, !,
        test(B).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        'chr lock'(B),
        'chr lock'(C),
        B=C,
        'chr unlock'(B),
        'chr unlock'(C), !,
        B=C.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        ground(C),
        ground(B), !,
        B=C.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        var(C),
        nonvar(B), !,
        test(C=B).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        nonvar(C),
        var(B),
        'chr default_store'(F),
        get_attr(F, guard_entailment, E),
        E=v(H,_,G),
        H/\2=:=2,
        'chr sbag_member'(D, G),
        D=suspension(_,J,_,_,_,_,I),
        J=mutable(active),
        'chr lock'(C),
        'chr lock'(I),
        functor(C, K, L),
        L>0,
        C=..[K|M],
        \+all_unique_vars(M,I),
        'chr unlock'(C),
        'chr unlock'(I), !,
        N=(functor(B,K,L),B=C),
        test(N).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        nonvar(C),
        var(B),
        'chr lock'(C),
        functor(C, D, E),
        C=..[D|_],
        'chr unlock'(C), !,
        F=functor(B,D,E),
        test(F).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=C),
        nonvar(C),
        nonvar(B),
        'chr lock'(C),
        functor(C, D, E),
        C=..[D|F],
        'chr unlock'(C), !,
        functor(B, D, E),
        B=..[D|G],
        add_args_unif(G, F, H),
        test(H).
'test/1__0'(A, _) :-
        nonvar(A),
        A=functor(B,C,D),
        ground(D),
        ground(C),
        var(B),
        'chr default_store'(G),
        get_attr(G, guard_entailment, F),
        F=v(I,_,H),
        I/\2=:=2,
        'chr sbag_member'(E, H),
        E=suspension(_,K,_,_,_,_,J),
        K=mutable(active),
        'chr lock'(B),
        'chr lock'(J),
        \+memberchk_eq(B,J),
        'chr unlock'(B),
        'chr unlock'(J), !,
        functor(B, C, D).
'test/1__0'(A, _) :-
        A==true, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B==C),
        B==C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=:=C),
        B==C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        B==C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        ground(C),
        ground(B),
        B=<C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=<C),
        ground(C),
        ground(B),
        B>C, !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=:=C),
        ground(C),
        ground(B),
        B=:=C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=:=C),
        ground(C),
        ground(B),
        B=\=C, !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=\=C),
        ground(C),
        ground(B),
        B=\=C, !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B=\=C),
        ground(C),
        ground(B),
        B=:=C, !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=functor(B,C,D),
        nonvar(B),
        'chr lock'(B),
        'chr lock'(C),
        'chr lock'(D),
        functor(B, C, D),
        'chr unlock'(B),
        'chr unlock'(C),
        'chr unlock'(D), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=functor(B,_,_),
        nonvar(B), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=ground(B),
        ground(B), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=number(B),
        number(B), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=float(B),
        float(B), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=integer(B),
        integer(B), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=number(B),
        nonvar(B), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=float(B),
        nonvar(B), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=integer(B),
        nonvar(B), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=functor(C,D,E),
        nonvar(C),
        'chr lock'(C),
        'chr lock'(D),
        'chr lock'(E),
        functor(C, D, E),
        'chr unlock'(C),
        'chr unlock'(D),
        'chr unlock'(E), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=functor(C,_,_),
        nonvar(C), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=ground(C),
        ground(C), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=number(C),
        number(C), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=float(C),
        float(C), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=integer(C),
        integer(C), !,
        fail.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=number(C),
        nonvar(C), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=float(C),
        nonvar(C), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(\+B),
        nonvar(B),
        B=integer(C),
        nonvar(C), !.
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B,C), !,
        test(B),
        known(B),
        test(C).
'test/1__0'(A, _) :-
        nonvar(A),
        A=(B ;  C), !,
        negate_b(B, D),
        negate_b(C, E),
        (   known(E),
            test(B)
        ;   known(D),
            test(C)
        ).
'test/1__0'(A, _) :-
        'chr default_store'(D),
        get_attr(D, guard_entailment, C),
        C=v(F,E,_),
        F/\1=:=1,
        'chr sbag_member'(B, E),
        B=suspension(_,J,_,_,_,_,G),
        J=mutable(active),
        nonvar(G),
        G=(H ;  I), !,
        '$guard_entailment__remove_constraint_internal'(B, L, M),
        (   M==yes ->
            '$delete_from_store_known/1'(B),
            'detach_known/1'(L, B)
        ;   true
        ),
        \+try(H,A), !,
        negate_b(H, K),
        known(K),
        \+try(I,A).
'test/1__0'(_, _) :- !,
        fail.
cleanup :-
        'cleanup/0__0'(_).
'cleanup/0__0'(A) :-
        'chr default_store'(C),
        get_attr(C, guard_entailment, B),
        B=v(E,D,_),
        E/\1=:=1, !,
        'cleanup/0__0__0'(D, A).
'cleanup/0__0__0'([], A) :-
        'cleanup/0__1'(A).
'cleanup/0__0__0'([B|C], A) :-
        (   B=suspension(_,D,_,_,_,_,_),
            D=mutable(active) ->
            '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_known/1'(B),
                'detach_known/1'(E, B)
            ;   true
            ),
            'cleanup/0__0__0'(C, A)
        ;   'cleanup/0__0__0'(C, A)
        ).
'cleanup/0__0'(A) :-
        'cleanup/0__1'(A).
'cleanup/0__1'(A) :-
        'chr default_store'(C),
        get_attr(C, guard_entailment, B),
        B=v(E,_,D),
        E/\2=:=2, !,
        'cleanup/0__1__0'(D, A).
'cleanup/0__1__0'([], A) :-
        'cleanup/0__2'(A).
'cleanup/0__1__0'([B|C], A) :-
        (   B=suspension(_,D,_,_,_,_,_),
            D=mutable(active) ->
            '$guard_entailment__remove_constraint_internal'(B, E, F),
            (   F==yes ->
                '$delete_from_store_variables/1'(B),
                'detach_variables/1'(E, B)
            ;   true
            ),
            'cleanup/0__1__0'(C, A)
        ;   'cleanup/0__1__0'(C, A)
        ).
'cleanup/0__1'(A) :-
        'cleanup/0__2'(A).
'cleanup/0__2'(_) :- !.
variables(A) :-
        'variables/1__0'(A, _).
'variables/1__0'(A, B) :-
        'chr default_store'(E),
        get_attr(E, guard_entailment, D),
        D=v(G,F,_),
        G/\1=:=1,
        'chr sbag_member'(C, F),
        C=suspension(_,L,_,_,_,_,H),
        L=mutable(active),
        nonvar(H),
        H=functor(I,J,K),
        ground(K),
        ground(J),
        var(I), !,
        '$guard_entailment__remove_constraint_internal'(C, O, P),
        (   P==yes ->
            '$delete_from_store_known/1'(C),
            'detach_known/1'(O, C)
        ;   true
        ),
        (   var(B) ->
            true
        ;   '$guard_entailment__remove_constraint_internal'(B, Q, R),
            (   R==yes ->
                '$delete_from_store_variables/1'(B),
                'detach_variables/1'(Q, B)
            ;   true
            )
        ),
        functor(I, J, K),
        I=..[_|M],
        append(M, A, N),
        variables(N).
'variables/1__0'(A, B) :-
        (   var(B) ->
            '$guard_entailment__insert_constraint_internal'(D, C, B, guard_entailment:'variables/1__0'(A,B), variables(A), [A])
        ;   '$guard_entailment__activate_constraint'(D, C, B, _)
        ),
        (   D==yes ->
            '$insert_in_store_variables/1'(B),
            'attach_variables/1'(C, B)
        ;   true
        ).
:- multifile
        chr:'$chr_module'/1.
chr:'$chr_module'(guard_entailment).
